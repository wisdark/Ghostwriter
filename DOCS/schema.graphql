schema {
  query: query_root
  mutation: mutation_root
  subscription: subscription_root
}

"""whether this query should be cached (Hasura Cloud only)"""
directive @cached(
  """measured in seconds"""
  ttl: Int! = 60

  """refresh the cache entry"""
  refresh: Boolean! = false
) on QUERY

"""
Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'.
"""
input Boolean_comparison_exp {
  _eq: Boolean
  _gt: Boolean
  _gte: Boolean
  _in: [Boolean!]
  _is_null: Boolean
  _lt: Boolean
  _lte: Boolean
  _neq: Boolean
  _nin: [Boolean!]
}

"""
Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'.
"""
input Int_comparison_exp {
  _eq: Int
  _gt: Int
  _gte: Int
  _in: [Int!]
  _is_null: Boolean
  _lt: Int
  _lte: Int
  _neq: Int
  _nin: [Int!]
}

type LoginResponse {
  expires: date
  token: String!
}

type ReportResponse {
  docxUrl: String!
  pptxUrl: String!
  reportData: String!
  xlsxUrl: String!
}

"""
Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'.
"""
input String_comparison_exp {
  _eq: String
  _gt: String
  _gte: String

  """does the column match the given case-insensitive pattern"""
  _ilike: String
  _in: [String!]

  """
  does the column match the given POSIX regular expression, case insensitive
  """
  _iregex: String
  _is_null: Boolean

  """does the column match the given pattern"""
  _like: String
  _lt: String
  _lte: String
  _neq: String

  """does the column NOT match the given case-insensitive pattern"""
  _nilike: String
  _nin: [String!]

  """
  does the column NOT match the given POSIX regular expression, case insensitive
  """
  _niregex: String

  """does the column NOT match the given pattern"""
  _nlike: String

  """
  does the column NOT match the given POSIX regular expression, case sensitive
  """
  _nregex: String

  """does the column NOT match the given SQL regular expression"""
  _nsimilar: String

  """
  does the column match the given POSIX regular expression, case sensitive
  """
  _regex: String

  """does the column match the given SQL regular expression"""
  _similar: String
}

type WhoamiOutput {
  expires: date
  role: String!
  username: String!
}

scalar _inet

"""
Boolean expression to compare columns of type "_inet". All fields are combined with logical 'AND'.
"""
input _inet_comparison_exp {
  _eq: _inet
  _gt: _inet
  _gte: _inet
  _in: [_inet!]
  _is_null: Boolean
  _lt: _inet
  _lte: _inet
  _neq: _inet
  _nin: [_inet!]
}

"""
columns and relationships of "shepherd_activitytype"
"""
type activityType {
  activity: String!

  """An array relationship"""
  cloudServers(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!

  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!
  id: bigint!

  """An array relationship"""
  staticServers(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!
}

"""
Boolean expression to filter rows from the table "shepherd_activitytype". All fields are combined with a logical 'AND'.
"""
input activityType_bool_exp {
  _and: [activityType_bool_exp!]
  _not: activityType_bool_exp
  _or: [activityType_bool_exp!]
  activity: String_comparison_exp
  cloudServers: cloudServer_bool_exp
  domains: domainCheckout_bool_exp
  id: bigint_comparison_exp
  staticServers: serverCheckout_bool_exp
}

"""Ordering options when selecting data from "shepherd_activitytype"."""
input activityType_order_by {
  activity: order_by
  cloudServers_aggregate: cloudServer_aggregate_order_by
  domains_aggregate: domainCheckout_aggregate_order_by
  id: order_by
  staticServers_aggregate: serverCheckout_aggregate_order_by
}

"""
select columns of table "shepherd_activitytype"
"""
enum activityType_select_column {
  """column name"""
  activity

  """column name"""
  id
}

"""
columns and relationships of "reporting_archive"
"""
type archive {
  id: bigint!

  """An object relationship"""
  project: project
  projectId: bigint
  reportArchive: String!
}

"""
order by aggregate values of table "reporting_archive"
"""
input archive_aggregate_order_by {
  avg: archive_avg_order_by
  count: order_by
  max: archive_max_order_by
  min: archive_min_order_by
  stddev: archive_stddev_order_by
  stddev_pop: archive_stddev_pop_order_by
  stddev_samp: archive_stddev_samp_order_by
  sum: archive_sum_order_by
  var_pop: archive_var_pop_order_by
  var_samp: archive_var_samp_order_by
  variance: archive_variance_order_by
}

"""
order by avg() on columns of table "reporting_archive"
"""
input archive_avg_order_by {
  id: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "reporting_archive". All fields are combined with a logical 'AND'.
"""
input archive_bool_exp {
  _and: [archive_bool_exp!]
  _not: archive_bool_exp
  _or: [archive_bool_exp!]
  id: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  reportArchive: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "reporting_archive"
"""
input archive_inc_input {
  projectId: bigint
}

"""
order by max() on columns of table "reporting_archive"
"""
input archive_max_order_by {
  id: order_by
  projectId: order_by
  reportArchive: order_by
}

"""
order by min() on columns of table "reporting_archive"
"""
input archive_min_order_by {
  id: order_by
  projectId: order_by
  reportArchive: order_by
}

"""
response of any mutation on the table "reporting_archive"
"""
type archive_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [archive!]!
}

"""Ordering options when selecting data from "reporting_archive"."""
input archive_order_by {
  id: order_by
  project: project_order_by
  projectId: order_by
  reportArchive: order_by
}

"""primary key columns input for table: archive"""
input archive_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_archive"
"""
enum archive_select_column {
  """column name"""
  id

  """column name"""
  projectId

  """column name"""
  reportArchive
}

"""
input type for updating data in table "reporting_archive"
"""
input archive_set_input {
  projectId: bigint
  reportArchive: String
}

"""
order by stddev() on columns of table "reporting_archive"
"""
input archive_stddev_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "reporting_archive"
"""
input archive_stddev_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "reporting_archive"
"""
input archive_stddev_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "reporting_archive"
"""
input archive_sum_order_by {
  id: order_by
  projectId: order_by
}

"""
order by var_pop() on columns of table "reporting_archive"
"""
input archive_var_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "reporting_archive"
"""
input archive_var_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "reporting_archive"
"""
input archive_variance_order_by {
  id: order_by
  projectId: order_by
}

"""
columns and relationships of "shepherd_auxserveraddress"
"""
type auxServerAddresses {
  ipAddress: inet
  primary: Boolean!

  """An object relationship"""
  server: staticServer!
  staticServerId: bigint!
}

"""
order by aggregate values of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_aggregate_order_by {
  avg: auxServerAddresses_avg_order_by
  count: order_by
  max: auxServerAddresses_max_order_by
  min: auxServerAddresses_min_order_by
  stddev: auxServerAddresses_stddev_order_by
  stddev_pop: auxServerAddresses_stddev_pop_order_by
  stddev_samp: auxServerAddresses_stddev_samp_order_by
  sum: auxServerAddresses_sum_order_by
  var_pop: auxServerAddresses_var_pop_order_by
  var_samp: auxServerAddresses_var_samp_order_by
  variance: auxServerAddresses_variance_order_by
}

"""
input type for inserting array relation for remote table "shepherd_auxserveraddress"
"""
input auxServerAddresses_arr_rel_insert_input {
  data: [auxServerAddresses_insert_input!]!

  """upsert condition"""
  on_conflict: auxServerAddresses_on_conflict
}

"""
order by avg() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_avg_order_by {
  staticServerId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_auxserveraddress". All fields are combined with a logical 'AND'.
"""
input auxServerAddresses_bool_exp {
  _and: [auxServerAddresses_bool_exp!]
  _not: auxServerAddresses_bool_exp
  _or: [auxServerAddresses_bool_exp!]
  ipAddress: inet_comparison_exp
  primary: Boolean_comparison_exp
  server: staticServer_bool_exp
  staticServerId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "shepherd_auxserveraddress"
"""
enum auxServerAddresses_constraint {
  """unique or primary key constraint"""
  shepherd_auxserveraddress_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_auxserveraddress"
"""
input auxServerAddresses_inc_input {
  staticServerId: bigint
}

"""
input type for inserting data into table "shepherd_auxserveraddress"
"""
input auxServerAddresses_insert_input {
  ipAddress: inet
  primary: Boolean
  server: staticServer_obj_rel_insert_input
  staticServerId: bigint
}

"""
order by max() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_max_order_by {
  staticServerId: order_by
}

"""
order by min() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_min_order_by {
  staticServerId: order_by
}

"""
response of any mutation on the table "shepherd_auxserveraddress"
"""
type auxServerAddresses_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [auxServerAddresses!]!
}

"""
on_conflict condition type for table "shepherd_auxserveraddress"
"""
input auxServerAddresses_on_conflict {
  constraint: auxServerAddresses_constraint!
  update_columns: [auxServerAddresses_update_column!]! = []
  where: auxServerAddresses_bool_exp
}

"""Ordering options when selecting data from "shepherd_auxserveraddress"."""
input auxServerAddresses_order_by {
  ipAddress: order_by
  primary: order_by
  server: staticServer_order_by
  staticServerId: order_by
}

"""
select columns of table "shepherd_auxserveraddress"
"""
enum auxServerAddresses_select_column {
  """column name"""
  ipAddress

  """column name"""
  primary

  """column name"""
  staticServerId
}

"""
input type for updating data in table "shepherd_auxserveraddress"
"""
input auxServerAddresses_set_input {
  ipAddress: inet
  primary: Boolean
  staticServerId: bigint
}

"""
order by stddev() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_stddev_order_by {
  staticServerId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_stddev_pop_order_by {
  staticServerId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_stddev_samp_order_by {
  staticServerId: order_by
}

"""
order by sum() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_sum_order_by {
  staticServerId: order_by
}

"""
update columns of table "shepherd_auxserveraddress"
"""
enum auxServerAddresses_update_column {
  """column name"""
  ipAddress

  """column name"""
  primary

  """column name"""
  staticServerId
}

"""
order by var_pop() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_var_pop_order_by {
  staticServerId: order_by
}

"""
order by var_samp() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_var_samp_order_by {
  staticServerId: order_by
}

"""
order by variance() on columns of table "shepherd_auxserveraddress"
"""
input auxServerAddresses_variance_order_by {
  staticServerId: order_by
}

scalar bigint

"""
Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'.
"""
input bigint_comparison_exp {
  _eq: bigint
  _gt: bigint
  _gte: bigint
  _in: [bigint!]
  _is_null: Boolean
  _lt: bigint
  _lte: bigint
  _neq: bigint
  _nin: [bigint!]
}

type checkoutResponse {
  result: String!
}

"""
columns and relationships of "rolodex_client"
"""
type client {
  address: String
  codename: String

  """An array relationship"""
  comments(
    """distinct select on columns"""
    distinct_on: [clientNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientNote_order_by!]

    """filter the rows returned"""
    where: clientNote_bool_exp
  ): [clientNote!]!

  """An array relationship"""
  contacts(
    """distinct select on columns"""
    distinct_on: [contacts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contacts_order_by!]

    """filter the rows returned"""
    where: contacts_bool_exp
  ): [contacts!]!

  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!
  id: bigint!

  """An array relationship"""
  invites(
    """distinct select on columns"""
    distinct_on: [clientInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientInvite_order_by!]

    """filter the rows returned"""
    where: clientInvite_bool_exp
  ): [clientInvite!]!
  name: String!
  note: String

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """An array relationship"""
  servers(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!
  shortName: String

  """An array relationship"""
  templates(
    """distinct select on columns"""
    distinct_on: [template_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [template_order_by!]

    """filter the rows returned"""
    where: template_bool_exp
  ): [template!]!
  timezone: String!
}

"""
columns and relationships of "rolodex_clientinvite"
"""
type clientInvite {
  """An object relationship"""
  client: client!
  clientId: bigint!
  comment: String
  id: bigint!

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """An object relationship"""
  user: user!
  userId: bigint!
}

"""
order by aggregate values of table "rolodex_clientinvite"
"""
input clientInvite_aggregate_order_by {
  avg: clientInvite_avg_order_by
  count: order_by
  max: clientInvite_max_order_by
  min: clientInvite_min_order_by
  stddev: clientInvite_stddev_order_by
  stddev_pop: clientInvite_stddev_pop_order_by
  stddev_samp: clientInvite_stddev_samp_order_by
  sum: clientInvite_sum_order_by
  var_pop: clientInvite_var_pop_order_by
  var_samp: clientInvite_var_samp_order_by
  variance: clientInvite_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_clientinvite"
"""
input clientInvite_arr_rel_insert_input {
  data: [clientInvite_insert_input!]!

  """upsert condition"""
  on_conflict: clientInvite_on_conflict
}

"""
order by avg() on columns of table "rolodex_clientinvite"
"""
input clientInvite_avg_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_clientinvite". All fields are combined with a logical 'AND'.
"""
input clientInvite_bool_exp {
  _and: [clientInvite_bool_exp!]
  _not: clientInvite_bool_exp
  _or: [clientInvite_bool_exp!]
  client: client_bool_exp
  clientId: bigint_comparison_exp
  comment: String_comparison_exp
  id: bigint_comparison_exp
  projects: project_bool_exp
  user: user_bool_exp
  userId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_clientinvite"
"""
enum clientInvite_constraint {
  """unique or primary key constraint"""
  rolodex_clientinvite_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_clientinvite"
"""
input clientInvite_inc_input {
  clientId: bigint
  userId: bigint
}

"""
input type for inserting data into table "rolodex_clientinvite"
"""
input clientInvite_insert_input {
  client: client_obj_rel_insert_input
  clientId: bigint
  comment: String
  projects: project_arr_rel_insert_input
  userId: bigint
}

"""
order by max() on columns of table "rolodex_clientinvite"
"""
input clientInvite_max_order_by {
  clientId: order_by
  comment: order_by
  id: order_by
  userId: order_by
}

"""
order by min() on columns of table "rolodex_clientinvite"
"""
input clientInvite_min_order_by {
  clientId: order_by
  comment: order_by
  id: order_by
  userId: order_by
}

"""
response of any mutation on the table "rolodex_clientinvite"
"""
type clientInvite_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [clientInvite!]!
}

"""
on_conflict condition type for table "rolodex_clientinvite"
"""
input clientInvite_on_conflict {
  constraint: clientInvite_constraint!
  update_columns: [clientInvite_update_column!]! = []
  where: clientInvite_bool_exp
}

"""Ordering options when selecting data from "rolodex_clientinvite"."""
input clientInvite_order_by {
  client: client_order_by
  clientId: order_by
  comment: order_by
  id: order_by
  projects_aggregate: project_aggregate_order_by
  user: user_order_by
  userId: order_by
}

"""primary key columns input for table: clientInvite"""
input clientInvite_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_clientinvite"
"""
enum clientInvite_select_column {
  """column name"""
  clientId

  """column name"""
  comment

  """column name"""
  id

  """column name"""
  userId
}

"""
input type for updating data in table "rolodex_clientinvite"
"""
input clientInvite_set_input {
  clientId: bigint
  comment: String
  userId: bigint
}

"""
order by stddev() on columns of table "rolodex_clientinvite"
"""
input clientInvite_stddev_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_clientinvite"
"""
input clientInvite_stddev_pop_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_clientinvite"
"""
input clientInvite_stddev_samp_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
order by sum() on columns of table "rolodex_clientinvite"
"""
input clientInvite_sum_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
update columns of table "rolodex_clientinvite"
"""
enum clientInvite_update_column {
  """column name"""
  clientId

  """column name"""
  comment

  """column name"""
  userId
}

"""
order by var_pop() on columns of table "rolodex_clientinvite"
"""
input clientInvite_var_pop_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
order by var_samp() on columns of table "rolodex_clientinvite"
"""
input clientInvite_var_samp_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
order by variance() on columns of table "rolodex_clientinvite"
"""
input clientInvite_variance_order_by {
  clientId: order_by
  id: order_by
  userId: order_by
}

"""
columns and relationships of "rolodex_clientnote"
"""
type clientNote {
  """An object relationship"""
  client: client!
  clientId: bigint!
  id: bigint!
  note: String
  operatorId: bigint
  timestamp: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "rolodex_clientnote"
"""
input clientNote_aggregate_order_by {
  avg: clientNote_avg_order_by
  count: order_by
  max: clientNote_max_order_by
  min: clientNote_min_order_by
  stddev: clientNote_stddev_order_by
  stddev_pop: clientNote_stddev_pop_order_by
  stddev_samp: clientNote_stddev_samp_order_by
  sum: clientNote_sum_order_by
  var_pop: clientNote_var_pop_order_by
  var_samp: clientNote_var_samp_order_by
  variance: clientNote_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_clientnote"
"""
input clientNote_arr_rel_insert_input {
  data: [clientNote_insert_input!]!

  """upsert condition"""
  on_conflict: clientNote_on_conflict
}

"""
order by avg() on columns of table "rolodex_clientnote"
"""
input clientNote_avg_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_clientnote". All fields are combined with a logical 'AND'.
"""
input clientNote_bool_exp {
  _and: [clientNote_bool_exp!]
  _not: clientNote_bool_exp
  _or: [clientNote_bool_exp!]
  client: client_bool_exp
  clientId: bigint_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  timestamp: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "rolodex_clientnote"
"""
enum clientNote_constraint {
  """unique or primary key constraint"""
  rolodex_clientnote_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_clientnote"
"""
input clientNote_inc_input {
  clientId: bigint
}

"""
input type for inserting data into table "rolodex_clientnote"
"""
input clientNote_insert_input {
  client: client_obj_rel_insert_input
  clientId: bigint
  note: String
}

"""
order by max() on columns of table "rolodex_clientnote"
"""
input clientNote_max_order_by {
  clientId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "rolodex_clientnote"
"""
input clientNote_min_order_by {
  clientId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "rolodex_clientnote"
"""
type clientNote_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [clientNote!]!
}

"""
on_conflict condition type for table "rolodex_clientnote"
"""
input clientNote_on_conflict {
  constraint: clientNote_constraint!
  update_columns: [clientNote_update_column!]! = []
  where: clientNote_bool_exp
}

"""Ordering options when selecting data from "rolodex_clientnote"."""
input clientNote_order_by {
  client: client_order_by
  clientId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
  user: user_order_by
}

"""primary key columns input for table: clientNote"""
input clientNote_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_clientnote"
"""
enum clientNote_select_column {
  """column name"""
  clientId

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  timestamp
}

"""
input type for updating data in table "rolodex_clientnote"
"""
input clientNote_set_input {
  clientId: bigint
  note: String
}

"""
order by stddev() on columns of table "rolodex_clientnote"
"""
input clientNote_stddev_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_clientnote"
"""
input clientNote_stddev_pop_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_clientnote"
"""
input clientNote_stddev_samp_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by sum() on columns of table "rolodex_clientnote"
"""
input clientNote_sum_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
update columns of table "rolodex_clientnote"
"""
enum clientNote_update_column {
  """column name"""
  clientId

  """column name"""
  note
}

"""
order by var_pop() on columns of table "rolodex_clientnote"
"""
input clientNote_var_pop_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by var_samp() on columns of table "rolodex_clientnote"
"""
input clientNote_var_samp_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by variance() on columns of table "rolodex_clientnote"
"""
input clientNote_variance_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_client". All fields are combined with a logical 'AND'.
"""
input client_bool_exp {
  _and: [client_bool_exp!]
  _not: client_bool_exp
  _or: [client_bool_exp!]
  address: String_comparison_exp
  codename: String_comparison_exp
  comments: clientNote_bool_exp
  contacts: contacts_bool_exp
  domains: domainCheckout_bool_exp
  id: bigint_comparison_exp
  invites: clientInvite_bool_exp
  name: String_comparison_exp
  note: String_comparison_exp
  projects: project_bool_exp
  servers: serverCheckout_bool_exp
  shortName: String_comparison_exp
  templates: template_bool_exp
  timezone: String_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_client"
"""
enum client_constraint {
  """unique or primary key constraint"""
  rolodex_client_name_key

  """unique or primary key constraint"""
  rolodex_client_pkey
}

"""
input type for inserting data into table "rolodex_client"
"""
input client_insert_input {
  address: String
  codename: String
  comments: clientNote_arr_rel_insert_input
  contacts: contacts_arr_rel_insert_input
  invites: clientInvite_arr_rel_insert_input
  name: String
  note: String
  projects: project_arr_rel_insert_input
  servers: serverCheckout_arr_rel_insert_input
  shortName: String
  timezone: String
}

"""
response of any mutation on the table "rolodex_client"
"""
type client_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [client!]!
}

"""
input type for inserting object relation for remote table "rolodex_client"
"""
input client_obj_rel_insert_input {
  data: client_insert_input!

  """upsert condition"""
  on_conflict: client_on_conflict
}

"""
on_conflict condition type for table "rolodex_client"
"""
input client_on_conflict {
  constraint: client_constraint!
  update_columns: [client_update_column!]! = []
  where: client_bool_exp
}

"""Ordering options when selecting data from "rolodex_client"."""
input client_order_by {
  address: order_by
  codename: order_by
  comments_aggregate: clientNote_aggregate_order_by
  contacts_aggregate: contacts_aggregate_order_by
  domains_aggregate: domainCheckout_aggregate_order_by
  id: order_by
  invites_aggregate: clientInvite_aggregate_order_by
  name: order_by
  note: order_by
  projects_aggregate: project_aggregate_order_by
  servers_aggregate: serverCheckout_aggregate_order_by
  shortName: order_by
  templates_aggregate: template_aggregate_order_by
  timezone: order_by
}

"""primary key columns input for table: client"""
input client_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_client"
"""
enum client_select_column {
  """column name"""
  address

  """column name"""
  codename

  """column name"""
  id

  """column name"""
  name

  """column name"""
  note

  """column name"""
  shortName

  """column name"""
  timezone
}

"""
input type for updating data in table "rolodex_client"
"""
input client_set_input {
  address: String
  codename: String
  name: String
  note: String
  shortName: String
  timezone: String
}

"""
update columns of table "rolodex_client"
"""
enum client_update_column {
  """column name"""
  address

  """column name"""
  codename

  """column name"""
  name

  """column name"""
  note

  """column name"""
  shortName

  """column name"""
  timezone
}

"""
columns and relationships of "shepherd_transientserver"
"""
type cloudServer {
  """An object relationship"""
  activityType: activityType!
  activityTypeId: bigint!
  auxAddress: _inet

  """An array relationship"""
  domainServerConnections(
    """distinct select on columns"""
    distinct_on: [domainServerConnection_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainServerConnection_order_by!]

    """filter the rows returned"""
    where: domainServerConnection_bool_exp
  ): [domainServerConnection!]!
  id: bigint!
  ipAddress: inet!
  name: String
  note: String
  operatorId: bigint

  """An object relationship"""
  project: project
  projectId: bigint

  """An object relationship"""
  serverProvider: serverProvider
  serverProviderId: bigint

  """An object relationship"""
  serverRole: serverRole!
  serverRoleId: bigint!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "shepherd_transientserver"
"""
input cloudServer_aggregate_order_by {
  avg: cloudServer_avg_order_by
  count: order_by
  max: cloudServer_max_order_by
  min: cloudServer_min_order_by
  stddev: cloudServer_stddev_order_by
  stddev_pop: cloudServer_stddev_pop_order_by
  stddev_samp: cloudServer_stddev_samp_order_by
  sum: cloudServer_sum_order_by
  var_pop: cloudServer_var_pop_order_by
  var_samp: cloudServer_var_samp_order_by
  variance: cloudServer_variance_order_by
}

"""
input type for inserting array relation for remote table "shepherd_transientserver"
"""
input cloudServer_arr_rel_insert_input {
  data: [cloudServer_insert_input!]!

  """upsert condition"""
  on_conflict: cloudServer_on_conflict
}

"""
order by avg() on columns of table "shepherd_transientserver"
"""
input cloudServer_avg_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_transientserver". All fields are combined with a logical 'AND'.
"""
input cloudServer_bool_exp {
  _and: [cloudServer_bool_exp!]
  _not: cloudServer_bool_exp
  _or: [cloudServer_bool_exp!]
  activityType: activityType_bool_exp
  activityTypeId: bigint_comparison_exp
  auxAddress: _inet_comparison_exp
  domainServerConnections: domainServerConnection_bool_exp
  id: bigint_comparison_exp
  ipAddress: inet_comparison_exp
  name: String_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  serverProvider: serverProvider_bool_exp
  serverProviderId: bigint_comparison_exp
  serverRole: serverRole_bool_exp
  serverRoleId: bigint_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "shepherd_transientserver"
"""
enum cloudServer_constraint {
  """unique or primary key constraint"""
  shepherd_transientserver_ip_address_key

  """unique or primary key constraint"""
  shepherd_transientserver_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_transientserver"
"""
input cloudServer_inc_input {
  activityTypeId: bigint
  projectId: bigint
  serverProviderId: bigint
  serverRoleId: bigint
}

"""
input type for inserting data into table "shepherd_transientserver"
"""
input cloudServer_insert_input {
  activityTypeId: bigint
  auxAddress: _inet
  domainServerConnections: domainServerConnection_arr_rel_insert_input
  ipAddress: inet
  name: String
  note: String
  project: project_obj_rel_insert_input
  projectId: bigint
  serverProviderId: bigint
  serverRoleId: bigint
}

"""
order by max() on columns of table "shepherd_transientserver"
"""
input cloudServer_max_order_by {
  activityTypeId: order_by
  id: order_by
  name: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
order by min() on columns of table "shepherd_transientserver"
"""
input cloudServer_min_order_by {
  activityTypeId: order_by
  id: order_by
  name: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
response of any mutation on the table "shepherd_transientserver"
"""
type cloudServer_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [cloudServer!]!
}

"""
input type for inserting object relation for remote table "shepherd_transientserver"
"""
input cloudServer_obj_rel_insert_input {
  data: cloudServer_insert_input!

  """upsert condition"""
  on_conflict: cloudServer_on_conflict
}

"""
on_conflict condition type for table "shepherd_transientserver"
"""
input cloudServer_on_conflict {
  constraint: cloudServer_constraint!
  update_columns: [cloudServer_update_column!]! = []
  where: cloudServer_bool_exp
}

"""Ordering options when selecting data from "shepherd_transientserver"."""
input cloudServer_order_by {
  activityType: activityType_order_by
  activityTypeId: order_by
  auxAddress: order_by
  domainServerConnections_aggregate: domainServerConnection_aggregate_order_by
  id: order_by
  ipAddress: order_by
  name: order_by
  note: order_by
  operatorId: order_by
  project: project_order_by
  projectId: order_by
  serverProvider: serverProvider_order_by
  serverProviderId: order_by
  serverRole: serverRole_order_by
  serverRoleId: order_by
  user: user_order_by
}

"""primary key columns input for table: cloudServer"""
input cloudServer_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_transientserver"
"""
enum cloudServer_select_column {
  """column name"""
  activityTypeId

  """column name"""
  auxAddress

  """column name"""
  id

  """column name"""
  ipAddress

  """column name"""
  name

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectId

  """column name"""
  serverProviderId

  """column name"""
  serverRoleId
}

"""
input type for updating data in table "shepherd_transientserver"
"""
input cloudServer_set_input {
  activityTypeId: bigint
  auxAddress: _inet
  ipAddress: inet
  name: String
  note: String
  projectId: bigint
  serverProviderId: bigint
  serverRoleId: bigint
}

"""
order by stddev() on columns of table "shepherd_transientserver"
"""
input cloudServer_stddev_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_transientserver"
"""
input cloudServer_stddev_pop_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_transientserver"
"""
input cloudServer_stddev_samp_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
order by sum() on columns of table "shepherd_transientserver"
"""
input cloudServer_sum_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
update columns of table "shepherd_transientserver"
"""
enum cloudServer_update_column {
  """column name"""
  activityTypeId

  """column name"""
  auxAddress

  """column name"""
  ipAddress

  """column name"""
  name

  """column name"""
  note

  """column name"""
  projectId

  """column name"""
  serverProviderId

  """column name"""
  serverRoleId
}

"""
order by var_pop() on columns of table "shepherd_transientserver"
"""
input cloudServer_var_pop_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
order by var_samp() on columns of table "shepherd_transientserver"
"""
input cloudServer_var_samp_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
order by variance() on columns of table "shepherd_transientserver"
"""
input cloudServer_variance_order_by {
  activityTypeId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverProviderId: order_by
  serverRoleId: order_by
}

"""
columns and relationships of "commandcenter_companyinformation"
"""
type companyInfo {
  email: String!
  id: bigint!
  name: String!
  twitter: String!
}

"""
Boolean expression to filter rows from the table "commandcenter_companyinformation". All fields are combined with a logical 'AND'.
"""
input companyInfo_bool_exp {
  _and: [companyInfo_bool_exp!]
  _not: companyInfo_bool_exp
  _or: [companyInfo_bool_exp!]
  email: String_comparison_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  twitter: String_comparison_exp
}

"""
response of any mutation on the table "commandcenter_companyinformation"
"""
type companyInfo_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [companyInfo!]!
}

"""
Ordering options when selecting data from "commandcenter_companyinformation".
"""
input companyInfo_order_by {
  email: order_by
  id: order_by
  name: order_by
  twitter: order_by
}

"""primary key columns input for table: companyInfo"""
input companyInfo_pk_columns_input {
  id: bigint!
}

"""
select columns of table "commandcenter_companyinformation"
"""
enum companyInfo_select_column {
  """column name"""
  email

  """column name"""
  id

  """column name"""
  name

  """column name"""
  twitter
}

"""
input type for updating data in table "commandcenter_companyinformation"
"""
input companyInfo_set_input {
  email: String
  name: String
  twitter: String
}

"""
columns and relationships of "rolodex_clientcontact"
"""
type contacts {
  """An object relationship"""
  client: client!
  clientId: bigint!
  email: String
  id: bigint!
  jobTitle: String
  name: String
  note: String
  phone: String
  timezone: String!
}

"""
order by aggregate values of table "rolodex_clientcontact"
"""
input contacts_aggregate_order_by {
  avg: contacts_avg_order_by
  count: order_by
  max: contacts_max_order_by
  min: contacts_min_order_by
  stddev: contacts_stddev_order_by
  stddev_pop: contacts_stddev_pop_order_by
  stddev_samp: contacts_stddev_samp_order_by
  sum: contacts_sum_order_by
  var_pop: contacts_var_pop_order_by
  var_samp: contacts_var_samp_order_by
  variance: contacts_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_clientcontact"
"""
input contacts_arr_rel_insert_input {
  data: [contacts_insert_input!]!

  """upsert condition"""
  on_conflict: contacts_on_conflict
}

"""
order by avg() on columns of table "rolodex_clientcontact"
"""
input contacts_avg_order_by {
  clientId: order_by
  id: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_clientcontact". All fields are combined with a logical 'AND'.
"""
input contacts_bool_exp {
  _and: [contacts_bool_exp!]
  _not: contacts_bool_exp
  _or: [contacts_bool_exp!]
  client: client_bool_exp
  clientId: bigint_comparison_exp
  email: String_comparison_exp
  id: bigint_comparison_exp
  jobTitle: String_comparison_exp
  name: String_comparison_exp
  note: String_comparison_exp
  phone: String_comparison_exp
  timezone: String_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_clientcontact"
"""
enum contacts_constraint {
  """unique or primary key constraint"""
  rolodex_clientcontact_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_clientcontact"
"""
input contacts_inc_input {
  clientId: bigint
}

"""
input type for inserting data into table "rolodex_clientcontact"
"""
input contacts_insert_input {
  client: client_obj_rel_insert_input
  clientId: bigint
  email: String
  jobTitle: String
  name: String
  note: String
  phone: String
  timezone: String
}

"""
order by max() on columns of table "rolodex_clientcontact"
"""
input contacts_max_order_by {
  clientId: order_by
  email: order_by
  id: order_by
  jobTitle: order_by
  name: order_by
  note: order_by
  phone: order_by
  timezone: order_by
}

"""
order by min() on columns of table "rolodex_clientcontact"
"""
input contacts_min_order_by {
  clientId: order_by
  email: order_by
  id: order_by
  jobTitle: order_by
  name: order_by
  note: order_by
  phone: order_by
  timezone: order_by
}

"""
response of any mutation on the table "rolodex_clientcontact"
"""
type contacts_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [contacts!]!
}

"""
on_conflict condition type for table "rolodex_clientcontact"
"""
input contacts_on_conflict {
  constraint: contacts_constraint!
  update_columns: [contacts_update_column!]! = []
  where: contacts_bool_exp
}

"""Ordering options when selecting data from "rolodex_clientcontact"."""
input contacts_order_by {
  client: client_order_by
  clientId: order_by
  email: order_by
  id: order_by
  jobTitle: order_by
  name: order_by
  note: order_by
  phone: order_by
  timezone: order_by
}

"""primary key columns input for table: contacts"""
input contacts_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_clientcontact"
"""
enum contacts_select_column {
  """column name"""
  clientId

  """column name"""
  email

  """column name"""
  id

  """column name"""
  jobTitle

  """column name"""
  name

  """column name"""
  note

  """column name"""
  phone

  """column name"""
  timezone
}

"""
input type for updating data in table "rolodex_clientcontact"
"""
input contacts_set_input {
  clientId: bigint
  email: String
  jobTitle: String
  name: String
  note: String
  phone: String
  timezone: String
}

"""
order by stddev() on columns of table "rolodex_clientcontact"
"""
input contacts_stddev_order_by {
  clientId: order_by
  id: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_clientcontact"
"""
input contacts_stddev_pop_order_by {
  clientId: order_by
  id: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_clientcontact"
"""
input contacts_stddev_samp_order_by {
  clientId: order_by
  id: order_by
}

"""
order by sum() on columns of table "rolodex_clientcontact"
"""
input contacts_sum_order_by {
  clientId: order_by
  id: order_by
}

"""
update columns of table "rolodex_clientcontact"
"""
enum contacts_update_column {
  """column name"""
  clientId

  """column name"""
  email

  """column name"""
  jobTitle

  """column name"""
  name

  """column name"""
  note

  """column name"""
  phone

  """column name"""
  timezone
}

"""
order by var_pop() on columns of table "rolodex_clientcontact"
"""
input contacts_var_pop_order_by {
  clientId: order_by
  id: order_by
}

"""
order by var_samp() on columns of table "rolodex_clientcontact"
"""
input contacts_var_samp_order_by {
  clientId: order_by
  id: order_by
}

"""
order by variance() on columns of table "rolodex_clientcontact"
"""
input contacts_variance_order_by {
  clientId: order_by
  id: order_by
}

scalar date

"""
Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'.
"""
input date_comparison_exp {
  _eq: date
  _gt: date
  _gte: date
  _in: [date!]
  _is_null: Boolean
  _lt: date
  _lte: date
  _neq: date
  _nin: [date!]
}

type deleteResponse {
  result: String!
}

"""
columns and relationships of "reporting_doctype"
"""
type docType {
  docType: String!
  id: bigint!

  """An array relationship"""
  templates(
    """distinct select on columns"""
    distinct_on: [template_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [template_order_by!]

    """filter the rows returned"""
    where: template_bool_exp
  ): [template!]!
}

"""
Boolean expression to filter rows from the table "reporting_doctype". All fields are combined with a logical 'AND'.
"""
input docType_bool_exp {
  _and: [docType_bool_exp!]
  _not: docType_bool_exp
  _or: [docType_bool_exp!]
  docType: String_comparison_exp
  id: bigint_comparison_exp
  templates: template_bool_exp
}

"""Ordering options when selecting data from "reporting_doctype"."""
input docType_order_by {
  docType: order_by
  id: order_by
  templates_aggregate: template_aggregate_order_by
}

"""
select columns of table "reporting_doctype"
"""
enum docType_select_column {
  """column name"""
  docType

  """column name"""
  id
}

"""
columns and relationships of "shepherd_domain"
"""
type domain {
  autoRenew: Boolean!
  burned_explanation: String
  categorization(
    """JSON select path"""
    path: String
  ): jsonb

  """An array relationship"""
  checkouts(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!

  """An array relationship"""
  comments(
    """distinct select on columns"""
    distinct_on: [domainNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainNote_order_by!]

    """filter the rows returned"""
    where: domainNote_bool_exp
  ): [domainNote!]!
  creation: date!
  dns(
    """JSON select path"""
    path: String
  ): jsonb

  """An object relationship"""
  domainStatus: domainStatus
  domainStatusId: bigint
  expiration: date!
  expired: Boolean!

  """An object relationship"""
  healthStatus: healthStatus
  healthStatusId: bigint
  id: bigint!
  lastHealthCheck: date
  lastUsedById: bigint
  name: String!
  note: String
  registrar: String
  resetDns: Boolean!

  """An object relationship"""
  user: user
  vtPermalink: String

  """An object relationship"""
  whoisStatus: whoisStatus
  whoisStatusId: bigint
}

"""
columns and relationships of "shepherd_history"
"""
type domainCheckout {
  """An object relationship"""
  activityType: activityType!
  activityTypeId: bigint!

  """An object relationship"""
  client: client!
  clientId: bigint!

  """An object relationship"""
  domain: domain!
  domainId: bigint!

  """An array relationship"""
  domainServerConnections(
    """distinct select on columns"""
    distinct_on: [domainServerConnection_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainServerConnection_order_by!]

    """filter the rows returned"""
    where: domainServerConnection_bool_exp
  ): [domainServerConnection!]!
  endDate: date!
  id: bigint!
  note: String
  operatorId: bigint

  """An object relationship"""
  project: project
  projectId: bigint
  startDate: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "shepherd_history"
"""
input domainCheckout_aggregate_order_by {
  avg: domainCheckout_avg_order_by
  count: order_by
  max: domainCheckout_max_order_by
  min: domainCheckout_min_order_by
  stddev: domainCheckout_stddev_order_by
  stddev_pop: domainCheckout_stddev_pop_order_by
  stddev_samp: domainCheckout_stddev_samp_order_by
  sum: domainCheckout_sum_order_by
  var_pop: domainCheckout_var_pop_order_by
  var_samp: domainCheckout_var_samp_order_by
  variance: domainCheckout_variance_order_by
}

"""
order by avg() on columns of table "shepherd_history"
"""
input domainCheckout_avg_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_history". All fields are combined with a logical 'AND'.
"""
input domainCheckout_bool_exp {
  _and: [domainCheckout_bool_exp!]
  _not: domainCheckout_bool_exp
  _or: [domainCheckout_bool_exp!]
  activityType: activityType_bool_exp
  activityTypeId: bigint_comparison_exp
  client: client_bool_exp
  clientId: bigint_comparison_exp
  domain: domain_bool_exp
  domainId: bigint_comparison_exp
  domainServerConnections: domainServerConnection_bool_exp
  endDate: date_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  startDate: date_comparison_exp
  user: user_bool_exp
}

"""
input type for incrementing numeric columns in table "shepherd_history"
"""
input domainCheckout_inc_input {
  activityTypeId: bigint
  clientId: bigint
  domainId: bigint
  projectId: bigint
}

"""
order by max() on columns of table "shepherd_history"
"""
input domainCheckout_max_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  startDate: order_by
}

"""
order by min() on columns of table "shepherd_history"
"""
input domainCheckout_min_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  startDate: order_by
}

"""
response of any mutation on the table "shepherd_history"
"""
type domainCheckout_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [domainCheckout!]!
}

"""Ordering options when selecting data from "shepherd_history"."""
input domainCheckout_order_by {
  activityType: activityType_order_by
  activityTypeId: order_by
  client: client_order_by
  clientId: order_by
  domain: domain_order_by
  domainId: order_by
  domainServerConnections_aggregate: domainServerConnection_aggregate_order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  project: project_order_by
  projectId: order_by
  startDate: order_by
  user: user_order_by
}

"""primary key columns input for table: domainCheckout"""
input domainCheckout_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_history"
"""
enum domainCheckout_select_column {
  """column name"""
  activityTypeId

  """column name"""
  clientId

  """column name"""
  domainId

  """column name"""
  endDate

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectId

  """column name"""
  startDate
}

"""
input type for updating data in table "shepherd_history"
"""
input domainCheckout_set_input {
  activityTypeId: bigint
  clientId: bigint
  domainId: bigint
  endDate: date
  note: String
  projectId: bigint
  startDate: date
}

"""
order by stddev() on columns of table "shepherd_history"
"""
input domainCheckout_stddev_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_history"
"""
input domainCheckout_stddev_pop_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_history"
"""
input domainCheckout_stddev_samp_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "shepherd_history"
"""
input domainCheckout_sum_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by var_pop() on columns of table "shepherd_history"
"""
input domainCheckout_var_pop_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "shepherd_history"
"""
input domainCheckout_var_samp_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "shepherd_history"
"""
input domainCheckout_variance_order_by {
  activityTypeId: order_by
  clientId: order_by
  domainId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
columns and relationships of "shepherd_domainnote"
"""
type domainNote {
  """An object relationship"""
  domain: domain!
  domainId: bigint!
  id: bigint!
  note: String
  operatorId: bigint
  timestamp: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "shepherd_domainnote"
"""
input domainNote_aggregate_order_by {
  avg: domainNote_avg_order_by
  count: order_by
  max: domainNote_max_order_by
  min: domainNote_min_order_by
  stddev: domainNote_stddev_order_by
  stddev_pop: domainNote_stddev_pop_order_by
  stddev_samp: domainNote_stddev_samp_order_by
  sum: domainNote_sum_order_by
  var_pop: domainNote_var_pop_order_by
  var_samp: domainNote_var_samp_order_by
  variance: domainNote_variance_order_by
}

"""
input type for inserting array relation for remote table "shepherd_domainnote"
"""
input domainNote_arr_rel_insert_input {
  data: [domainNote_insert_input!]!

  """upsert condition"""
  on_conflict: domainNote_on_conflict
}

"""
order by avg() on columns of table "shepherd_domainnote"
"""
input domainNote_avg_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_domainnote". All fields are combined with a logical 'AND'.
"""
input domainNote_bool_exp {
  _and: [domainNote_bool_exp!]
  _not: domainNote_bool_exp
  _or: [domainNote_bool_exp!]
  domain: domain_bool_exp
  domainId: bigint_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  timestamp: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "shepherd_domainnote"
"""
enum domainNote_constraint {
  """unique or primary key constraint"""
  shepherd_domainnote_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_domainnote"
"""
input domainNote_inc_input {
  domainId: bigint
}

"""
input type for inserting data into table "shepherd_domainnote"
"""
input domainNote_insert_input {
  domain: domain_obj_rel_insert_input
  domainId: bigint
  note: String
}

"""
order by max() on columns of table "shepherd_domainnote"
"""
input domainNote_max_order_by {
  domainId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "shepherd_domainnote"
"""
input domainNote_min_order_by {
  domainId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "shepherd_domainnote"
"""
type domainNote_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [domainNote!]!
}

"""
on_conflict condition type for table "shepherd_domainnote"
"""
input domainNote_on_conflict {
  constraint: domainNote_constraint!
  update_columns: [domainNote_update_column!]! = []
  where: domainNote_bool_exp
}

"""Ordering options when selecting data from "shepherd_domainnote"."""
input domainNote_order_by {
  domain: domain_order_by
  domainId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
  user: user_order_by
}

"""primary key columns input for table: domainNote"""
input domainNote_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_domainnote"
"""
enum domainNote_select_column {
  """column name"""
  domainId

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  timestamp
}

"""
input type for updating data in table "shepherd_domainnote"
"""
input domainNote_set_input {
  domainId: bigint
  note: String
}

"""
order by stddev() on columns of table "shepherd_domainnote"
"""
input domainNote_stddev_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_domainnote"
"""
input domainNote_stddev_pop_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_domainnote"
"""
input domainNote_stddev_samp_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by sum() on columns of table "shepherd_domainnote"
"""
input domainNote_sum_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
update columns of table "shepherd_domainnote"
"""
enum domainNote_update_column {
  """column name"""
  domainId

  """column name"""
  note
}

"""
order by var_pop() on columns of table "shepherd_domainnote"
"""
input domainNote_var_pop_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by var_samp() on columns of table "shepherd_domainnote"
"""
input domainNote_var_samp_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by variance() on columns of table "shepherd_domainnote"
"""
input domainNote_variance_order_by {
  domainId: order_by
  id: order_by
  operatorId: order_by
}

"""
columns and relationships of "shepherd_domainserverconnection"
"""
type domainServerConnection {
  """An object relationship"""
  cloudServer: cloudServer

  """An object relationship"""
  domain: domainCheckout!
  domainId: bigint!
  endpoint: String
  id: bigint!

  """An object relationship"""
  project: project!
  projectId: bigint!

  """An object relationship"""
  staticServer: serverCheckout
  staticServerId: bigint
  subdomain: String
  transientServerId: bigint
}

"""
order by aggregate values of table "shepherd_domainserverconnection"
"""
input domainServerConnection_aggregate_order_by {
  avg: domainServerConnection_avg_order_by
  count: order_by
  max: domainServerConnection_max_order_by
  min: domainServerConnection_min_order_by
  stddev: domainServerConnection_stddev_order_by
  stddev_pop: domainServerConnection_stddev_pop_order_by
  stddev_samp: domainServerConnection_stddev_samp_order_by
  sum: domainServerConnection_sum_order_by
  var_pop: domainServerConnection_var_pop_order_by
  var_samp: domainServerConnection_var_samp_order_by
  variance: domainServerConnection_variance_order_by
}

"""
input type for inserting array relation for remote table "shepherd_domainserverconnection"
"""
input domainServerConnection_arr_rel_insert_input {
  data: [domainServerConnection_insert_input!]!

  """upsert condition"""
  on_conflict: domainServerConnection_on_conflict
}

"""
order by avg() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_avg_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_domainserverconnection". All fields are combined with a logical 'AND'.
"""
input domainServerConnection_bool_exp {
  _and: [domainServerConnection_bool_exp!]
  _not: domainServerConnection_bool_exp
  _or: [domainServerConnection_bool_exp!]
  cloudServer: cloudServer_bool_exp
  domain: domainCheckout_bool_exp
  domainId: bigint_comparison_exp
  endpoint: String_comparison_exp
  id: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  staticServer: serverCheckout_bool_exp
  staticServerId: bigint_comparison_exp
  subdomain: String_comparison_exp
  transientServerId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "shepherd_domainserverconnection"
"""
enum domainServerConnection_constraint {
  """unique or primary key constraint"""
  shepherd_domainserverconnection_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_domainserverconnection"
"""
input domainServerConnection_inc_input {
  domainId: bigint
  projectId: bigint
  staticServerId: bigint
  transientServerId: bigint
}

"""
input type for inserting data into table "shepherd_domainserverconnection"
"""
input domainServerConnection_insert_input {
  cloudServer: cloudServer_obj_rel_insert_input
  domainId: bigint
  endpoint: String
  project: project_obj_rel_insert_input
  projectId: bigint
  staticServer: serverCheckout_obj_rel_insert_input
  staticServerId: bigint
  subdomain: String
  transientServerId: bigint
}

"""
order by max() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_max_order_by {
  domainId: order_by
  endpoint: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  subdomain: order_by
  transientServerId: order_by
}

"""
order by min() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_min_order_by {
  domainId: order_by
  endpoint: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  subdomain: order_by
  transientServerId: order_by
}

"""
response of any mutation on the table "shepherd_domainserverconnection"
"""
type domainServerConnection_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [domainServerConnection!]!
}

"""
on_conflict condition type for table "shepherd_domainserverconnection"
"""
input domainServerConnection_on_conflict {
  constraint: domainServerConnection_constraint!
  update_columns: [domainServerConnection_update_column!]! = []
  where: domainServerConnection_bool_exp
}

"""
Ordering options when selecting data from "shepherd_domainserverconnection".
"""
input domainServerConnection_order_by {
  cloudServer: cloudServer_order_by
  domain: domainCheckout_order_by
  domainId: order_by
  endpoint: order_by
  id: order_by
  project: project_order_by
  projectId: order_by
  staticServer: serverCheckout_order_by
  staticServerId: order_by
  subdomain: order_by
  transientServerId: order_by
}

"""primary key columns input for table: domainServerConnection"""
input domainServerConnection_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_domainserverconnection"
"""
enum domainServerConnection_select_column {
  """column name"""
  domainId

  """column name"""
  endpoint

  """column name"""
  id

  """column name"""
  projectId

  """column name"""
  staticServerId

  """column name"""
  subdomain

  """column name"""
  transientServerId
}

"""
input type for updating data in table "shepherd_domainserverconnection"
"""
input domainServerConnection_set_input {
  domainId: bigint
  endpoint: String
  projectId: bigint
  staticServerId: bigint
  subdomain: String
  transientServerId: bigint
}

"""
order by stddev() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_stddev_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_stddev_pop_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_stddev_samp_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
order by sum() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_sum_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
update columns of table "shepherd_domainserverconnection"
"""
enum domainServerConnection_update_column {
  """column name"""
  domainId

  """column name"""
  endpoint

  """column name"""
  projectId

  """column name"""
  staticServerId

  """column name"""
  subdomain

  """column name"""
  transientServerId
}

"""
order by var_pop() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_var_pop_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
order by var_samp() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_var_samp_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
order by variance() on columns of table "shepherd_domainserverconnection"
"""
input domainServerConnection_variance_order_by {
  domainId: order_by
  id: order_by
  projectId: order_by
  staticServerId: order_by
  transientServerId: order_by
}

"""
columns and relationships of "shepherd_domainstatus"
"""
type domainStatus {
  domainStatus: String!

  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domain_order_by!]

    """filter the rows returned"""
    where: domain_bool_exp
  ): [domain!]!
  id: bigint!
}

"""
Boolean expression to filter rows from the table "shepherd_domainstatus". All fields are combined with a logical 'AND'.
"""
input domainStatus_bool_exp {
  _and: [domainStatus_bool_exp!]
  _not: domainStatus_bool_exp
  _or: [domainStatus_bool_exp!]
  domainStatus: String_comparison_exp
  domains: domain_bool_exp
  id: bigint_comparison_exp
}

"""Ordering options when selecting data from "shepherd_domainstatus"."""
input domainStatus_order_by {
  domainStatus: order_by
  domains_aggregate: domain_aggregate_order_by
  id: order_by
}

"""
select columns of table "shepherd_domainstatus"
"""
enum domainStatus_select_column {
  """column name"""
  domainStatus

  """column name"""
  id
}

"""
order by aggregate values of table "shepherd_domain"
"""
input domain_aggregate_order_by {
  avg: domain_avg_order_by
  count: order_by
  max: domain_max_order_by
  min: domain_min_order_by
  stddev: domain_stddev_order_by
  stddev_pop: domain_stddev_pop_order_by
  stddev_samp: domain_stddev_samp_order_by
  sum: domain_sum_order_by
  var_pop: domain_var_pop_order_by
  var_samp: domain_var_samp_order_by
  variance: domain_variance_order_by
}

"""append existing jsonb value of filtered columns with new jsonb value"""
input domain_append_input {
  categorization: jsonb
  dns: jsonb
}

"""
order by avg() on columns of table "shepherd_domain"
"""
input domain_avg_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_domain". All fields are combined with a logical 'AND'.
"""
input domain_bool_exp {
  _and: [domain_bool_exp!]
  _not: domain_bool_exp
  _or: [domain_bool_exp!]
  autoRenew: Boolean_comparison_exp
  burned_explanation: String_comparison_exp
  categorization: jsonb_comparison_exp
  checkouts: domainCheckout_bool_exp
  comments: domainNote_bool_exp
  creation: date_comparison_exp
  dns: jsonb_comparison_exp
  domainStatus: domainStatus_bool_exp
  domainStatusId: bigint_comparison_exp
  expiration: date_comparison_exp
  expired: Boolean_comparison_exp
  healthStatus: healthStatus_bool_exp
  healthStatusId: bigint_comparison_exp
  id: bigint_comparison_exp
  lastHealthCheck: date_comparison_exp
  lastUsedById: bigint_comparison_exp
  name: String_comparison_exp
  note: String_comparison_exp
  registrar: String_comparison_exp
  resetDns: Boolean_comparison_exp
  user: user_bool_exp
  vtPermalink: String_comparison_exp
  whoisStatus: whoisStatus_bool_exp
  whoisStatusId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "shepherd_domain"
"""
enum domain_constraint {
  """unique or primary key constraint"""
  shepherd_domain_name_key

  """unique or primary key constraint"""
  shepherd_domain_pkey
}

"""
delete the field or element with specified path (for JSON arrays, negative integers count from the end)
"""
input domain_delete_at_path_input {
  categorization: [String!]
  dns: [String!]
}

"""
delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
"""
input domain_delete_elem_input {
  categorization: Int
  dns: Int
}

"""
delete key/value pair or string element. key/value pairs are matched based on their key value
"""
input domain_delete_key_input {
  categorization: String
  dns: String
}

"""
input type for incrementing numeric columns in table "shepherd_domain"
"""
input domain_inc_input {
  domainStatusId: bigint
  healthStatusId: bigint
  whoisStatusId: bigint
}

"""
input type for inserting data into table "shepherd_domain"
"""
input domain_insert_input {
  autoRenew: Boolean
  categorization: jsonb
  comments: domainNote_arr_rel_insert_input
  creation: date
  dns: jsonb
  domainStatusId: bigint
  expiration: date
  expired: Boolean
  healthStatusId: bigint
  name: String
  note: String
  registrar: String
  resetDns: Boolean
  vtPermalink: String
  whoisStatusId: bigint
}

"""
order by max() on columns of table "shepherd_domain"
"""
input domain_max_order_by {
  burned_explanation: order_by
  creation: order_by
  domainStatusId: order_by
  expiration: order_by
  healthStatusId: order_by
  id: order_by
  lastHealthCheck: order_by
  lastUsedById: order_by
  name: order_by
  note: order_by
  registrar: order_by
  vtPermalink: order_by
  whoisStatusId: order_by
}

"""
order by min() on columns of table "shepherd_domain"
"""
input domain_min_order_by {
  burned_explanation: order_by
  creation: order_by
  domainStatusId: order_by
  expiration: order_by
  healthStatusId: order_by
  id: order_by
  lastHealthCheck: order_by
  lastUsedById: order_by
  name: order_by
  note: order_by
  registrar: order_by
  vtPermalink: order_by
  whoisStatusId: order_by
}

"""
response of any mutation on the table "shepherd_domain"
"""
type domain_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [domain!]!
}

"""
input type for inserting object relation for remote table "shepherd_domain"
"""
input domain_obj_rel_insert_input {
  data: domain_insert_input!

  """upsert condition"""
  on_conflict: domain_on_conflict
}

"""
on_conflict condition type for table "shepherd_domain"
"""
input domain_on_conflict {
  constraint: domain_constraint!
  update_columns: [domain_update_column!]! = []
  where: domain_bool_exp
}

"""Ordering options when selecting data from "shepherd_domain"."""
input domain_order_by {
  autoRenew: order_by
  burned_explanation: order_by
  categorization: order_by
  checkouts_aggregate: domainCheckout_aggregate_order_by
  comments_aggregate: domainNote_aggregate_order_by
  creation: order_by
  dns: order_by
  domainStatus: domainStatus_order_by
  domainStatusId: order_by
  expiration: order_by
  expired: order_by
  healthStatus: healthStatus_order_by
  healthStatusId: order_by
  id: order_by
  lastHealthCheck: order_by
  lastUsedById: order_by
  name: order_by
  note: order_by
  registrar: order_by
  resetDns: order_by
  user: user_order_by
  vtPermalink: order_by
  whoisStatus: whoisStatus_order_by
  whoisStatusId: order_by
}

"""primary key columns input for table: domain"""
input domain_pk_columns_input {
  id: bigint!
}

"""prepend existing jsonb value of filtered columns with new jsonb value"""
input domain_prepend_input {
  categorization: jsonb
  dns: jsonb
}

"""
select columns of table "shepherd_domain"
"""
enum domain_select_column {
  """column name"""
  autoRenew

  """column name"""
  burned_explanation

  """column name"""
  categorization

  """column name"""
  creation

  """column name"""
  dns

  """column name"""
  domainStatusId

  """column name"""
  expiration

  """column name"""
  expired

  """column name"""
  healthStatusId

  """column name"""
  id

  """column name"""
  lastHealthCheck

  """column name"""
  lastUsedById

  """column name"""
  name

  """column name"""
  note

  """column name"""
  registrar

  """column name"""
  resetDns

  """column name"""
  vtPermalink

  """column name"""
  whoisStatusId
}

"""
input type for updating data in table "shepherd_domain"
"""
input domain_set_input {
  autoRenew: Boolean
  burned_explanation: String
  categorization: jsonb
  creation: date
  dns: jsonb
  domainStatusId: bigint
  expiration: date
  expired: Boolean
  healthStatusId: bigint
  name: String
  note: String
  registrar: String
  resetDns: Boolean
  vtPermalink: String
  whoisStatusId: bigint
}

"""
order by stddev() on columns of table "shepherd_domain"
"""
input domain_stddev_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_domain"
"""
input domain_stddev_pop_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_domain"
"""
input domain_stddev_samp_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
order by sum() on columns of table "shepherd_domain"
"""
input domain_sum_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
update columns of table "shepherd_domain"
"""
enum domain_update_column {
  """column name"""
  autoRenew

  """column name"""
  burned_explanation

  """column name"""
  categorization

  """column name"""
  creation

  """column name"""
  dns

  """column name"""
  domainStatusId

  """column name"""
  expiration

  """column name"""
  expired

  """column name"""
  healthStatusId

  """column name"""
  name

  """column name"""
  note

  """column name"""
  registrar

  """column name"""
  resetDns

  """column name"""
  vtPermalink

  """column name"""
  whoisStatusId
}

"""
order by var_pop() on columns of table "shepherd_domain"
"""
input domain_var_pop_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
order by var_samp() on columns of table "shepherd_domain"
"""
input domain_var_samp_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
order by variance() on columns of table "shepherd_domain"
"""
input domain_variance_order_by {
  domainStatusId: order_by
  healthStatusId: order_by
  id: order_by
  lastUsedById: order_by
  whoisStatusId: order_by
}

"""
columns and relationships of "reporting_evidence"
"""
type evidence {
  caption: String!
  description: String!
  document: String!

  """An object relationship"""
  finding: reportedFinding!
  findingId: bigint!
  friendlyName: String
  id: bigint!
  uploadDate: date!
  uploadedById: bigint

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "reporting_evidence"
"""
input evidence_aggregate_order_by {
  avg: evidence_avg_order_by
  count: order_by
  max: evidence_max_order_by
  min: evidence_min_order_by
  stddev: evidence_stddev_order_by
  stddev_pop: evidence_stddev_pop_order_by
  stddev_samp: evidence_stddev_samp_order_by
  sum: evidence_sum_order_by
  var_pop: evidence_var_pop_order_by
  var_samp: evidence_var_samp_order_by
  variance: evidence_variance_order_by
}

"""
order by avg() on columns of table "reporting_evidence"
"""
input evidence_avg_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
Boolean expression to filter rows from the table "reporting_evidence". All fields are combined with a logical 'AND'.
"""
input evidence_bool_exp {
  _and: [evidence_bool_exp!]
  _not: evidence_bool_exp
  _or: [evidence_bool_exp!]
  caption: String_comparison_exp
  description: String_comparison_exp
  document: String_comparison_exp
  finding: reportedFinding_bool_exp
  findingId: bigint_comparison_exp
  friendlyName: String_comparison_exp
  id: bigint_comparison_exp
  uploadDate: date_comparison_exp
  uploadedById: bigint_comparison_exp
  user: user_bool_exp
}

"""
input type for incrementing numeric columns in table "reporting_evidence"
"""
input evidence_inc_input {
  findingId: bigint
}

"""
order by max() on columns of table "reporting_evidence"
"""
input evidence_max_order_by {
  caption: order_by
  description: order_by
  document: order_by
  findingId: order_by
  friendlyName: order_by
  id: order_by
  uploadDate: order_by
  uploadedById: order_by
}

"""
order by min() on columns of table "reporting_evidence"
"""
input evidence_min_order_by {
  caption: order_by
  description: order_by
  document: order_by
  findingId: order_by
  friendlyName: order_by
  id: order_by
  uploadDate: order_by
  uploadedById: order_by
}

"""
response of any mutation on the table "reporting_evidence"
"""
type evidence_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [evidence!]!
}

"""Ordering options when selecting data from "reporting_evidence"."""
input evidence_order_by {
  caption: order_by
  description: order_by
  document: order_by
  finding: reportedFinding_order_by
  findingId: order_by
  friendlyName: order_by
  id: order_by
  uploadDate: order_by
  uploadedById: order_by
  user: user_order_by
}

"""primary key columns input for table: evidence"""
input evidence_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_evidence"
"""
enum evidence_select_column {
  """column name"""
  caption

  """column name"""
  description

  """column name"""
  document

  """column name"""
  findingId

  """column name"""
  friendlyName

  """column name"""
  id

  """column name"""
  uploadDate

  """column name"""
  uploadedById
}

"""
input type for updating data in table "reporting_evidence"
"""
input evidence_set_input {
  caption: String
  description: String
  findingId: bigint
  friendlyName: String
}

"""
order by stddev() on columns of table "reporting_evidence"
"""
input evidence_stddev_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by stddev_pop() on columns of table "reporting_evidence"
"""
input evidence_stddev_pop_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by stddev_samp() on columns of table "reporting_evidence"
"""
input evidence_stddev_samp_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by sum() on columns of table "reporting_evidence"
"""
input evidence_sum_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by var_pop() on columns of table "reporting_evidence"
"""
input evidence_var_pop_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by var_samp() on columns of table "reporting_evidence"
"""
input evidence_var_samp_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by variance() on columns of table "reporting_evidence"
"""
input evidence_variance_order_by {
  findingId: order_by
  id: order_by
  uploadedById: order_by
}

"""
columns and relationships of "reporting_finding"
"""
type finding {
  """An array relationship"""
  comments(
    """distinct select on columns"""
    distinct_on: [findingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingNote_order_by!]

    """filter the rows returned"""
    where: findingNote_bool_exp
  ): [findingNote!]!
  cvss_score: float8
  cvss_vector: String!
  description: String
  findingGuidance: String
  findingTypeId: bigint
  hostDetectionTechniques: String
  id: bigint!
  impact: String
  mitigation: String
  networkDetectionTechniques: String
  references: String
  replication_steps: String

  """An object relationship"""
  severity: findingSeverity
  severityId: bigint
  title: String!

  """An object relationship"""
  type: findingType
}

"""
columns and relationships of "reporting_findingnote"
"""
type findingNote {
  """An object relationship"""
  finding: finding!
  findingId: bigint!
  id: bigint!
  note: String
  operatorId: bigint
  timestamp: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "reporting_findingnote"
"""
input findingNote_aggregate_order_by {
  avg: findingNote_avg_order_by
  count: order_by
  max: findingNote_max_order_by
  min: findingNote_min_order_by
  stddev: findingNote_stddev_order_by
  stddev_pop: findingNote_stddev_pop_order_by
  stddev_samp: findingNote_stddev_samp_order_by
  sum: findingNote_sum_order_by
  var_pop: findingNote_var_pop_order_by
  var_samp: findingNote_var_samp_order_by
  variance: findingNote_variance_order_by
}

"""
input type for inserting array relation for remote table "reporting_findingnote"
"""
input findingNote_arr_rel_insert_input {
  data: [findingNote_insert_input!]!

  """upsert condition"""
  on_conflict: findingNote_on_conflict
}

"""
order by avg() on columns of table "reporting_findingnote"
"""
input findingNote_avg_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
Boolean expression to filter rows from the table "reporting_findingnote". All fields are combined with a logical 'AND'.
"""
input findingNote_bool_exp {
  _and: [findingNote_bool_exp!]
  _not: findingNote_bool_exp
  _or: [findingNote_bool_exp!]
  finding: finding_bool_exp
  findingId: bigint_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  timestamp: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "reporting_findingnote"
"""
enum findingNote_constraint {
  """unique or primary key constraint"""
  reporting_findingnote_pkey
}

"""
input type for incrementing numeric columns in table "reporting_findingnote"
"""
input findingNote_inc_input {
  findingId: bigint
}

"""
input type for inserting data into table "reporting_findingnote"
"""
input findingNote_insert_input {
  finding: finding_obj_rel_insert_input
  findingId: bigint
  note: String
}

"""
order by max() on columns of table "reporting_findingnote"
"""
input findingNote_max_order_by {
  findingId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "reporting_findingnote"
"""
input findingNote_min_order_by {
  findingId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "reporting_findingnote"
"""
type findingNote_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [findingNote!]!
}

"""
on_conflict condition type for table "reporting_findingnote"
"""
input findingNote_on_conflict {
  constraint: findingNote_constraint!
  update_columns: [findingNote_update_column!]! = []
  where: findingNote_bool_exp
}

"""Ordering options when selecting data from "reporting_findingnote"."""
input findingNote_order_by {
  finding: finding_order_by
  findingId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
  user: user_order_by
}

"""primary key columns input for table: findingNote"""
input findingNote_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_findingnote"
"""
enum findingNote_select_column {
  """column name"""
  findingId

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  timestamp
}

"""
input type for updating data in table "reporting_findingnote"
"""
input findingNote_set_input {
  findingId: bigint
  note: String
}

"""
order by stddev() on columns of table "reporting_findingnote"
"""
input findingNote_stddev_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_pop() on columns of table "reporting_findingnote"
"""
input findingNote_stddev_pop_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_samp() on columns of table "reporting_findingnote"
"""
input findingNote_stddev_samp_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by sum() on columns of table "reporting_findingnote"
"""
input findingNote_sum_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
update columns of table "reporting_findingnote"
"""
enum findingNote_update_column {
  """column name"""
  findingId

  """column name"""
  note
}

"""
order by var_pop() on columns of table "reporting_findingnote"
"""
input findingNote_var_pop_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by var_samp() on columns of table "reporting_findingnote"
"""
input findingNote_var_samp_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by variance() on columns of table "reporting_findingnote"
"""
input findingNote_variance_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
columns and relationships of "reporting_severity"
"""
type findingSeverity {
  color: String!

  """An array relationship"""
  findings(
    """distinct select on columns"""
    distinct_on: [finding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [finding_order_by!]

    """filter the rows returned"""
    where: finding_bool_exp
  ): [finding!]!
  id: bigint!

  """An array relationship"""
  reportedFindings(
    """distinct select on columns"""
    distinct_on: [reportedFinding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFinding_order_by!]

    """filter the rows returned"""
    where: reportedFinding_bool_exp
  ): [reportedFinding!]!
  severity: String!
  weight: Int!
}

"""
Boolean expression to filter rows from the table "reporting_severity". All fields are combined with a logical 'AND'.
"""
input findingSeverity_bool_exp {
  _and: [findingSeverity_bool_exp!]
  _not: findingSeverity_bool_exp
  _or: [findingSeverity_bool_exp!]
  color: String_comparison_exp
  findings: finding_bool_exp
  id: bigint_comparison_exp
  reportedFindings: reportedFinding_bool_exp
  severity: String_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "reporting_severity"."""
input findingSeverity_order_by {
  color: order_by
  findings_aggregate: finding_aggregate_order_by
  id: order_by
  reportedFindings_aggregate: reportedFinding_aggregate_order_by
  severity: order_by
  weight: order_by
}

"""
select columns of table "reporting_severity"
"""
enum findingSeverity_select_column {
  """column name"""
  color

  """column name"""
  id

  """column name"""
  severity

  """column name"""
  weight
}

"""
columns and relationships of "reporting_findingtype"
"""
type findingType {
  findingType: String!

  """An array relationship"""
  findings(
    """distinct select on columns"""
    distinct_on: [finding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [finding_order_by!]

    """filter the rows returned"""
    where: finding_bool_exp
  ): [finding!]!
  id: bigint!

  """An array relationship"""
  reportedFindings(
    """distinct select on columns"""
    distinct_on: [reportedFinding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFinding_order_by!]

    """filter the rows returned"""
    where: reportedFinding_bool_exp
  ): [reportedFinding!]!
}

"""
Boolean expression to filter rows from the table "reporting_findingtype". All fields are combined with a logical 'AND'.
"""
input findingType_bool_exp {
  _and: [findingType_bool_exp!]
  _not: findingType_bool_exp
  _or: [findingType_bool_exp!]
  findingType: String_comparison_exp
  findings: finding_bool_exp
  id: bigint_comparison_exp
  reportedFindings: reportedFinding_bool_exp
}

"""Ordering options when selecting data from "reporting_findingtype"."""
input findingType_order_by {
  findingType: order_by
  findings_aggregate: finding_aggregate_order_by
  id: order_by
  reportedFindings_aggregate: reportedFinding_aggregate_order_by
}

"""
select columns of table "reporting_findingtype"
"""
enum findingType_select_column {
  """column name"""
  findingType

  """column name"""
  id
}

"""
order by aggregate values of table "reporting_finding"
"""
input finding_aggregate_order_by {
  avg: finding_avg_order_by
  count: order_by
  max: finding_max_order_by
  min: finding_min_order_by
  stddev: finding_stddev_order_by
  stddev_pop: finding_stddev_pop_order_by
  stddev_samp: finding_stddev_samp_order_by
  sum: finding_sum_order_by
  var_pop: finding_var_pop_order_by
  var_samp: finding_var_samp_order_by
  variance: finding_variance_order_by
}

"""
order by avg() on columns of table "reporting_finding"
"""
input finding_avg_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
Boolean expression to filter rows from the table "reporting_finding". All fields are combined with a logical 'AND'.
"""
input finding_bool_exp {
  _and: [finding_bool_exp!]
  _not: finding_bool_exp
  _or: [finding_bool_exp!]
  comments: findingNote_bool_exp
  cvss_score: float8_comparison_exp
  cvss_vector: String_comparison_exp
  description: String_comparison_exp
  findingGuidance: String_comparison_exp
  findingTypeId: bigint_comparison_exp
  hostDetectionTechniques: String_comparison_exp
  id: bigint_comparison_exp
  impact: String_comparison_exp
  mitigation: String_comparison_exp
  networkDetectionTechniques: String_comparison_exp
  references: String_comparison_exp
  replication_steps: String_comparison_exp
  severity: findingSeverity_bool_exp
  severityId: bigint_comparison_exp
  title: String_comparison_exp
  type: findingType_bool_exp
}

"""
unique or primary key constraints on table "reporting_finding"
"""
enum finding_constraint {
  """unique or primary key constraint"""
  reporting_finding_pkey

  """unique or primary key constraint"""
  reporting_finding_title_key
}

"""
input type for incrementing numeric columns in table "reporting_finding"
"""
input finding_inc_input {
  cvss_score: float8
  findingTypeId: bigint
  severityId: bigint
}

"""
input type for inserting data into table "reporting_finding"
"""
input finding_insert_input {
  comments: findingNote_arr_rel_insert_input
  cvss_score: float8
  cvss_vector: String
  description: String
  findingGuidance: String
  findingTypeId: bigint
  hostDetectionTechniques: String
  impact: String
  mitigation: String
  networkDetectionTechniques: String
  references: String
  replication_steps: String
  severityId: bigint
  title: String
}

"""
order by max() on columns of table "reporting_finding"
"""
input finding_max_order_by {
  cvss_score: order_by
  cvss_vector: order_by
  description: order_by
  findingGuidance: order_by
  findingTypeId: order_by
  hostDetectionTechniques: order_by
  id: order_by
  impact: order_by
  mitigation: order_by
  networkDetectionTechniques: order_by
  references: order_by
  replication_steps: order_by
  severityId: order_by
  title: order_by
}

"""
order by min() on columns of table "reporting_finding"
"""
input finding_min_order_by {
  cvss_score: order_by
  cvss_vector: order_by
  description: order_by
  findingGuidance: order_by
  findingTypeId: order_by
  hostDetectionTechniques: order_by
  id: order_by
  impact: order_by
  mitigation: order_by
  networkDetectionTechniques: order_by
  references: order_by
  replication_steps: order_by
  severityId: order_by
  title: order_by
}

"""
response of any mutation on the table "reporting_finding"
"""
type finding_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [finding!]!
}

"""
input type for inserting object relation for remote table "reporting_finding"
"""
input finding_obj_rel_insert_input {
  data: finding_insert_input!

  """upsert condition"""
  on_conflict: finding_on_conflict
}

"""
on_conflict condition type for table "reporting_finding"
"""
input finding_on_conflict {
  constraint: finding_constraint!
  update_columns: [finding_update_column!]! = []
  where: finding_bool_exp
}

"""Ordering options when selecting data from "reporting_finding"."""
input finding_order_by {
  comments_aggregate: findingNote_aggregate_order_by
  cvss_score: order_by
  cvss_vector: order_by
  description: order_by
  findingGuidance: order_by
  findingTypeId: order_by
  hostDetectionTechniques: order_by
  id: order_by
  impact: order_by
  mitigation: order_by
  networkDetectionTechniques: order_by
  references: order_by
  replication_steps: order_by
  severity: findingSeverity_order_by
  severityId: order_by
  title: order_by
  type: findingType_order_by
}

"""primary key columns input for table: finding"""
input finding_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_finding"
"""
enum finding_select_column {
  """column name"""
  cvss_score

  """column name"""
  cvss_vector

  """column name"""
  description

  """column name"""
  findingGuidance

  """column name"""
  findingTypeId

  """column name"""
  hostDetectionTechniques

  """column name"""
  id

  """column name"""
  impact

  """column name"""
  mitigation

  """column name"""
  networkDetectionTechniques

  """column name"""
  references

  """column name"""
  replication_steps

  """column name"""
  severityId

  """column name"""
  title
}

"""
input type for updating data in table "reporting_finding"
"""
input finding_set_input {
  cvss_score: float8
  cvss_vector: String
  description: String
  findingGuidance: String
  findingTypeId: bigint
  hostDetectionTechniques: String
  impact: String
  mitigation: String
  networkDetectionTechniques: String
  references: String
  replication_steps: String
  severityId: bigint
  title: String
}

"""
order by stddev() on columns of table "reporting_finding"
"""
input finding_stddev_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
order by stddev_pop() on columns of table "reporting_finding"
"""
input finding_stddev_pop_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
order by stddev_samp() on columns of table "reporting_finding"
"""
input finding_stddev_samp_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
order by sum() on columns of table "reporting_finding"
"""
input finding_sum_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
update columns of table "reporting_finding"
"""
enum finding_update_column {
  """column name"""
  cvss_score

  """column name"""
  cvss_vector

  """column name"""
  description

  """column name"""
  findingGuidance

  """column name"""
  findingTypeId

  """column name"""
  hostDetectionTechniques

  """column name"""
  impact

  """column name"""
  mitigation

  """column name"""
  networkDetectionTechniques

  """column name"""
  references

  """column name"""
  replication_steps

  """column name"""
  severityId

  """column name"""
  title
}

"""
order by var_pop() on columns of table "reporting_finding"
"""
input finding_var_pop_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
order by var_samp() on columns of table "reporting_finding"
"""
input finding_var_samp_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

"""
order by variance() on columns of table "reporting_finding"
"""
input finding_variance_order_by {
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  severityId: order_by
}

scalar float8

"""
Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'.
"""
input float8_comparison_exp {
  _eq: float8
  _gt: float8
  _gte: float8
  _in: [float8!]
  _is_null: Boolean
  _lt: float8
  _lte: float8
  _neq: float8
  _nin: [float8!]
}

"""
columns and relationships of "shepherd_healthstatus"
"""
type healthStatus {
  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domain_order_by!]

    """filter the rows returned"""
    where: domain_bool_exp
  ): [domain!]!
  healthStatus: String!
  id: bigint!
}

"""
Boolean expression to filter rows from the table "shepherd_healthstatus". All fields are combined with a logical 'AND'.
"""
input healthStatus_bool_exp {
  _and: [healthStatus_bool_exp!]
  _not: healthStatus_bool_exp
  _or: [healthStatus_bool_exp!]
  domains: domain_bool_exp
  healthStatus: String_comparison_exp
  id: bigint_comparison_exp
}

"""Ordering options when selecting data from "shepherd_healthstatus"."""
input healthStatus_order_by {
  domains_aggregate: domain_aggregate_order_by
  healthStatus: order_by
  id: order_by
}

"""
select columns of table "shepherd_healthstatus"
"""
enum healthStatus_select_column {
  """column name"""
  healthStatus

  """column name"""
  id
}

scalar inet

"""
Boolean expression to compare columns of type "inet". All fields are combined with logical 'AND'.
"""
input inet_comparison_exp {
  _eq: inet
  _gt: inet
  _gte: inet
  _in: [inet!]
  _is_null: Boolean
  _lt: inet
  _lte: inet
  _neq: inet
  _nin: [inet!]
}

scalar jsonb

input jsonb_cast_exp {
  String: String_comparison_exp
}

"""
Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'.
"""
input jsonb_comparison_exp {
  _cast: jsonb_cast_exp

  """is the column contained in the given json value"""
  _contained_in: jsonb

  """does the column contain the given json value at the top level"""
  _contains: jsonb
  _eq: jsonb
  _gt: jsonb
  _gte: jsonb

  """does the string exist as a top-level key in the column"""
  _has_key: String

  """do all of these strings exist as top-level keys in the column"""
  _has_keys_all: [String!]

  """do any of these strings exist as top-level keys in the column"""
  _has_keys_any: [String!]
  _in: [jsonb!]
  _is_null: Boolean
  _lt: jsonb
  _lte: jsonb
  _neq: jsonb
  _nin: [jsonb!]
}

"""mutation root"""
type mutation_root {
  """Attempt to checkout a domain for a project"""
  checkoutDomain(activityTypeId: Int!, domainId: Int!, endDate: date!, note: String, projectId: Int!, startDate: date!): checkoutResponse

  """Attempt to checkout a server for a project"""
  checkoutServer(activityTypeId: Int!, endDate: date!, note: String, projectId: Int!, serverId: Int!, serverRoleId: Int!, startDate: date!): checkoutResponse

  """
  Delete the specified domain checkout and release the domain if deleted entry was the latest checkout
  """
  deleteDomainCheckout(checkoutId: Int!): checkoutResponse

  """
  Delete the specified evidence file and remove the associated file from the filesystem
  """
  deleteEvidence(evidenceId: Int!): deleteResponse

  """
  Delete the specified server checkout and release the server if deleted entry was the latest checkout
  """
  deleteServerCheckout(checkoutId: Int!): checkoutResponse

  """
  Delete the specified template file and remove the associated file from the filesystem
  """
  deleteTemplate(templateId: Int!): deleteResponse

  """
  delete data from the table: "reporting_archive"
  """
  delete_archive(
    """filter the rows which have to be deleted"""
    where: archive_bool_exp!
  ): archive_mutation_response

  """
  delete single row from the table: "reporting_archive"
  """
  delete_archive_by_pk(id: bigint!): archive

  """
  delete data from the table: "shepherd_auxserveraddress"
  """
  delete_auxServerAddresses(
    """filter the rows which have to be deleted"""
    where: auxServerAddresses_bool_exp!
  ): auxServerAddresses_mutation_response

  """
  delete data from the table: "rolodex_client"
  """
  delete_client(
    """filter the rows which have to be deleted"""
    where: client_bool_exp!
  ): client_mutation_response

  """
  delete data from the table: "rolodex_clientinvite"
  """
  delete_clientInvite(
    """filter the rows which have to be deleted"""
    where: clientInvite_bool_exp!
  ): clientInvite_mutation_response

  """
  delete single row from the table: "rolodex_clientinvite"
  """
  delete_clientInvite_by_pk(id: bigint!): clientInvite

  """
  delete data from the table: "rolodex_clientnote"
  """
  delete_clientNote(
    """filter the rows which have to be deleted"""
    where: clientNote_bool_exp!
  ): clientNote_mutation_response

  """
  delete single row from the table: "rolodex_clientnote"
  """
  delete_clientNote_by_pk(id: bigint!): clientNote

  """
  delete single row from the table: "rolodex_client"
  """
  delete_client_by_pk(id: bigint!): client

  """
  delete data from the table: "shepherd_transientserver"
  """
  delete_cloudServer(
    """filter the rows which have to be deleted"""
    where: cloudServer_bool_exp!
  ): cloudServer_mutation_response

  """
  delete single row from the table: "shepherd_transientserver"
  """
  delete_cloudServer_by_pk(id: bigint!): cloudServer

  """
  delete data from the table: "rolodex_clientcontact"
  """
  delete_contacts(
    """filter the rows which have to be deleted"""
    where: contacts_bool_exp!
  ): contacts_mutation_response

  """
  delete single row from the table: "rolodex_clientcontact"
  """
  delete_contacts_by_pk(id: bigint!): contacts

  """
  delete data from the table: "shepherd_domainnote"
  """
  delete_domainNote(
    """filter the rows which have to be deleted"""
    where: domainNote_bool_exp!
  ): domainNote_mutation_response

  """
  delete single row from the table: "shepherd_domainnote"
  """
  delete_domainNote_by_pk(id: bigint!): domainNote

  """
  delete data from the table: "shepherd_domainserverconnection"
  """
  delete_domainServerConnection(
    """filter the rows which have to be deleted"""
    where: domainServerConnection_bool_exp!
  ): domainServerConnection_mutation_response

  """
  delete single row from the table: "shepherd_domainserverconnection"
  """
  delete_domainServerConnection_by_pk(id: bigint!): domainServerConnection

  """
  delete data from the table: "reporting_finding"
  """
  delete_finding(
    """filter the rows which have to be deleted"""
    where: finding_bool_exp!
  ): finding_mutation_response

  """
  delete data from the table: "reporting_findingnote"
  """
  delete_findingNote(
    """filter the rows which have to be deleted"""
    where: findingNote_bool_exp!
  ): findingNote_mutation_response

  """
  delete single row from the table: "reporting_findingnote"
  """
  delete_findingNote_by_pk(id: bigint!): findingNote

  """
  delete single row from the table: "reporting_finding"
  """
  delete_finding_by_pk(id: bigint!): finding

  """
  delete data from the table: "rolodex_projectobjective"
  """
  delete_objective(
    """filter the rows which have to be deleted"""
    where: objective_bool_exp!
  ): objective_mutation_response

  """
  delete data from the table: "rolodex_projectsubtask"
  """
  delete_objectiveSubTask(
    """filter the rows which have to be deleted"""
    where: objectiveSubTask_bool_exp!
  ): objectiveSubTask_mutation_response

  """
  delete single row from the table: "rolodex_projectsubtask"
  """
  delete_objectiveSubTask_by_pk(id: bigint!): objectiveSubTask

  """
  delete single row from the table: "rolodex_projectobjective"
  """
  delete_objective_by_pk(id: bigint!): objective

  """
  delete data from the table: "oplog_oplog"
  """
  delete_oplog(
    """filter the rows which have to be deleted"""
    where: oplog_bool_exp!
  ): oplog_mutation_response

  """
  delete data from the table: "oplog_oplogentry"
  """
  delete_oplogEntry(
    """filter the rows which have to be deleted"""
    where: oplogEntry_bool_exp!
  ): oplogEntry_mutation_response

  """
  delete single row from the table: "oplog_oplogentry"
  """
  delete_oplogEntry_by_pk(id: bigint!): oplogEntry

  """
  delete single row from the table: "oplog_oplog"
  """
  delete_oplog_by_pk(id: bigint!): oplog

  """
  delete data from the table: "rolodex_project"
  """
  delete_project(
    """filter the rows which have to be deleted"""
    where: project_bool_exp!
  ): project_mutation_response

  """
  delete data from the table: "rolodex_projectassignment"
  """
  delete_projectAssignment(
    """filter the rows which have to be deleted"""
    where: projectAssignment_bool_exp!
  ): projectAssignment_mutation_response

  """
  delete single row from the table: "rolodex_projectassignment"
  """
  delete_projectAssignment_by_pk(id: bigint!): projectAssignment

  """
  delete data from the table: "rolodex_projectinvite"
  """
  delete_projectInvite(
    """filter the rows which have to be deleted"""
    where: projectInvite_bool_exp!
  ): projectInvite_mutation_response

  """
  delete single row from the table: "rolodex_projectinvite"
  """
  delete_projectInvite_by_pk(id: bigint!): projectInvite

  """
  delete data from the table: "rolodex_projectnote"
  """
  delete_projectNote(
    """filter the rows which have to be deleted"""
    where: projectNote_bool_exp!
  ): projectNote_mutation_response

  """
  delete single row from the table: "rolodex_projectnote"
  """
  delete_projectNote_by_pk(id: bigint!): projectNote

  """
  delete single row from the table: "rolodex_project"
  """
  delete_project_by_pk(id: bigint!): project

  """
  delete data from the table: "reporting_report"
  """
  delete_report(
    """filter the rows which have to be deleted"""
    where: report_bool_exp!
  ): report_mutation_response

  """
  delete single row from the table: "reporting_report"
  """
  delete_report_by_pk(id: bigint!): report

  """
  delete data from the table: "reporting_reportfindinglink"
  """
  delete_reportedFinding(
    """filter the rows which have to be deleted"""
    where: reportedFinding_bool_exp!
  ): reportedFinding_mutation_response

  """
  delete data from the table: "reporting_localfindingnote"
  """
  delete_reportedFindingNote(
    """filter the rows which have to be deleted"""
    where: reportedFindingNote_bool_exp!
  ): reportedFindingNote_mutation_response

  """
  delete single row from the table: "reporting_localfindingnote"
  """
  delete_reportedFindingNote_by_pk(id: bigint!): reportedFindingNote

  """
  delete single row from the table: "reporting_reportfindinglink"
  """
  delete_reportedFinding_by_pk(id: bigint!): reportedFinding

  """
  delete data from the table: "rolodex_projectscope"
  """
  delete_scope(
    """filter the rows which have to be deleted"""
    where: scope_bool_exp!
  ): scope_mutation_response

  """
  delete single row from the table: "rolodex_projectscope"
  """
  delete_scope_by_pk(id: bigint!): scope

  """
  delete data from the table: "shepherd_servernote"
  """
  delete_serverNote(
    """filter the rows which have to be deleted"""
    where: serverNote_bool_exp!
  ): serverNote_mutation_response

  """
  delete single row from the table: "shepherd_servernote"
  """
  delete_serverNote_by_pk(id: bigint!): serverNote

  """
  delete data from the table: "shepherd_staticserver"
  """
  delete_staticServer(
    """filter the rows which have to be deleted"""
    where: staticServer_bool_exp!
  ): staticServer_mutation_response

  """
  delete single row from the table: "shepherd_staticserver"
  """
  delete_staticServer_by_pk(id: bigint!): staticServer

  """
  delete data from the table: "rolodex_projecttarget"
  """
  delete_target(
    """filter the rows which have to be deleted"""
    where: target_bool_exp!
  ): target_mutation_response

  """
  delete single row from the table: "rolodex_projecttarget"
  """
  delete_target_by_pk(id: bigint!): target

  """Generate a JSON report for the given report ID"""
  generateReport(id: Int!): ReportResponse

  """
  insert data into the table: "shepherd_auxserveraddress"
  """
  insert_auxServerAddresses(
    """the rows to be inserted"""
    objects: [auxServerAddresses_insert_input!]!

    """upsert condition"""
    on_conflict: auxServerAddresses_on_conflict
  ): auxServerAddresses_mutation_response

  """
  insert a single row into the table: "shepherd_auxserveraddress"
  """
  insert_auxServerAddresses_one(
    """the row to be inserted"""
    object: auxServerAddresses_insert_input!

    """upsert condition"""
    on_conflict: auxServerAddresses_on_conflict
  ): auxServerAddresses

  """
  insert data into the table: "rolodex_client"
  """
  insert_client(
    """the rows to be inserted"""
    objects: [client_insert_input!]!

    """upsert condition"""
    on_conflict: client_on_conflict
  ): client_mutation_response

  """
  insert data into the table: "rolodex_clientinvite"
  """
  insert_clientInvite(
    """the rows to be inserted"""
    objects: [clientInvite_insert_input!]!

    """upsert condition"""
    on_conflict: clientInvite_on_conflict
  ): clientInvite_mutation_response

  """
  insert a single row into the table: "rolodex_clientinvite"
  """
  insert_clientInvite_one(
    """the row to be inserted"""
    object: clientInvite_insert_input!

    """upsert condition"""
    on_conflict: clientInvite_on_conflict
  ): clientInvite

  """
  insert data into the table: "rolodex_clientnote"
  """
  insert_clientNote(
    """the rows to be inserted"""
    objects: [clientNote_insert_input!]!

    """upsert condition"""
    on_conflict: clientNote_on_conflict
  ): clientNote_mutation_response

  """
  insert a single row into the table: "rolodex_clientnote"
  """
  insert_clientNote_one(
    """the row to be inserted"""
    object: clientNote_insert_input!

    """upsert condition"""
    on_conflict: clientNote_on_conflict
  ): clientNote

  """
  insert a single row into the table: "rolodex_client"
  """
  insert_client_one(
    """the row to be inserted"""
    object: client_insert_input!

    """upsert condition"""
    on_conflict: client_on_conflict
  ): client

  """
  insert data into the table: "shepherd_transientserver"
  """
  insert_cloudServer(
    """the rows to be inserted"""
    objects: [cloudServer_insert_input!]!

    """upsert condition"""
    on_conflict: cloudServer_on_conflict
  ): cloudServer_mutation_response

  """
  insert a single row into the table: "shepherd_transientserver"
  """
  insert_cloudServer_one(
    """the row to be inserted"""
    object: cloudServer_insert_input!

    """upsert condition"""
    on_conflict: cloudServer_on_conflict
  ): cloudServer

  """
  insert data into the table: "rolodex_clientcontact"
  """
  insert_contacts(
    """the rows to be inserted"""
    objects: [contacts_insert_input!]!

    """upsert condition"""
    on_conflict: contacts_on_conflict
  ): contacts_mutation_response

  """
  insert a single row into the table: "rolodex_clientcontact"
  """
  insert_contacts_one(
    """the row to be inserted"""
    object: contacts_insert_input!

    """upsert condition"""
    on_conflict: contacts_on_conflict
  ): contacts

  """
  insert data into the table: "shepherd_domain"
  """
  insert_domain(
    """the rows to be inserted"""
    objects: [domain_insert_input!]!

    """upsert condition"""
    on_conflict: domain_on_conflict
  ): domain_mutation_response

  """
  insert data into the table: "shepherd_domainnote"
  """
  insert_domainNote(
    """the rows to be inserted"""
    objects: [domainNote_insert_input!]!

    """upsert condition"""
    on_conflict: domainNote_on_conflict
  ): domainNote_mutation_response

  """
  insert a single row into the table: "shepherd_domainnote"
  """
  insert_domainNote_one(
    """the row to be inserted"""
    object: domainNote_insert_input!

    """upsert condition"""
    on_conflict: domainNote_on_conflict
  ): domainNote

  """
  insert data into the table: "shepherd_domainserverconnection"
  """
  insert_domainServerConnection(
    """the rows to be inserted"""
    objects: [domainServerConnection_insert_input!]!

    """upsert condition"""
    on_conflict: domainServerConnection_on_conflict
  ): domainServerConnection_mutation_response

  """
  insert a single row into the table: "shepherd_domainserverconnection"
  """
  insert_domainServerConnection_one(
    """the row to be inserted"""
    object: domainServerConnection_insert_input!

    """upsert condition"""
    on_conflict: domainServerConnection_on_conflict
  ): domainServerConnection

  """
  insert a single row into the table: "shepherd_domain"
  """
  insert_domain_one(
    """the row to be inserted"""
    object: domain_insert_input!

    """upsert condition"""
    on_conflict: domain_on_conflict
  ): domain

  """
  insert data into the table: "reporting_finding"
  """
  insert_finding(
    """the rows to be inserted"""
    objects: [finding_insert_input!]!

    """upsert condition"""
    on_conflict: finding_on_conflict
  ): finding_mutation_response

  """
  insert data into the table: "reporting_findingnote"
  """
  insert_findingNote(
    """the rows to be inserted"""
    objects: [findingNote_insert_input!]!

    """upsert condition"""
    on_conflict: findingNote_on_conflict
  ): findingNote_mutation_response

  """
  insert a single row into the table: "reporting_findingnote"
  """
  insert_findingNote_one(
    """the row to be inserted"""
    object: findingNote_insert_input!

    """upsert condition"""
    on_conflict: findingNote_on_conflict
  ): findingNote

  """
  insert a single row into the table: "reporting_finding"
  """
  insert_finding_one(
    """the row to be inserted"""
    object: finding_insert_input!

    """upsert condition"""
    on_conflict: finding_on_conflict
  ): finding

  """
  insert data into the table: "rolodex_projectobjective"
  """
  insert_objective(
    """the rows to be inserted"""
    objects: [objective_insert_input!]!

    """upsert condition"""
    on_conflict: objective_on_conflict
  ): objective_mutation_response

  """
  insert data into the table: "rolodex_projectsubtask"
  """
  insert_objectiveSubTask(
    """the rows to be inserted"""
    objects: [objectiveSubTask_insert_input!]!

    """upsert condition"""
    on_conflict: objectiveSubTask_on_conflict
  ): objectiveSubTask_mutation_response

  """
  insert a single row into the table: "rolodex_projectsubtask"
  """
  insert_objectiveSubTask_one(
    """the row to be inserted"""
    object: objectiveSubTask_insert_input!

    """upsert condition"""
    on_conflict: objectiveSubTask_on_conflict
  ): objectiveSubTask

  """
  insert a single row into the table: "rolodex_projectobjective"
  """
  insert_objective_one(
    """the row to be inserted"""
    object: objective_insert_input!

    """upsert condition"""
    on_conflict: objective_on_conflict
  ): objective

  """
  insert data into the table: "oplog_oplog"
  """
  insert_oplog(
    """the rows to be inserted"""
    objects: [oplog_insert_input!]!

    """upsert condition"""
    on_conflict: oplog_on_conflict
  ): oplog_mutation_response

  """
  insert data into the table: "oplog_oplogentry"
  """
  insert_oplogEntry(
    """the rows to be inserted"""
    objects: [oplogEntry_insert_input!]!

    """upsert condition"""
    on_conflict: oplogEntry_on_conflict
  ): oplogEntry_mutation_response

  """
  insert a single row into the table: "oplog_oplogentry"
  """
  insert_oplogEntry_one(
    """the row to be inserted"""
    object: oplogEntry_insert_input!

    """upsert condition"""
    on_conflict: oplogEntry_on_conflict
  ): oplogEntry

  """
  insert a single row into the table: "oplog_oplog"
  """
  insert_oplog_one(
    """the row to be inserted"""
    object: oplog_insert_input!

    """upsert condition"""
    on_conflict: oplog_on_conflict
  ): oplog

  """
  insert data into the table: "rolodex_project"
  """
  insert_project(
    """the rows to be inserted"""
    objects: [project_insert_input!]!

    """upsert condition"""
    on_conflict: project_on_conflict
  ): project_mutation_response

  """
  insert data into the table: "rolodex_projectassignment"
  """
  insert_projectAssignment(
    """the rows to be inserted"""
    objects: [projectAssignment_insert_input!]!

    """upsert condition"""
    on_conflict: projectAssignment_on_conflict
  ): projectAssignment_mutation_response

  """
  insert a single row into the table: "rolodex_projectassignment"
  """
  insert_projectAssignment_one(
    """the row to be inserted"""
    object: projectAssignment_insert_input!

    """upsert condition"""
    on_conflict: projectAssignment_on_conflict
  ): projectAssignment

  """
  insert data into the table: "rolodex_projectinvite"
  """
  insert_projectInvite(
    """the rows to be inserted"""
    objects: [projectInvite_insert_input!]!

    """upsert condition"""
    on_conflict: projectInvite_on_conflict
  ): projectInvite_mutation_response

  """
  insert a single row into the table: "rolodex_projectinvite"
  """
  insert_projectInvite_one(
    """the row to be inserted"""
    object: projectInvite_insert_input!

    """upsert condition"""
    on_conflict: projectInvite_on_conflict
  ): projectInvite

  """
  insert data into the table: "rolodex_projectnote"
  """
  insert_projectNote(
    """the rows to be inserted"""
    objects: [projectNote_insert_input!]!

    """upsert condition"""
    on_conflict: projectNote_on_conflict
  ): projectNote_mutation_response

  """
  insert a single row into the table: "rolodex_projectnote"
  """
  insert_projectNote_one(
    """the row to be inserted"""
    object: projectNote_insert_input!

    """upsert condition"""
    on_conflict: projectNote_on_conflict
  ): projectNote

  """
  insert a single row into the table: "rolodex_project"
  """
  insert_project_one(
    """the row to be inserted"""
    object: project_insert_input!

    """upsert condition"""
    on_conflict: project_on_conflict
  ): project

  """
  insert data into the table: "reporting_report"
  """
  insert_report(
    """the rows to be inserted"""
    objects: [report_insert_input!]!

    """upsert condition"""
    on_conflict: report_on_conflict
  ): report_mutation_response

  """
  insert a single row into the table: "reporting_report"
  """
  insert_report_one(
    """the row to be inserted"""
    object: report_insert_input!

    """upsert condition"""
    on_conflict: report_on_conflict
  ): report

  """
  insert data into the table: "reporting_reportfindinglink"
  """
  insert_reportedFinding(
    """the rows to be inserted"""
    objects: [reportedFinding_insert_input!]!

    """upsert condition"""
    on_conflict: reportedFinding_on_conflict
  ): reportedFinding_mutation_response

  """
  insert data into the table: "reporting_localfindingnote"
  """
  insert_reportedFindingNote(
    """the rows to be inserted"""
    objects: [reportedFindingNote_insert_input!]!

    """upsert condition"""
    on_conflict: reportedFindingNote_on_conflict
  ): reportedFindingNote_mutation_response

  """
  insert a single row into the table: "reporting_localfindingnote"
  """
  insert_reportedFindingNote_one(
    """the row to be inserted"""
    object: reportedFindingNote_insert_input!

    """upsert condition"""
    on_conflict: reportedFindingNote_on_conflict
  ): reportedFindingNote

  """
  insert a single row into the table: "reporting_reportfindinglink"
  """
  insert_reportedFinding_one(
    """the row to be inserted"""
    object: reportedFinding_insert_input!

    """upsert condition"""
    on_conflict: reportedFinding_on_conflict
  ): reportedFinding

  """
  insert data into the table: "rolodex_projectscope"
  """
  insert_scope(
    """the rows to be inserted"""
    objects: [scope_insert_input!]!

    """upsert condition"""
    on_conflict: scope_on_conflict
  ): scope_mutation_response

  """
  insert a single row into the table: "rolodex_projectscope"
  """
  insert_scope_one(
    """the row to be inserted"""
    object: scope_insert_input!

    """upsert condition"""
    on_conflict: scope_on_conflict
  ): scope

  """
  insert data into the table: "shepherd_serverhistory"
  """
  insert_serverCheckout(
    """the rows to be inserted"""
    objects: [serverCheckout_insert_input!]!

    """upsert condition"""
    on_conflict: serverCheckout_on_conflict
  ): serverCheckout_mutation_response

  """
  insert a single row into the table: "shepherd_serverhistory"
  """
  insert_serverCheckout_one(
    """the row to be inserted"""
    object: serverCheckout_insert_input!

    """upsert condition"""
    on_conflict: serverCheckout_on_conflict
  ): serverCheckout

  """
  insert data into the table: "shepherd_servernote"
  """
  insert_serverNote(
    """the rows to be inserted"""
    objects: [serverNote_insert_input!]!

    """upsert condition"""
    on_conflict: serverNote_on_conflict
  ): serverNote_mutation_response

  """
  insert a single row into the table: "shepherd_servernote"
  """
  insert_serverNote_one(
    """the row to be inserted"""
    object: serverNote_insert_input!

    """upsert condition"""
    on_conflict: serverNote_on_conflict
  ): serverNote

  """
  insert data into the table: "shepherd_staticserver"
  """
  insert_staticServer(
    """the rows to be inserted"""
    objects: [staticServer_insert_input!]!

    """upsert condition"""
    on_conflict: staticServer_on_conflict
  ): staticServer_mutation_response

  """
  insert a single row into the table: "shepherd_staticserver"
  """
  insert_staticServer_one(
    """the row to be inserted"""
    object: staticServer_insert_input!

    """upsert condition"""
    on_conflict: staticServer_on_conflict
  ): staticServer

  """
  insert data into the table: "rolodex_projecttarget"
  """
  insert_target(
    """the rows to be inserted"""
    objects: [target_insert_input!]!

    """upsert condition"""
    on_conflict: target_on_conflict
  ): target_mutation_response

  """
  insert a single row into the table: "rolodex_projecttarget"
  """
  insert_target_one(
    """the row to be inserted"""
    object: target_insert_input!

    """upsert condition"""
    on_conflict: target_on_conflict
  ): target
  login(password: String!, username: String!): LoginResponse

  """
  update data of the table: "reporting_archive"
  """
  update_archive(
    """increments the numeric columns with given value of the filtered values"""
    _inc: archive_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: archive_set_input

    """filter the rows which have to be updated"""
    where: archive_bool_exp!
  ): archive_mutation_response

  """
  update single row of the table: "reporting_archive"
  """
  update_archive_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: archive_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: archive_set_input
    pk_columns: archive_pk_columns_input!
  ): archive

  """
  update data of the table: "shepherd_auxserveraddress"
  """
  update_auxServerAddresses(
    """increments the numeric columns with given value of the filtered values"""
    _inc: auxServerAddresses_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: auxServerAddresses_set_input

    """filter the rows which have to be updated"""
    where: auxServerAddresses_bool_exp!
  ): auxServerAddresses_mutation_response

  """
  update data of the table: "rolodex_client"
  """
  update_client(
    """sets the columns of the filtered rows to the given values"""
    _set: client_set_input

    """filter the rows which have to be updated"""
    where: client_bool_exp!
  ): client_mutation_response

  """
  update data of the table: "rolodex_clientinvite"
  """
  update_clientInvite(
    """increments the numeric columns with given value of the filtered values"""
    _inc: clientInvite_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: clientInvite_set_input

    """filter the rows which have to be updated"""
    where: clientInvite_bool_exp!
  ): clientInvite_mutation_response

  """
  update single row of the table: "rolodex_clientinvite"
  """
  update_clientInvite_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: clientInvite_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: clientInvite_set_input
    pk_columns: clientInvite_pk_columns_input!
  ): clientInvite

  """
  update data of the table: "rolodex_clientnote"
  """
  update_clientNote(
    """increments the numeric columns with given value of the filtered values"""
    _inc: clientNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: clientNote_set_input

    """filter the rows which have to be updated"""
    where: clientNote_bool_exp!
  ): clientNote_mutation_response

  """
  update single row of the table: "rolodex_clientnote"
  """
  update_clientNote_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: clientNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: clientNote_set_input
    pk_columns: clientNote_pk_columns_input!
  ): clientNote

  """
  update single row of the table: "rolodex_client"
  """
  update_client_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: client_set_input
    pk_columns: client_pk_columns_input!
  ): client

  """
  update data of the table: "shepherd_transientserver"
  """
  update_cloudServer(
    """increments the numeric columns with given value of the filtered values"""
    _inc: cloudServer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cloudServer_set_input

    """filter the rows which have to be updated"""
    where: cloudServer_bool_exp!
  ): cloudServer_mutation_response

  """
  update single row of the table: "shepherd_transientserver"
  """
  update_cloudServer_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: cloudServer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: cloudServer_set_input
    pk_columns: cloudServer_pk_columns_input!
  ): cloudServer

  """
  update data of the table: "commandcenter_companyinformation"
  """
  update_companyInfo(
    """sets the columns of the filtered rows to the given values"""
    _set: companyInfo_set_input

    """filter the rows which have to be updated"""
    where: companyInfo_bool_exp!
  ): companyInfo_mutation_response

  """
  update single row of the table: "commandcenter_companyinformation"
  """
  update_companyInfo_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: companyInfo_set_input
    pk_columns: companyInfo_pk_columns_input!
  ): companyInfo

  """
  update data of the table: "rolodex_clientcontact"
  """
  update_contacts(
    """increments the numeric columns with given value of the filtered values"""
    _inc: contacts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: contacts_set_input

    """filter the rows which have to be updated"""
    where: contacts_bool_exp!
  ): contacts_mutation_response

  """
  update single row of the table: "rolodex_clientcontact"
  """
  update_contacts_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: contacts_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: contacts_set_input
    pk_columns: contacts_pk_columns_input!
  ): contacts

  """
  update data of the table: "shepherd_domain"
  """
  update_domain(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: domain_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: domain_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: domain_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: domain_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: domain_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: domain_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: domain_set_input

    """filter the rows which have to be updated"""
    where: domain_bool_exp!
  ): domain_mutation_response

  """
  update data of the table: "shepherd_history"
  """
  update_domainCheckout(
    """increments the numeric columns with given value of the filtered values"""
    _inc: domainCheckout_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: domainCheckout_set_input

    """filter the rows which have to be updated"""
    where: domainCheckout_bool_exp!
  ): domainCheckout_mutation_response

  """
  update single row of the table: "shepherd_history"
  """
  update_domainCheckout_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: domainCheckout_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: domainCheckout_set_input
    pk_columns: domainCheckout_pk_columns_input!
  ): domainCheckout

  """
  update data of the table: "shepherd_domainnote"
  """
  update_domainNote(
    """increments the numeric columns with given value of the filtered values"""
    _inc: domainNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: domainNote_set_input

    """filter the rows which have to be updated"""
    where: domainNote_bool_exp!
  ): domainNote_mutation_response

  """
  update single row of the table: "shepherd_domainnote"
  """
  update_domainNote_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: domainNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: domainNote_set_input
    pk_columns: domainNote_pk_columns_input!
  ): domainNote

  """
  update data of the table: "shepherd_domainserverconnection"
  """
  update_domainServerConnection(
    """increments the numeric columns with given value of the filtered values"""
    _inc: domainServerConnection_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: domainServerConnection_set_input

    """filter the rows which have to be updated"""
    where: domainServerConnection_bool_exp!
  ): domainServerConnection_mutation_response

  """
  update single row of the table: "shepherd_domainserverconnection"
  """
  update_domainServerConnection_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: domainServerConnection_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: domainServerConnection_set_input
    pk_columns: domainServerConnection_pk_columns_input!
  ): domainServerConnection

  """
  update single row of the table: "shepherd_domain"
  """
  update_domain_by_pk(
    """append existing jsonb value of filtered columns with new jsonb value"""
    _append: domain_append_input

    """
    delete the field or element with specified path (for JSON arrays, negative integers count from the end)
    """
    _delete_at_path: domain_delete_at_path_input

    """
    delete the array element with specified index (negative integers count from the end). throws an error if top level container is not an array
    """
    _delete_elem: domain_delete_elem_input

    """
    delete key/value pair or string element. key/value pairs are matched based on their key value
    """
    _delete_key: domain_delete_key_input

    """increments the numeric columns with given value of the filtered values"""
    _inc: domain_inc_input

    """prepend existing jsonb value of filtered columns with new jsonb value"""
    _prepend: domain_prepend_input

    """sets the columns of the filtered rows to the given values"""
    _set: domain_set_input
    pk_columns: domain_pk_columns_input!
  ): domain

  """
  update data of the table: "reporting_evidence"
  """
  update_evidence(
    """increments the numeric columns with given value of the filtered values"""
    _inc: evidence_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: evidence_set_input

    """filter the rows which have to be updated"""
    where: evidence_bool_exp!
  ): evidence_mutation_response

  """
  update single row of the table: "reporting_evidence"
  """
  update_evidence_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: evidence_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: evidence_set_input
    pk_columns: evidence_pk_columns_input!
  ): evidence

  """
  update data of the table: "reporting_finding"
  """
  update_finding(
    """increments the numeric columns with given value of the filtered values"""
    _inc: finding_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: finding_set_input

    """filter the rows which have to be updated"""
    where: finding_bool_exp!
  ): finding_mutation_response

  """
  update data of the table: "reporting_findingnote"
  """
  update_findingNote(
    """increments the numeric columns with given value of the filtered values"""
    _inc: findingNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: findingNote_set_input

    """filter the rows which have to be updated"""
    where: findingNote_bool_exp!
  ): findingNote_mutation_response

  """
  update single row of the table: "reporting_findingnote"
  """
  update_findingNote_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: findingNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: findingNote_set_input
    pk_columns: findingNote_pk_columns_input!
  ): findingNote

  """
  update single row of the table: "reporting_finding"
  """
  update_finding_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: finding_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: finding_set_input
    pk_columns: finding_pk_columns_input!
  ): finding

  """
  update data of the table: "rolodex_projectobjective"
  """
  update_objective(
    """increments the numeric columns with given value of the filtered values"""
    _inc: objective_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: objective_set_input

    """filter the rows which have to be updated"""
    where: objective_bool_exp!
  ): objective_mutation_response

  """
  update data of the table: "rolodex_projectsubtask"
  """
  update_objectiveSubTask(
    """increments the numeric columns with given value of the filtered values"""
    _inc: objectiveSubTask_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: objectiveSubTask_set_input

    """filter the rows which have to be updated"""
    where: objectiveSubTask_bool_exp!
  ): objectiveSubTask_mutation_response

  """
  update single row of the table: "rolodex_projectsubtask"
  """
  update_objectiveSubTask_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: objectiveSubTask_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: objectiveSubTask_set_input
    pk_columns: objectiveSubTask_pk_columns_input!
  ): objectiveSubTask

  """
  update single row of the table: "rolodex_projectobjective"
  """
  update_objective_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: objective_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: objective_set_input
    pk_columns: objective_pk_columns_input!
  ): objective

  """
  update data of the table: "oplog_oplog"
  """
  update_oplog(
    """increments the numeric columns with given value of the filtered values"""
    _inc: oplog_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: oplog_set_input

    """filter the rows which have to be updated"""
    where: oplog_bool_exp!
  ): oplog_mutation_response

  """
  update data of the table: "oplog_oplogentry"
  """
  update_oplogEntry(
    """increments the numeric columns with given value of the filtered values"""
    _inc: oplogEntry_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: oplogEntry_set_input

    """filter the rows which have to be updated"""
    where: oplogEntry_bool_exp!
  ): oplogEntry_mutation_response

  """
  update single row of the table: "oplog_oplogentry"
  """
  update_oplogEntry_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: oplogEntry_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: oplogEntry_set_input
    pk_columns: oplogEntry_pk_columns_input!
  ): oplogEntry

  """
  update single row of the table: "oplog_oplog"
  """
  update_oplog_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: oplog_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: oplog_set_input
    pk_columns: oplog_pk_columns_input!
  ): oplog

  """
  update data of the table: "rolodex_project"
  """
  update_project(
    """increments the numeric columns with given value of the filtered values"""
    _inc: project_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: project_set_input

    """filter the rows which have to be updated"""
    where: project_bool_exp!
  ): project_mutation_response

  """
  update data of the table: "rolodex_projectassignment"
  """
  update_projectAssignment(
    """increments the numeric columns with given value of the filtered values"""
    _inc: projectAssignment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: projectAssignment_set_input

    """filter the rows which have to be updated"""
    where: projectAssignment_bool_exp!
  ): projectAssignment_mutation_response

  """
  update single row of the table: "rolodex_projectassignment"
  """
  update_projectAssignment_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: projectAssignment_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: projectAssignment_set_input
    pk_columns: projectAssignment_pk_columns_input!
  ): projectAssignment

  """
  update data of the table: "rolodex_projectinvite"
  """
  update_projectInvite(
    """increments the numeric columns with given value of the filtered values"""
    _inc: projectInvite_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: projectInvite_set_input

    """filter the rows which have to be updated"""
    where: projectInvite_bool_exp!
  ): projectInvite_mutation_response

  """
  update single row of the table: "rolodex_projectinvite"
  """
  update_projectInvite_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: projectInvite_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: projectInvite_set_input
    pk_columns: projectInvite_pk_columns_input!
  ): projectInvite

  """
  update data of the table: "rolodex_projectnote"
  """
  update_projectNote(
    """increments the numeric columns with given value of the filtered values"""
    _inc: projectNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: projectNote_set_input

    """filter the rows which have to be updated"""
    where: projectNote_bool_exp!
  ): projectNote_mutation_response

  """
  update single row of the table: "rolodex_projectnote"
  """
  update_projectNote_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: projectNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: projectNote_set_input
    pk_columns: projectNote_pk_columns_input!
  ): projectNote

  """
  update single row of the table: "rolodex_project"
  """
  update_project_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: project_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: project_set_input
    pk_columns: project_pk_columns_input!
  ): project

  """
  update data of the table: "reporting_report"
  """
  update_report(
    """increments the numeric columns with given value of the filtered values"""
    _inc: report_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: report_set_input

    """filter the rows which have to be updated"""
    where: report_bool_exp!
  ): report_mutation_response

  """
  update data of the table: "commandcenter_reportconfiguration"
  """
  update_reportConfiguration(
    """increments the numeric columns with given value of the filtered values"""
    _inc: reportConfiguration_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: reportConfiguration_set_input

    """filter the rows which have to be updated"""
    where: reportConfiguration_bool_exp!
  ): reportConfiguration_mutation_response

  """
  update single row of the table: "commandcenter_reportconfiguration"
  """
  update_reportConfiguration_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: reportConfiguration_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: reportConfiguration_set_input
    pk_columns: reportConfiguration_pk_columns_input!
  ): reportConfiguration

  """
  update single row of the table: "reporting_report"
  """
  update_report_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: report_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: report_set_input
    pk_columns: report_pk_columns_input!
  ): report

  """
  update data of the table: "reporting_reportfindinglink"
  """
  update_reportedFinding(
    """increments the numeric columns with given value of the filtered values"""
    _inc: reportedFinding_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: reportedFinding_set_input

    """filter the rows which have to be updated"""
    where: reportedFinding_bool_exp!
  ): reportedFinding_mutation_response

  """
  update data of the table: "reporting_localfindingnote"
  """
  update_reportedFindingNote(
    """increments the numeric columns with given value of the filtered values"""
    _inc: reportedFindingNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: reportedFindingNote_set_input

    """filter the rows which have to be updated"""
    where: reportedFindingNote_bool_exp!
  ): reportedFindingNote_mutation_response

  """
  update single row of the table: "reporting_localfindingnote"
  """
  update_reportedFindingNote_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: reportedFindingNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: reportedFindingNote_set_input
    pk_columns: reportedFindingNote_pk_columns_input!
  ): reportedFindingNote

  """
  update single row of the table: "reporting_reportfindinglink"
  """
  update_reportedFinding_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: reportedFinding_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: reportedFinding_set_input
    pk_columns: reportedFinding_pk_columns_input!
  ): reportedFinding

  """
  update data of the table: "rolodex_projectscope"
  """
  update_scope(
    """increments the numeric columns with given value of the filtered values"""
    _inc: scope_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: scope_set_input

    """filter the rows which have to be updated"""
    where: scope_bool_exp!
  ): scope_mutation_response

  """
  update single row of the table: "rolodex_projectscope"
  """
  update_scope_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: scope_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: scope_set_input
    pk_columns: scope_pk_columns_input!
  ): scope

  """
  update data of the table: "shepherd_serverhistory"
  """
  update_serverCheckout(
    """increments the numeric columns with given value of the filtered values"""
    _inc: serverCheckout_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: serverCheckout_set_input

    """filter the rows which have to be updated"""
    where: serverCheckout_bool_exp!
  ): serverCheckout_mutation_response

  """
  update single row of the table: "shepherd_serverhistory"
  """
  update_serverCheckout_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: serverCheckout_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: serverCheckout_set_input
    pk_columns: serverCheckout_pk_columns_input!
  ): serverCheckout

  """
  update data of the table: "shepherd_servernote"
  """
  update_serverNote(
    """increments the numeric columns with given value of the filtered values"""
    _inc: serverNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: serverNote_set_input

    """filter the rows which have to be updated"""
    where: serverNote_bool_exp!
  ): serverNote_mutation_response

  """
  update single row of the table: "shepherd_servernote"
  """
  update_serverNote_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: serverNote_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: serverNote_set_input
    pk_columns: serverNote_pk_columns_input!
  ): serverNote

  """
  update data of the table: "shepherd_staticserver"
  """
  update_staticServer(
    """increments the numeric columns with given value of the filtered values"""
    _inc: staticServer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: staticServer_set_input

    """filter the rows which have to be updated"""
    where: staticServer_bool_exp!
  ): staticServer_mutation_response

  """
  update single row of the table: "shepherd_staticserver"
  """
  update_staticServer_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: staticServer_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: staticServer_set_input
    pk_columns: staticServer_pk_columns_input!
  ): staticServer

  """
  update data of the table: "rolodex_projecttarget"
  """
  update_target(
    """increments the numeric columns with given value of the filtered values"""
    _inc: target_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: target_set_input

    """filter the rows which have to be updated"""
    where: target_bool_exp!
  ): target_mutation_response

  """
  update single row of the table: "rolodex_projecttarget"
  """
  update_target_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: target_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: target_set_input
    pk_columns: target_pk_columns_input!
  ): target

  """
  update data of the table: "reporting_reporttemplate"
  """
  update_template(
    """increments the numeric columns with given value of the filtered values"""
    _inc: template_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: template_set_input

    """filter the rows which have to be updated"""
    where: template_bool_exp!
  ): template_mutation_response

  """
  update single row of the table: "reporting_reporttemplate"
  """
  update_template_by_pk(
    """increments the numeric columns with given value of the filtered values"""
    _inc: template_inc_input

    """sets the columns of the filtered rows to the given values"""
    _set: template_set_input
    pk_columns: template_pk_columns_input!
  ): template

  """
  update data of the table: "users_user"
  """
  update_user(
    """sets the columns of the filtered rows to the given values"""
    _set: user_set_input

    """filter the rows which have to be updated"""
    where: user_bool_exp!
  ): user_mutation_response

  """
  update data of the table: "home_userprofile"
  """
  update_userProfile(
    """sets the columns of the filtered rows to the given values"""
    _set: userProfile_set_input

    """filter the rows which have to be updated"""
    where: userProfile_bool_exp!
  ): userProfile_mutation_response

  """
  update single row of the table: "users_user"
  """
  update_user_by_pk(
    """sets the columns of the filtered rows to the given values"""
    _set: user_set_input
    pk_columns: user_pk_columns_input!
  ): user
}

"""
columns and relationships of "rolodex_projectobjective"
"""
type objective {
  complete: Boolean!
  deadline: date
  description: String
  id: bigint!
  markedComplete: date
  objective: String

  """An object relationship"""
  objectivePriority: objectivePriority

  """An object relationship"""
  objectiveStatus: objectiveStatus!

  """An array relationship"""
  objectiveSubTasks(
    """distinct select on columns"""
    distinct_on: [objectiveSubTask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectiveSubTask_order_by!]

    """filter the rows returned"""
    where: objectiveSubTask_bool_exp
  ): [objectiveSubTask!]!
  position: Int!
  priorityId: bigint

  """An object relationship"""
  project: project!
  projectId: bigint!
  statusId: bigint!
}

"""
columns and relationships of "rolodex_objectivepriority"
"""
type objectivePriority {
  id: bigint!

  """An array relationship"""
  objectives(
    """distinct select on columns"""
    distinct_on: [objective_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objective_order_by!]

    """filter the rows returned"""
    where: objective_bool_exp
  ): [objective!]!
  priority: String!
  weight: Int!
}

"""
Boolean expression to filter rows from the table "rolodex_objectivepriority". All fields are combined with a logical 'AND'.
"""
input objectivePriority_bool_exp {
  _and: [objectivePriority_bool_exp!]
  _not: objectivePriority_bool_exp
  _or: [objectivePriority_bool_exp!]
  id: bigint_comparison_exp
  objectives: objective_bool_exp
  priority: String_comparison_exp
  weight: Int_comparison_exp
}

"""Ordering options when selecting data from "rolodex_objectivepriority"."""
input objectivePriority_order_by {
  id: order_by
  objectives_aggregate: objective_aggregate_order_by
  priority: order_by
  weight: order_by
}

"""
select columns of table "rolodex_objectivepriority"
"""
enum objectivePriority_select_column {
  """column name"""
  id

  """column name"""
  priority

  """column name"""
  weight
}

"""
columns and relationships of "rolodex_objectivestatus"
"""
type objectiveStatus {
  id: bigint!
  objectiveStatus: String!

  """An array relationship"""
  objectiveSubTasks(
    """distinct select on columns"""
    distinct_on: [objectiveSubTask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectiveSubTask_order_by!]

    """filter the rows returned"""
    where: objectiveSubTask_bool_exp
  ): [objectiveSubTask!]!

  """An array relationship"""
  objectives(
    """distinct select on columns"""
    distinct_on: [objective_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objective_order_by!]

    """filter the rows returned"""
    where: objective_bool_exp
  ): [objective!]!
}

"""
Boolean expression to filter rows from the table "rolodex_objectivestatus". All fields are combined with a logical 'AND'.
"""
input objectiveStatus_bool_exp {
  _and: [objectiveStatus_bool_exp!]
  _not: objectiveStatus_bool_exp
  _or: [objectiveStatus_bool_exp!]
  id: bigint_comparison_exp
  objectiveStatus: String_comparison_exp
  objectiveSubTasks: objectiveSubTask_bool_exp
  objectives: objective_bool_exp
}

"""Ordering options when selecting data from "rolodex_objectivestatus"."""
input objectiveStatus_order_by {
  id: order_by
  objectiveStatus: order_by
  objectiveSubTasks_aggregate: objectiveSubTask_aggregate_order_by
  objectives_aggregate: objective_aggregate_order_by
}

"""
select columns of table "rolodex_objectivestatus"
"""
enum objectiveStatus_select_column {
  """column name"""
  id

  """column name"""
  objectiveStatus
}

"""
columns and relationships of "rolodex_projectsubtask"
"""
type objectiveSubTask {
  complete: Boolean!
  deadline: date
  id: bigint!

  """An object relationship"""
  objective: objective!

  """An object relationship"""
  objectiveStatus: objectiveStatus!
  parentId: bigint!
  statusId: bigint!
  task: String
}

"""
order by aggregate values of table "rolodex_projectsubtask"
"""
input objectiveSubTask_aggregate_order_by {
  avg: objectiveSubTask_avg_order_by
  count: order_by
  max: objectiveSubTask_max_order_by
  min: objectiveSubTask_min_order_by
  stddev: objectiveSubTask_stddev_order_by
  stddev_pop: objectiveSubTask_stddev_pop_order_by
  stddev_samp: objectiveSubTask_stddev_samp_order_by
  sum: objectiveSubTask_sum_order_by
  var_pop: objectiveSubTask_var_pop_order_by
  var_samp: objectiveSubTask_var_samp_order_by
  variance: objectiveSubTask_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projectsubtask"
"""
input objectiveSubTask_arr_rel_insert_input {
  data: [objectiveSubTask_insert_input!]!

  """upsert condition"""
  on_conflict: objectiveSubTask_on_conflict
}

"""
order by avg() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_avg_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projectsubtask". All fields are combined with a logical 'AND'.
"""
input objectiveSubTask_bool_exp {
  _and: [objectiveSubTask_bool_exp!]
  _not: objectiveSubTask_bool_exp
  _or: [objectiveSubTask_bool_exp!]
  complete: Boolean_comparison_exp
  deadline: date_comparison_exp
  id: bigint_comparison_exp
  objective: objective_bool_exp
  objectiveStatus: objectiveStatus_bool_exp
  parentId: bigint_comparison_exp
  statusId: bigint_comparison_exp
  task: String_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_projectsubtask"
"""
enum objectiveSubTask_constraint {
  """unique or primary key constraint"""
  rolodex_projectsubtask_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projectsubtask"
"""
input objectiveSubTask_inc_input {
  parentId: bigint
  statusId: bigint
}

"""
input type for inserting data into table "rolodex_projectsubtask"
"""
input objectiveSubTask_insert_input {
  deadline: date
  objective: objective_obj_rel_insert_input
  parentId: bigint
  statusId: bigint
  task: String
}

"""
order by max() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_max_order_by {
  deadline: order_by
  id: order_by
  parentId: order_by
  statusId: order_by
  task: order_by
}

"""
order by min() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_min_order_by {
  deadline: order_by
  id: order_by
  parentId: order_by
  statusId: order_by
  task: order_by
}

"""
response of any mutation on the table "rolodex_projectsubtask"
"""
type objectiveSubTask_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [objectiveSubTask!]!
}

"""
on_conflict condition type for table "rolodex_projectsubtask"
"""
input objectiveSubTask_on_conflict {
  constraint: objectiveSubTask_constraint!
  update_columns: [objectiveSubTask_update_column!]! = []
  where: objectiveSubTask_bool_exp
}

"""Ordering options when selecting data from "rolodex_projectsubtask"."""
input objectiveSubTask_order_by {
  complete: order_by
  deadline: order_by
  id: order_by
  objective: objective_order_by
  objectiveStatus: objectiveStatus_order_by
  parentId: order_by
  statusId: order_by
  task: order_by
}

"""primary key columns input for table: objectiveSubTask"""
input objectiveSubTask_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projectsubtask"
"""
enum objectiveSubTask_select_column {
  """column name"""
  complete

  """column name"""
  deadline

  """column name"""
  id

  """column name"""
  parentId

  """column name"""
  statusId

  """column name"""
  task
}

"""
input type for updating data in table "rolodex_projectsubtask"
"""
input objectiveSubTask_set_input {
  complete: Boolean
  deadline: date
  parentId: bigint
  statusId: bigint
  task: String
}

"""
order by stddev() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_stddev_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_stddev_pop_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_stddev_samp_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
order by sum() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_sum_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
update columns of table "rolodex_projectsubtask"
"""
enum objectiveSubTask_update_column {
  """column name"""
  complete

  """column name"""
  deadline

  """column name"""
  parentId

  """column name"""
  statusId

  """column name"""
  task
}

"""
order by var_pop() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_var_pop_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_var_samp_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
order by variance() on columns of table "rolodex_projectsubtask"
"""
input objectiveSubTask_variance_order_by {
  id: order_by
  parentId: order_by
  statusId: order_by
}

"""
order by aggregate values of table "rolodex_projectobjective"
"""
input objective_aggregate_order_by {
  avg: objective_avg_order_by
  count: order_by
  max: objective_max_order_by
  min: objective_min_order_by
  stddev: objective_stddev_order_by
  stddev_pop: objective_stddev_pop_order_by
  stddev_samp: objective_stddev_samp_order_by
  sum: objective_sum_order_by
  var_pop: objective_var_pop_order_by
  var_samp: objective_var_samp_order_by
  variance: objective_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projectobjective"
"""
input objective_arr_rel_insert_input {
  data: [objective_insert_input!]!

  """upsert condition"""
  on_conflict: objective_on_conflict
}

"""
order by avg() on columns of table "rolodex_projectobjective"
"""
input objective_avg_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projectobjective". All fields are combined with a logical 'AND'.
"""
input objective_bool_exp {
  _and: [objective_bool_exp!]
  _not: objective_bool_exp
  _or: [objective_bool_exp!]
  complete: Boolean_comparison_exp
  deadline: date_comparison_exp
  description: String_comparison_exp
  id: bigint_comparison_exp
  markedComplete: date_comparison_exp
  objective: String_comparison_exp
  objectivePriority: objectivePriority_bool_exp
  objectiveStatus: objectiveStatus_bool_exp
  objectiveSubTasks: objectiveSubTask_bool_exp
  position: Int_comparison_exp
  priorityId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  statusId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_projectobjective"
"""
enum objective_constraint {
  """unique or primary key constraint"""
  rolodex_projectobjective_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projectobjective"
"""
input objective_inc_input {
  position: Int
  priorityId: bigint
  projectId: bigint
  statusId: bigint
}

"""
input type for inserting data into table "rolodex_projectobjective"
"""
input objective_insert_input {
  deadline: date
  description: String
  objective: String
  objectiveSubTasks: objectiveSubTask_arr_rel_insert_input
  position: Int
  priorityId: bigint
  project: project_obj_rel_insert_input
  projectId: bigint
  statusId: bigint
}

"""
order by max() on columns of table "rolodex_projectobjective"
"""
input objective_max_order_by {
  deadline: order_by
  description: order_by
  id: order_by
  markedComplete: order_by
  objective: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
order by min() on columns of table "rolodex_projectobjective"
"""
input objective_min_order_by {
  deadline: order_by
  description: order_by
  id: order_by
  markedComplete: order_by
  objective: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
response of any mutation on the table "rolodex_projectobjective"
"""
type objective_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [objective!]!
}

"""
input type for inserting object relation for remote table "rolodex_projectobjective"
"""
input objective_obj_rel_insert_input {
  data: objective_insert_input!

  """upsert condition"""
  on_conflict: objective_on_conflict
}

"""
on_conflict condition type for table "rolodex_projectobjective"
"""
input objective_on_conflict {
  constraint: objective_constraint!
  update_columns: [objective_update_column!]! = []
  where: objective_bool_exp
}

"""Ordering options when selecting data from "rolodex_projectobjective"."""
input objective_order_by {
  complete: order_by
  deadline: order_by
  description: order_by
  id: order_by
  markedComplete: order_by
  objective: order_by
  objectivePriority: objectivePriority_order_by
  objectiveStatus: objectiveStatus_order_by
  objectiveSubTasks_aggregate: objectiveSubTask_aggregate_order_by
  position: order_by
  priorityId: order_by
  project: project_order_by
  projectId: order_by
  statusId: order_by
}

"""primary key columns input for table: objective"""
input objective_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projectobjective"
"""
enum objective_select_column {
  """column name"""
  complete

  """column name"""
  deadline

  """column name"""
  description

  """column name"""
  id

  """column name"""
  markedComplete

  """column name"""
  objective

  """column name"""
  position

  """column name"""
  priorityId

  """column name"""
  projectId

  """column name"""
  statusId
}

"""
input type for updating data in table "rolodex_projectobjective"
"""
input objective_set_input {
  complete: Boolean
  deadline: date
  description: String
  objective: String
  position: Int
  priorityId: bigint
  projectId: bigint
  statusId: bigint
}

"""
order by stddev() on columns of table "rolodex_projectobjective"
"""
input objective_stddev_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projectobjective"
"""
input objective_stddev_pop_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projectobjective"
"""
input objective_stddev_samp_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
order by sum() on columns of table "rolodex_projectobjective"
"""
input objective_sum_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
update columns of table "rolodex_projectobjective"
"""
enum objective_update_column {
  """column name"""
  complete

  """column name"""
  deadline

  """column name"""
  description

  """column name"""
  objective

  """column name"""
  position

  """column name"""
  priorityId

  """column name"""
  projectId

  """column name"""
  statusId
}

"""
order by var_pop() on columns of table "rolodex_projectobjective"
"""
input objective_var_pop_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projectobjective"
"""
input objective_var_samp_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
order by variance() on columns of table "rolodex_projectobjective"
"""
input objective_variance_order_by {
  id: order_by
  position: order_by
  priorityId: order_by
  projectId: order_by
  statusId: order_by
}

"""
columns and relationships of "oplog_oplog"
"""
type oplog {
  """An array relationship"""
  entries(
    """distinct select on columns"""
    distinct_on: [oplogEntry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oplogEntry_order_by!]

    """filter the rows returned"""
    where: oplogEntry_bool_exp
  ): [oplogEntry!]!
  id: bigint!
  name: String!

  """An object relationship"""
  project: project
  projectId: bigint
}

"""
columns and relationships of "oplog_oplogentry"
"""
type oplogEntry {
  command: String!
  comments: String!
  description: String!
  destIp: String!
  endDate: timestamptz
  id: bigint!

  """An object relationship"""
  log: oplog
  operatorName: String!
  oplog: bigint
  output: String
  sourceIp: String!
  startDate: timestamptz
  tool: String!
  userContext: String!
}

"""
order by aggregate values of table "oplog_oplogentry"
"""
input oplogEntry_aggregate_order_by {
  avg: oplogEntry_avg_order_by
  count: order_by
  max: oplogEntry_max_order_by
  min: oplogEntry_min_order_by
  stddev: oplogEntry_stddev_order_by
  stddev_pop: oplogEntry_stddev_pop_order_by
  stddev_samp: oplogEntry_stddev_samp_order_by
  sum: oplogEntry_sum_order_by
  var_pop: oplogEntry_var_pop_order_by
  var_samp: oplogEntry_var_samp_order_by
  variance: oplogEntry_variance_order_by
}

"""
input type for inserting array relation for remote table "oplog_oplogentry"
"""
input oplogEntry_arr_rel_insert_input {
  data: [oplogEntry_insert_input!]!

  """upsert condition"""
  on_conflict: oplogEntry_on_conflict
}

"""
order by avg() on columns of table "oplog_oplogentry"
"""
input oplogEntry_avg_order_by {
  id: order_by
  oplog: order_by
}

"""
Boolean expression to filter rows from the table "oplog_oplogentry". All fields are combined with a logical 'AND'.
"""
input oplogEntry_bool_exp {
  _and: [oplogEntry_bool_exp!]
  _not: oplogEntry_bool_exp
  _or: [oplogEntry_bool_exp!]
  command: String_comparison_exp
  comments: String_comparison_exp
  description: String_comparison_exp
  destIp: String_comparison_exp
  endDate: timestamptz_comparison_exp
  id: bigint_comparison_exp
  log: oplog_bool_exp
  operatorName: String_comparison_exp
  oplog: bigint_comparison_exp
  output: String_comparison_exp
  sourceIp: String_comparison_exp
  startDate: timestamptz_comparison_exp
  tool: String_comparison_exp
  userContext: String_comparison_exp
}

"""
unique or primary key constraints on table "oplog_oplogentry"
"""
enum oplogEntry_constraint {
  """unique or primary key constraint"""
  oplog_oplogentry_pkey
}

"""
input type for incrementing numeric columns in table "oplog_oplogentry"
"""
input oplogEntry_inc_input {
  oplog: bigint
}

"""
input type for inserting data into table "oplog_oplogentry"
"""
input oplogEntry_insert_input {
  command: String
  comments: String
  description: String
  destIp: String
  endDate: timestamptz
  log: oplog_obj_rel_insert_input
  operatorName: String
  oplog: bigint
  output: String
  sourceIp: String
  startDate: timestamptz
  tool: String
  userContext: String
}

"""
order by max() on columns of table "oplog_oplogentry"
"""
input oplogEntry_max_order_by {
  command: order_by
  comments: order_by
  description: order_by
  destIp: order_by
  endDate: order_by
  id: order_by
  operatorName: order_by
  oplog: order_by
  output: order_by
  sourceIp: order_by
  startDate: order_by
  tool: order_by
  userContext: order_by
}

"""
order by min() on columns of table "oplog_oplogentry"
"""
input oplogEntry_min_order_by {
  command: order_by
  comments: order_by
  description: order_by
  destIp: order_by
  endDate: order_by
  id: order_by
  operatorName: order_by
  oplog: order_by
  output: order_by
  sourceIp: order_by
  startDate: order_by
  tool: order_by
  userContext: order_by
}

"""
response of any mutation on the table "oplog_oplogentry"
"""
type oplogEntry_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [oplogEntry!]!
}

"""
on_conflict condition type for table "oplog_oplogentry"
"""
input oplogEntry_on_conflict {
  constraint: oplogEntry_constraint!
  update_columns: [oplogEntry_update_column!]! = []
  where: oplogEntry_bool_exp
}

"""Ordering options when selecting data from "oplog_oplogentry"."""
input oplogEntry_order_by {
  command: order_by
  comments: order_by
  description: order_by
  destIp: order_by
  endDate: order_by
  id: order_by
  log: oplog_order_by
  operatorName: order_by
  oplog: order_by
  output: order_by
  sourceIp: order_by
  startDate: order_by
  tool: order_by
  userContext: order_by
}

"""primary key columns input for table: oplogEntry"""
input oplogEntry_pk_columns_input {
  id: bigint!
}

"""
select columns of table "oplog_oplogentry"
"""
enum oplogEntry_select_column {
  """column name"""
  command

  """column name"""
  comments

  """column name"""
  description

  """column name"""
  destIp

  """column name"""
  endDate

  """column name"""
  id

  """column name"""
  operatorName

  """column name"""
  oplog

  """column name"""
  output

  """column name"""
  sourceIp

  """column name"""
  startDate

  """column name"""
  tool

  """column name"""
  userContext
}

"""
input type for updating data in table "oplog_oplogentry"
"""
input oplogEntry_set_input {
  command: String
  comments: String
  description: String
  destIp: String
  endDate: timestamptz
  operatorName: String
  oplog: bigint
  output: String
  sourceIp: String
  startDate: timestamptz
  tool: String
  userContext: String
}

"""
order by stddev() on columns of table "oplog_oplogentry"
"""
input oplogEntry_stddev_order_by {
  id: order_by
  oplog: order_by
}

"""
order by stddev_pop() on columns of table "oplog_oplogentry"
"""
input oplogEntry_stddev_pop_order_by {
  id: order_by
  oplog: order_by
}

"""
order by stddev_samp() on columns of table "oplog_oplogentry"
"""
input oplogEntry_stddev_samp_order_by {
  id: order_by
  oplog: order_by
}

"""
order by sum() on columns of table "oplog_oplogentry"
"""
input oplogEntry_sum_order_by {
  id: order_by
  oplog: order_by
}

"""
update columns of table "oplog_oplogentry"
"""
enum oplogEntry_update_column {
  """column name"""
  command

  """column name"""
  comments

  """column name"""
  description

  """column name"""
  destIp

  """column name"""
  endDate

  """column name"""
  operatorName

  """column name"""
  oplog

  """column name"""
  output

  """column name"""
  sourceIp

  """column name"""
  startDate

  """column name"""
  tool

  """column name"""
  userContext
}

"""
order by var_pop() on columns of table "oplog_oplogentry"
"""
input oplogEntry_var_pop_order_by {
  id: order_by
  oplog: order_by
}

"""
order by var_samp() on columns of table "oplog_oplogentry"
"""
input oplogEntry_var_samp_order_by {
  id: order_by
  oplog: order_by
}

"""
order by variance() on columns of table "oplog_oplogentry"
"""
input oplogEntry_variance_order_by {
  id: order_by
  oplog: order_by
}

"""
order by aggregate values of table "oplog_oplog"
"""
input oplog_aggregate_order_by {
  avg: oplog_avg_order_by
  count: order_by
  max: oplog_max_order_by
  min: oplog_min_order_by
  stddev: oplog_stddev_order_by
  stddev_pop: oplog_stddev_pop_order_by
  stddev_samp: oplog_stddev_samp_order_by
  sum: oplog_sum_order_by
  var_pop: oplog_var_pop_order_by
  var_samp: oplog_var_samp_order_by
  variance: oplog_variance_order_by
}

"""
input type for inserting array relation for remote table "oplog_oplog"
"""
input oplog_arr_rel_insert_input {
  data: [oplog_insert_input!]!

  """upsert condition"""
  on_conflict: oplog_on_conflict
}

"""
order by avg() on columns of table "oplog_oplog"
"""
input oplog_avg_order_by {
  id: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "oplog_oplog". All fields are combined with a logical 'AND'.
"""
input oplog_bool_exp {
  _and: [oplog_bool_exp!]
  _not: oplog_bool_exp
  _or: [oplog_bool_exp!]
  entries: oplogEntry_bool_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "oplog_oplog"
"""
enum oplog_constraint {
  """unique or primary key constraint"""
  oplog_oplog_name_project_id_cf3103ee_uniq

  """unique or primary key constraint"""
  oplog_oplog_pkey
}

"""
input type for incrementing numeric columns in table "oplog_oplog"
"""
input oplog_inc_input {
  projectId: bigint
}

"""
input type for inserting data into table "oplog_oplog"
"""
input oplog_insert_input {
  entries: oplogEntry_arr_rel_insert_input
  name: String
  project: project_obj_rel_insert_input
  projectId: bigint
}

"""
order by max() on columns of table "oplog_oplog"
"""
input oplog_max_order_by {
  id: order_by
  name: order_by
  projectId: order_by
}

"""
order by min() on columns of table "oplog_oplog"
"""
input oplog_min_order_by {
  id: order_by
  name: order_by
  projectId: order_by
}

"""
response of any mutation on the table "oplog_oplog"
"""
type oplog_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [oplog!]!
}

"""
input type for inserting object relation for remote table "oplog_oplog"
"""
input oplog_obj_rel_insert_input {
  data: oplog_insert_input!

  """upsert condition"""
  on_conflict: oplog_on_conflict
}

"""
on_conflict condition type for table "oplog_oplog"
"""
input oplog_on_conflict {
  constraint: oplog_constraint!
  update_columns: [oplog_update_column!]! = []
  where: oplog_bool_exp
}

"""Ordering options when selecting data from "oplog_oplog"."""
input oplog_order_by {
  entries_aggregate: oplogEntry_aggregate_order_by
  id: order_by
  name: order_by
  project: project_order_by
  projectId: order_by
}

"""primary key columns input for table: oplog"""
input oplog_pk_columns_input {
  id: bigint!
}

"""
select columns of table "oplog_oplog"
"""
enum oplog_select_column {
  """column name"""
  id

  """column name"""
  name

  """column name"""
  projectId
}

"""
input type for updating data in table "oplog_oplog"
"""
input oplog_set_input {
  name: String
  projectId: bigint
}

"""
order by stddev() on columns of table "oplog_oplog"
"""
input oplog_stddev_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "oplog_oplog"
"""
input oplog_stddev_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "oplog_oplog"
"""
input oplog_stddev_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "oplog_oplog"
"""
input oplog_sum_order_by {
  id: order_by
  projectId: order_by
}

"""
update columns of table "oplog_oplog"
"""
enum oplog_update_column {
  """column name"""
  name

  """column name"""
  projectId
}

"""
order by var_pop() on columns of table "oplog_oplog"
"""
input oplog_var_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "oplog_oplog"
"""
input oplog_var_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "oplog_oplog"
"""
input oplog_variance_order_by {
  id: order_by
  projectId: order_by
}

"""column ordering options"""
enum order_by {
  """in ascending order, nulls last"""
  asc

  """in ascending order, nulls first"""
  asc_nulls_first

  """in ascending order, nulls last"""
  asc_nulls_last

  """in descending order, nulls first"""
  desc

  """in descending order, nulls first"""
  desc_nulls_first

  """in descending order, nulls last"""
  desc_nulls_last
}

"""
columns and relationships of "rolodex_project"
"""
type project {
  """An array relationship"""
  archives(
    """distinct select on columns"""
    distinct_on: [archive_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [archive_order_by!]

    """filter the rows returned"""
    where: archive_bool_exp
  ): [archive!]!

  """An array relationship"""
  assignments(
    """distinct select on columns"""
    distinct_on: [projectAssignment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectAssignment_order_by!]

    """filter the rows returned"""
    where: projectAssignment_bool_exp
  ): [projectAssignment!]!

  """An object relationship"""
  client: client!
  clientId: bigint!

  """An array relationship"""
  cloudServers(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!
  codename: String

  """An array relationship"""
  comments(
    """distinct select on columns"""
    distinct_on: [projectNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectNote_order_by!]

    """filter the rows returned"""
    where: projectNote_bool_exp
  ): [projectNote!]!
  complete: Boolean!

  """An array relationship"""
  domainServerConnections(
    """distinct select on columns"""
    distinct_on: [domainServerConnection_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainServerConnection_order_by!]

    """filter the rows returned"""
    where: domainServerConnection_bool_exp
  ): [domainServerConnection!]!

  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!
  endDate: date!
  endTime: time
  id: bigint!

  """An array relationship"""
  invites(
    """distinct select on columns"""
    distinct_on: [projectInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectInvite_order_by!]

    """filter the rows returned"""
    where: projectInvite_bool_exp
  ): [projectInvite!]!
  note: String

  """An array relationship"""
  objectives(
    """distinct select on columns"""
    distinct_on: [objective_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objective_order_by!]

    """filter the rows returned"""
    where: objective_bool_exp
  ): [objective!]!
  operatorId: bigint

  """An array relationship"""
  oplogs(
    """distinct select on columns"""
    distinct_on: [oplog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oplog_order_by!]

    """filter the rows returned"""
    where: oplog_bool_exp
  ): [oplog!]!

  """An object relationship"""
  projectType: projectType!
  projectTypeId: bigint!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """An array relationship"""
  scopes(
    """distinct select on columns"""
    distinct_on: [scope_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scope_order_by!]

    """filter the rows returned"""
    where: scope_bool_exp
  ): [scope!]!
  slackChannel: String
  startDate: date!
  startTime: time

  """An array relationship"""
  staticServers(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!

  """An array relationship"""
  targets(
    """distinct select on columns"""
    distinct_on: [target_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [target_order_by!]

    """filter the rows returned"""
    where: target_bool_exp
  ): [target!]!
  timezone: String!

  """An object relationship"""
  user: user
}

"""
columns and relationships of "rolodex_projectassignment"
"""
type projectAssignment {
  endDate: date
  id: bigint!
  note: String
  operatorId: bigint

  """An object relationship"""
  project: project!
  projectId: bigint!

  """An object relationship"""
  projectRole: projectRole
  roleId: bigint
  startDate: date

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "rolodex_projectassignment"
"""
input projectAssignment_aggregate_order_by {
  avg: projectAssignment_avg_order_by
  count: order_by
  max: projectAssignment_max_order_by
  min: projectAssignment_min_order_by
  stddev: projectAssignment_stddev_order_by
  stddev_pop: projectAssignment_stddev_pop_order_by
  stddev_samp: projectAssignment_stddev_samp_order_by
  sum: projectAssignment_sum_order_by
  var_pop: projectAssignment_var_pop_order_by
  var_samp: projectAssignment_var_samp_order_by
  variance: projectAssignment_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projectassignment"
"""
input projectAssignment_arr_rel_insert_input {
  data: [projectAssignment_insert_input!]!

  """upsert condition"""
  on_conflict: projectAssignment_on_conflict
}

"""
order by avg() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_avg_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projectassignment". All fields are combined with a logical 'AND'.
"""
input projectAssignment_bool_exp {
  _and: [projectAssignment_bool_exp!]
  _not: projectAssignment_bool_exp
  _or: [projectAssignment_bool_exp!]
  endDate: date_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  projectRole: projectRole_bool_exp
  roleId: bigint_comparison_exp
  startDate: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "rolodex_projectassignment"
"""
enum projectAssignment_constraint {
  """unique or primary key constraint"""
  rolodex_projectassignment_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projectassignment"
"""
input projectAssignment_inc_input {
  operatorId: bigint
  projectId: bigint
  roleId: bigint
}

"""
input type for inserting data into table "rolodex_projectassignment"
"""
input projectAssignment_insert_input {
  endDate: date
  note: String
  operatorId: bigint
  project: project_obj_rel_insert_input
  projectId: bigint
  roleId: bigint
  startDate: date
}

"""
order by max() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_max_order_by {
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
  startDate: order_by
}

"""
order by min() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_min_order_by {
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
  startDate: order_by
}

"""
response of any mutation on the table "rolodex_projectassignment"
"""
type projectAssignment_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [projectAssignment!]!
}

"""
on_conflict condition type for table "rolodex_projectassignment"
"""
input projectAssignment_on_conflict {
  constraint: projectAssignment_constraint!
  update_columns: [projectAssignment_update_column!]! = []
  where: projectAssignment_bool_exp
}

"""Ordering options when selecting data from "rolodex_projectassignment"."""
input projectAssignment_order_by {
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  project: project_order_by
  projectId: order_by
  projectRole: projectRole_order_by
  roleId: order_by
  startDate: order_by
  user: user_order_by
}

"""primary key columns input for table: projectAssignment"""
input projectAssignment_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projectassignment"
"""
enum projectAssignment_select_column {
  """column name"""
  endDate

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectId

  """column name"""
  roleId

  """column name"""
  startDate
}

"""
input type for updating data in table "rolodex_projectassignment"
"""
input projectAssignment_set_input {
  endDate: date
  note: String
  operatorId: bigint
  projectId: bigint
  roleId: bigint
  startDate: date
}

"""
order by stddev() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_stddev_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_stddev_pop_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_stddev_samp_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
order by sum() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_sum_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
update columns of table "rolodex_projectassignment"
"""
enum projectAssignment_update_column {
  """column name"""
  endDate

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectId

  """column name"""
  roleId

  """column name"""
  startDate
}

"""
order by var_pop() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_var_pop_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_var_samp_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
order by variance() on columns of table "rolodex_projectassignment"
"""
input projectAssignment_variance_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
  roleId: order_by
}

"""
columns and relationships of "rolodex_projectinvite"
"""
type projectInvite {
  """An array relationship"""
  assignments(
    """distinct select on columns"""
    distinct_on: [projectAssignment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectAssignment_order_by!]

    """filter the rows returned"""
    where: projectAssignment_bool_exp
  ): [projectAssignment!]!
  comment: String
  id: bigint!

  """An object relationship"""
  project: project!
  projectId: bigint!

  """An object relationship"""
  user: user!
  userId: bigint!
}

"""
order by aggregate values of table "rolodex_projectinvite"
"""
input projectInvite_aggregate_order_by {
  avg: projectInvite_avg_order_by
  count: order_by
  max: projectInvite_max_order_by
  min: projectInvite_min_order_by
  stddev: projectInvite_stddev_order_by
  stddev_pop: projectInvite_stddev_pop_order_by
  stddev_samp: projectInvite_stddev_samp_order_by
  sum: projectInvite_sum_order_by
  var_pop: projectInvite_var_pop_order_by
  var_samp: projectInvite_var_samp_order_by
  variance: projectInvite_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projectinvite"
"""
input projectInvite_arr_rel_insert_input {
  data: [projectInvite_insert_input!]!

  """upsert condition"""
  on_conflict: projectInvite_on_conflict
}

"""
order by avg() on columns of table "rolodex_projectinvite"
"""
input projectInvite_avg_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projectinvite". All fields are combined with a logical 'AND'.
"""
input projectInvite_bool_exp {
  _and: [projectInvite_bool_exp!]
  _not: projectInvite_bool_exp
  _or: [projectInvite_bool_exp!]
  assignments: projectAssignment_bool_exp
  comment: String_comparison_exp
  id: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  user: user_bool_exp
  userId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_projectinvite"
"""
enum projectInvite_constraint {
  """unique or primary key constraint"""
  rolodex_projectinvite_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projectinvite"
"""
input projectInvite_inc_input {
  projectId: bigint
  userId: bigint
}

"""
input type for inserting data into table "rolodex_projectinvite"
"""
input projectInvite_insert_input {
  assignments: projectAssignment_arr_rel_insert_input
  comment: String
  project: project_obj_rel_insert_input
  projectId: bigint
  userId: bigint
}

"""
order by max() on columns of table "rolodex_projectinvite"
"""
input projectInvite_max_order_by {
  comment: order_by
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
order by min() on columns of table "rolodex_projectinvite"
"""
input projectInvite_min_order_by {
  comment: order_by
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
response of any mutation on the table "rolodex_projectinvite"
"""
type projectInvite_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [projectInvite!]!
}

"""
on_conflict condition type for table "rolodex_projectinvite"
"""
input projectInvite_on_conflict {
  constraint: projectInvite_constraint!
  update_columns: [projectInvite_update_column!]! = []
  where: projectInvite_bool_exp
}

"""Ordering options when selecting data from "rolodex_projectinvite"."""
input projectInvite_order_by {
  assignments_aggregate: projectAssignment_aggregate_order_by
  comment: order_by
  id: order_by
  project: project_order_by
  projectId: order_by
  user: user_order_by
  userId: order_by
}

"""primary key columns input for table: projectInvite"""
input projectInvite_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projectinvite"
"""
enum projectInvite_select_column {
  """column name"""
  comment

  """column name"""
  id

  """column name"""
  projectId

  """column name"""
  userId
}

"""
input type for updating data in table "rolodex_projectinvite"
"""
input projectInvite_set_input {
  comment: String
  projectId: bigint
  userId: bigint
}

"""
order by stddev() on columns of table "rolodex_projectinvite"
"""
input projectInvite_stddev_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projectinvite"
"""
input projectInvite_stddev_pop_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projectinvite"
"""
input projectInvite_stddev_samp_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
order by sum() on columns of table "rolodex_projectinvite"
"""
input projectInvite_sum_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
update columns of table "rolodex_projectinvite"
"""
enum projectInvite_update_column {
  """column name"""
  comment

  """column name"""
  projectId

  """column name"""
  userId
}

"""
order by var_pop() on columns of table "rolodex_projectinvite"
"""
input projectInvite_var_pop_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projectinvite"
"""
input projectInvite_var_samp_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
order by variance() on columns of table "rolodex_projectinvite"
"""
input projectInvite_variance_order_by {
  id: order_by
  projectId: order_by
  userId: order_by
}

"""
columns and relationships of "rolodex_projectnote"
"""
type projectNote {
  id: bigint!
  note: String
  operatorId: bigint

  """An object relationship"""
  project: project!
  projectId: bigint!
  timestamp: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "rolodex_projectnote"
"""
input projectNote_aggregate_order_by {
  avg: projectNote_avg_order_by
  count: order_by
  max: projectNote_max_order_by
  min: projectNote_min_order_by
  stddev: projectNote_stddev_order_by
  stddev_pop: projectNote_stddev_pop_order_by
  stddev_samp: projectNote_stddev_samp_order_by
  sum: projectNote_sum_order_by
  var_pop: projectNote_var_pop_order_by
  var_samp: projectNote_var_samp_order_by
  variance: projectNote_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projectnote"
"""
input projectNote_arr_rel_insert_input {
  data: [projectNote_insert_input!]!

  """upsert condition"""
  on_conflict: projectNote_on_conflict
}

"""
order by avg() on columns of table "rolodex_projectnote"
"""
input projectNote_avg_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projectnote". All fields are combined with a logical 'AND'.
"""
input projectNote_bool_exp {
  _and: [projectNote_bool_exp!]
  _not: projectNote_bool_exp
  _or: [projectNote_bool_exp!]
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  timestamp: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "rolodex_projectnote"
"""
enum projectNote_constraint {
  """unique or primary key constraint"""
  rolodex_projectnote_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projectnote"
"""
input projectNote_inc_input {
  projectId: bigint
}

"""
input type for inserting data into table "rolodex_projectnote"
"""
input projectNote_insert_input {
  note: String
  project: project_obj_rel_insert_input
  projectId: bigint
}

"""
order by max() on columns of table "rolodex_projectnote"
"""
input projectNote_max_order_by {
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "rolodex_projectnote"
"""
input projectNote_min_order_by {
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "rolodex_projectnote"
"""
type projectNote_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [projectNote!]!
}

"""
on_conflict condition type for table "rolodex_projectnote"
"""
input projectNote_on_conflict {
  constraint: projectNote_constraint!
  update_columns: [projectNote_update_column!]! = []
  where: projectNote_bool_exp
}

"""Ordering options when selecting data from "rolodex_projectnote"."""
input projectNote_order_by {
  id: order_by
  note: order_by
  operatorId: order_by
  project: project_order_by
  projectId: order_by
  timestamp: order_by
  user: user_order_by
}

"""primary key columns input for table: projectNote"""
input projectNote_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projectnote"
"""
enum projectNote_select_column {
  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectId

  """column name"""
  timestamp
}

"""
input type for updating data in table "rolodex_projectnote"
"""
input projectNote_set_input {
  note: String
  projectId: bigint
}

"""
order by stddev() on columns of table "rolodex_projectnote"
"""
input projectNote_stddev_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projectnote"
"""
input projectNote_stddev_pop_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projectnote"
"""
input projectNote_stddev_samp_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "rolodex_projectnote"
"""
input projectNote_sum_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
update columns of table "rolodex_projectnote"
"""
enum projectNote_update_column {
  """column name"""
  note

  """column name"""
  projectId
}

"""
order by var_pop() on columns of table "rolodex_projectnote"
"""
input projectNote_var_pop_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projectnote"
"""
input projectNote_var_samp_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "rolodex_projectnote"
"""
input projectNote_variance_order_by {
  id: order_by
  operatorId: order_by
  projectId: order_by
}

"""
columns and relationships of "rolodex_projectrole"
"""
type projectRole {
  """An array relationship"""
  assignments(
    """distinct select on columns"""
    distinct_on: [projectAssignment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectAssignment_order_by!]

    """filter the rows returned"""
    where: projectAssignment_bool_exp
  ): [projectAssignment!]!
  id: bigint!
  projectRole: String!
}

"""
Boolean expression to filter rows from the table "rolodex_projectrole". All fields are combined with a logical 'AND'.
"""
input projectRole_bool_exp {
  _and: [projectRole_bool_exp!]
  _not: projectRole_bool_exp
  _or: [projectRole_bool_exp!]
  assignments: projectAssignment_bool_exp
  id: bigint_comparison_exp
  projectRole: String_comparison_exp
}

"""Ordering options when selecting data from "rolodex_projectrole"."""
input projectRole_order_by {
  assignments_aggregate: projectAssignment_aggregate_order_by
  id: order_by
  projectRole: order_by
}

"""
select columns of table "rolodex_projectrole"
"""
enum projectRole_select_column {
  """column name"""
  id

  """column name"""
  projectRole
}

"""
columns and relationships of "rolodex_projecttype"
"""
type projectType {
  id: bigint!
  projectType: String!

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!
}

"""
Boolean expression to filter rows from the table "rolodex_projecttype". All fields are combined with a logical 'AND'.
"""
input projectType_bool_exp {
  _and: [projectType_bool_exp!]
  _not: projectType_bool_exp
  _or: [projectType_bool_exp!]
  id: bigint_comparison_exp
  projectType: String_comparison_exp
  projects: project_bool_exp
}

"""Ordering options when selecting data from "rolodex_projecttype"."""
input projectType_order_by {
  id: order_by
  projectType: order_by
  projects_aggregate: project_aggregate_order_by
}

"""
select columns of table "rolodex_projecttype"
"""
enum projectType_select_column {
  """column name"""
  id

  """column name"""
  projectType
}

"""
order by aggregate values of table "rolodex_project"
"""
input project_aggregate_order_by {
  avg: project_avg_order_by
  count: order_by
  max: project_max_order_by
  min: project_min_order_by
  stddev: project_stddev_order_by
  stddev_pop: project_stddev_pop_order_by
  stddev_samp: project_stddev_samp_order_by
  sum: project_sum_order_by
  var_pop: project_var_pop_order_by
  var_samp: project_var_samp_order_by
  variance: project_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_project"
"""
input project_arr_rel_insert_input {
  data: [project_insert_input!]!

  """upsert condition"""
  on_conflict: project_on_conflict
}

"""
order by avg() on columns of table "rolodex_project"
"""
input project_avg_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_project". All fields are combined with a logical 'AND'.
"""
input project_bool_exp {
  _and: [project_bool_exp!]
  _not: project_bool_exp
  _or: [project_bool_exp!]
  archives: archive_bool_exp
  assignments: projectAssignment_bool_exp
  client: client_bool_exp
  clientId: bigint_comparison_exp
  cloudServers: cloudServer_bool_exp
  codename: String_comparison_exp
  comments: projectNote_bool_exp
  complete: Boolean_comparison_exp
  domainServerConnections: domainServerConnection_bool_exp
  domains: domainCheckout_bool_exp
  endDate: date_comparison_exp
  endTime: time_comparison_exp
  id: bigint_comparison_exp
  invites: projectInvite_bool_exp
  note: String_comparison_exp
  objectives: objective_bool_exp
  operatorId: bigint_comparison_exp
  oplogs: oplog_bool_exp
  projectType: projectType_bool_exp
  projectTypeId: bigint_comparison_exp
  reports: report_bool_exp
  scopes: scope_bool_exp
  slackChannel: String_comparison_exp
  startDate: date_comparison_exp
  startTime: time_comparison_exp
  staticServers: serverCheckout_bool_exp
  targets: target_bool_exp
  timezone: String_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "rolodex_project"
"""
enum project_constraint {
  """unique or primary key constraint"""
  rolodex_project_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_project"
"""
input project_inc_input {
  clientId: bigint
  projectTypeId: bigint
}

"""
input type for inserting data into table "rolodex_project"
"""
input project_insert_input {
  assignments: projectAssignment_arr_rel_insert_input
  client: client_obj_rel_insert_input
  clientId: bigint
  cloudServers: cloudServer_arr_rel_insert_input
  codename: String
  comments: projectNote_arr_rel_insert_input
  domainServerConnections: domainServerConnection_arr_rel_insert_input
  endDate: date
  endTime: time
  invites: projectInvite_arr_rel_insert_input
  note: String
  objectives: objective_arr_rel_insert_input
  oplogs: oplog_arr_rel_insert_input
  projectTypeId: bigint
  reports: report_arr_rel_insert_input
  scopes: scope_arr_rel_insert_input
  slackChannel: String
  startDate: date
  startTime: time
  staticServers: serverCheckout_arr_rel_insert_input
  targets: target_arr_rel_insert_input
  timezone: String
}

"""
order by max() on columns of table "rolodex_project"
"""
input project_max_order_by {
  clientId: order_by
  codename: order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectTypeId: order_by
  slackChannel: order_by
  startDate: order_by
  timezone: order_by
}

"""
order by min() on columns of table "rolodex_project"
"""
input project_min_order_by {
  clientId: order_by
  codename: order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectTypeId: order_by
  slackChannel: order_by
  startDate: order_by
  timezone: order_by
}

"""
response of any mutation on the table "rolodex_project"
"""
type project_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [project!]!
}

"""
input type for inserting object relation for remote table "rolodex_project"
"""
input project_obj_rel_insert_input {
  data: project_insert_input!

  """upsert condition"""
  on_conflict: project_on_conflict
}

"""
on_conflict condition type for table "rolodex_project"
"""
input project_on_conflict {
  constraint: project_constraint!
  update_columns: [project_update_column!]! = []
  where: project_bool_exp
}

"""Ordering options when selecting data from "rolodex_project"."""
input project_order_by {
  archives_aggregate: archive_aggregate_order_by
  assignments_aggregate: projectAssignment_aggregate_order_by
  client: client_order_by
  clientId: order_by
  cloudServers_aggregate: cloudServer_aggregate_order_by
  codename: order_by
  comments_aggregate: projectNote_aggregate_order_by
  complete: order_by
  domainServerConnections_aggregate: domainServerConnection_aggregate_order_by
  domains_aggregate: domainCheckout_aggregate_order_by
  endDate: order_by
  endTime: order_by
  id: order_by
  invites_aggregate: projectInvite_aggregate_order_by
  note: order_by
  objectives_aggregate: objective_aggregate_order_by
  operatorId: order_by
  oplogs_aggregate: oplog_aggregate_order_by
  projectType: projectType_order_by
  projectTypeId: order_by
  reports_aggregate: report_aggregate_order_by
  scopes_aggregate: scope_aggregate_order_by
  slackChannel: order_by
  startDate: order_by
  startTime: order_by
  staticServers_aggregate: serverCheckout_aggregate_order_by
  targets_aggregate: target_aggregate_order_by
  timezone: order_by
  user: user_order_by
}

"""primary key columns input for table: project"""
input project_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_project"
"""
enum project_select_column {
  """column name"""
  clientId

  """column name"""
  codename

  """column name"""
  complete

  """column name"""
  endDate

  """column name"""
  endTime

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectTypeId

  """column name"""
  slackChannel

  """column name"""
  startDate

  """column name"""
  startTime

  """column name"""
  timezone
}

"""
input type for updating data in table "rolodex_project"
"""
input project_set_input {
  clientId: bigint
  codename: String
  complete: Boolean
  endDate: date
  endTime: time
  note: String
  projectTypeId: bigint
  slackChannel: String
  startDate: date
  startTime: time
  timezone: String
}

"""
order by stddev() on columns of table "rolodex_project"
"""
input project_stddev_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_project"
"""
input project_stddev_pop_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_project"
"""
input project_stddev_samp_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
order by sum() on columns of table "rolodex_project"
"""
input project_sum_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
update columns of table "rolodex_project"
"""
enum project_update_column {
  """column name"""
  clientId

  """column name"""
  codename

  """column name"""
  complete

  """column name"""
  endDate

  """column name"""
  endTime

  """column name"""
  note

  """column name"""
  projectTypeId

  """column name"""
  slackChannel

  """column name"""
  startDate

  """column name"""
  startTime

  """column name"""
  timezone
}

"""
order by var_pop() on columns of table "rolodex_project"
"""
input project_var_pop_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
order by var_samp() on columns of table "rolodex_project"
"""
input project_var_samp_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

"""
order by variance() on columns of table "rolodex_project"
"""
input project_variance_order_by {
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectTypeId: order_by
}

type query_root {
  """
  fetch data from the table: "shepherd_activitytype"
  """
  activityType(
    """distinct select on columns"""
    distinct_on: [activityType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [activityType_order_by!]

    """filter the rows returned"""
    where: activityType_bool_exp
  ): [activityType!]!

  """
  fetch data from the table: "shepherd_activitytype" using primary key columns
  """
  activityType_by_pk(id: bigint!): activityType

  """
  fetch data from the table: "reporting_archive"
  """
  archive(
    """distinct select on columns"""
    distinct_on: [archive_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [archive_order_by!]

    """filter the rows returned"""
    where: archive_bool_exp
  ): [archive!]!

  """
  fetch data from the table: "reporting_archive" using primary key columns
  """
  archive_by_pk(id: bigint!): archive

  """An array relationship"""
  auxServerAddresses(
    """distinct select on columns"""
    distinct_on: [auxServerAddresses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auxServerAddresses_order_by!]

    """filter the rows returned"""
    where: auxServerAddresses_bool_exp
  ): [auxServerAddresses!]!

  """
  fetch data from the table: "rolodex_client"
  """
  client(
    """distinct select on columns"""
    distinct_on: [client_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [client_order_by!]

    """filter the rows returned"""
    where: client_bool_exp
  ): [client!]!

  """
  fetch data from the table: "rolodex_clientinvite"
  """
  clientInvite(
    """distinct select on columns"""
    distinct_on: [clientInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientInvite_order_by!]

    """filter the rows returned"""
    where: clientInvite_bool_exp
  ): [clientInvite!]!

  """
  fetch data from the table: "rolodex_clientinvite" using primary key columns
  """
  clientInvite_by_pk(id: bigint!): clientInvite

  """
  fetch data from the table: "rolodex_clientnote"
  """
  clientNote(
    """distinct select on columns"""
    distinct_on: [clientNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientNote_order_by!]

    """filter the rows returned"""
    where: clientNote_bool_exp
  ): [clientNote!]!

  """
  fetch data from the table: "rolodex_clientnote" using primary key columns
  """
  clientNote_by_pk(id: bigint!): clientNote

  """fetch data from the table: "rolodex_client" using primary key columns"""
  client_by_pk(id: bigint!): client

  """
  fetch data from the table: "shepherd_transientserver"
  """
  cloudServer(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!

  """
  fetch data from the table: "shepherd_transientserver" using primary key columns
  """
  cloudServer_by_pk(id: bigint!): cloudServer

  """
  fetch data from the table: "commandcenter_companyinformation"
  """
  companyInfo(
    """distinct select on columns"""
    distinct_on: [companyInfo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [companyInfo_order_by!]

    """filter the rows returned"""
    where: companyInfo_bool_exp
  ): [companyInfo!]!

  """
  fetch data from the table: "commandcenter_companyinformation" using primary key columns
  """
  companyInfo_by_pk(id: bigint!): companyInfo

  """An array relationship"""
  contacts(
    """distinct select on columns"""
    distinct_on: [contacts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contacts_order_by!]

    """filter the rows returned"""
    where: contacts_bool_exp
  ): [contacts!]!

  """
  fetch data from the table: "rolodex_clientcontact" using primary key columns
  """
  contacts_by_pk(id: bigint!): contacts

  """
  fetch data from the table: "reporting_doctype"
  """
  docType(
    """distinct select on columns"""
    distinct_on: [docType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [docType_order_by!]

    """filter the rows returned"""
    where: docType_bool_exp
  ): [docType!]!

  """
  fetch data from the table: "reporting_doctype" using primary key columns
  """
  docType_by_pk(id: bigint!): docType

  """
  fetch data from the table: "shepherd_domain"
  """
  domain(
    """distinct select on columns"""
    distinct_on: [domain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domain_order_by!]

    """filter the rows returned"""
    where: domain_bool_exp
  ): [domain!]!

  """
  fetch data from the table: "shepherd_history"
  """
  domainCheckout(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!

  """
  fetch data from the table: "shepherd_history" using primary key columns
  """
  domainCheckout_by_pk(id: bigint!): domainCheckout

  """
  fetch data from the table: "shepherd_domainnote"
  """
  domainNote(
    """distinct select on columns"""
    distinct_on: [domainNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainNote_order_by!]

    """filter the rows returned"""
    where: domainNote_bool_exp
  ): [domainNote!]!

  """
  fetch data from the table: "shepherd_domainnote" using primary key columns
  """
  domainNote_by_pk(id: bigint!): domainNote

  """
  fetch data from the table: "shepherd_domainserverconnection"
  """
  domainServerConnection(
    """distinct select on columns"""
    distinct_on: [domainServerConnection_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainServerConnection_order_by!]

    """filter the rows returned"""
    where: domainServerConnection_bool_exp
  ): [domainServerConnection!]!

  """
  fetch data from the table: "shepherd_domainserverconnection" using primary key columns
  """
  domainServerConnection_by_pk(id: bigint!): domainServerConnection

  """
  fetch data from the table: "shepherd_domainstatus"
  """
  domainStatus(
    """distinct select on columns"""
    distinct_on: [domainStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainStatus_order_by!]

    """filter the rows returned"""
    where: domainStatus_bool_exp
  ): [domainStatus!]!

  """
  fetch data from the table: "shepherd_domainstatus" using primary key columns
  """
  domainStatus_by_pk(id: bigint!): domainStatus

  """fetch data from the table: "shepherd_domain" using primary key columns"""
  domain_by_pk(id: bigint!): domain

  """
  fetch data from the table: "reporting_evidence"
  """
  evidence(
    """distinct select on columns"""
    distinct_on: [evidence_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evidence_order_by!]

    """filter the rows returned"""
    where: evidence_bool_exp
  ): [evidence!]!

  """
  fetch data from the table: "reporting_evidence" using primary key columns
  """
  evidence_by_pk(id: bigint!): evidence

  """
  fetch data from the table: "reporting_finding"
  """
  finding(
    """distinct select on columns"""
    distinct_on: [finding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [finding_order_by!]

    """filter the rows returned"""
    where: finding_bool_exp
  ): [finding!]!

  """
  fetch data from the table: "reporting_findingnote"
  """
  findingNote(
    """distinct select on columns"""
    distinct_on: [findingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingNote_order_by!]

    """filter the rows returned"""
    where: findingNote_bool_exp
  ): [findingNote!]!

  """
  fetch data from the table: "reporting_findingnote" using primary key columns
  """
  findingNote_by_pk(id: bigint!): findingNote

  """
  fetch data from the table: "reporting_severity"
  """
  findingSeverity(
    """distinct select on columns"""
    distinct_on: [findingSeverity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingSeverity_order_by!]

    """filter the rows returned"""
    where: findingSeverity_bool_exp
  ): [findingSeverity!]!

  """
  fetch data from the table: "reporting_severity" using primary key columns
  """
  findingSeverity_by_pk(id: bigint!): findingSeverity

  """
  fetch data from the table: "reporting_findingtype"
  """
  findingType(
    """distinct select on columns"""
    distinct_on: [findingType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingType_order_by!]

    """filter the rows returned"""
    where: findingType_bool_exp
  ): [findingType!]!

  """
  fetch data from the table: "reporting_findingtype" using primary key columns
  """
  findingType_by_pk(id: bigint!): findingType

  """
  fetch data from the table: "reporting_finding" using primary key columns
  """
  finding_by_pk(id: bigint!): finding

  """
  fetch data from the table: "shepherd_healthstatus"
  """
  healthStatus(
    """distinct select on columns"""
    distinct_on: [healthStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [healthStatus_order_by!]

    """filter the rows returned"""
    where: healthStatus_bool_exp
  ): [healthStatus!]!

  """
  fetch data from the table: "shepherd_healthstatus" using primary key columns
  """
  healthStatus_by_pk(id: bigint!): healthStatus

  """
  fetch data from the table: "rolodex_projectobjective"
  """
  objective(
    """distinct select on columns"""
    distinct_on: [objective_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objective_order_by!]

    """filter the rows returned"""
    where: objective_bool_exp
  ): [objective!]!

  """
  fetch data from the table: "rolodex_objectivepriority"
  """
  objectivePriority(
    """distinct select on columns"""
    distinct_on: [objectivePriority_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectivePriority_order_by!]

    """filter the rows returned"""
    where: objectivePriority_bool_exp
  ): [objectivePriority!]!

  """
  fetch data from the table: "rolodex_objectivepriority" using primary key columns
  """
  objectivePriority_by_pk(id: bigint!): objectivePriority

  """
  fetch data from the table: "rolodex_objectivestatus"
  """
  objectiveStatus(
    """distinct select on columns"""
    distinct_on: [objectiveStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectiveStatus_order_by!]

    """filter the rows returned"""
    where: objectiveStatus_bool_exp
  ): [objectiveStatus!]!

  """
  fetch data from the table: "rolodex_objectivestatus" using primary key columns
  """
  objectiveStatus_by_pk(id: bigint!): objectiveStatus

  """
  fetch data from the table: "rolodex_projectsubtask"
  """
  objectiveSubTask(
    """distinct select on columns"""
    distinct_on: [objectiveSubTask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectiveSubTask_order_by!]

    """filter the rows returned"""
    where: objectiveSubTask_bool_exp
  ): [objectiveSubTask!]!

  """
  fetch data from the table: "rolodex_projectsubtask" using primary key columns
  """
  objectiveSubTask_by_pk(id: bigint!): objectiveSubTask

  """
  fetch data from the table: "rolodex_projectobjective" using primary key columns
  """
  objective_by_pk(id: bigint!): objective

  """
  fetch data from the table: "oplog_oplog"
  """
  oplog(
    """distinct select on columns"""
    distinct_on: [oplog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oplog_order_by!]

    """filter the rows returned"""
    where: oplog_bool_exp
  ): [oplog!]!

  """
  fetch data from the table: "oplog_oplogentry"
  """
  oplogEntry(
    """distinct select on columns"""
    distinct_on: [oplogEntry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oplogEntry_order_by!]

    """filter the rows returned"""
    where: oplogEntry_bool_exp
  ): [oplogEntry!]!

  """
  fetch data from the table: "oplog_oplogentry" using primary key columns
  """
  oplogEntry_by_pk(id: bigint!): oplogEntry

  """fetch data from the table: "oplog_oplog" using primary key columns"""
  oplog_by_pk(id: bigint!): oplog

  """
  fetch data from the table: "rolodex_project"
  """
  project(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """
  fetch data from the table: "rolodex_projectassignment"
  """
  projectAssignment(
    """distinct select on columns"""
    distinct_on: [projectAssignment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectAssignment_order_by!]

    """filter the rows returned"""
    where: projectAssignment_bool_exp
  ): [projectAssignment!]!

  """
  fetch data from the table: "rolodex_projectassignment" using primary key columns
  """
  projectAssignment_by_pk(id: bigint!): projectAssignment

  """
  fetch data from the table: "rolodex_projectinvite"
  """
  projectInvite(
    """distinct select on columns"""
    distinct_on: [projectInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectInvite_order_by!]

    """filter the rows returned"""
    where: projectInvite_bool_exp
  ): [projectInvite!]!

  """
  fetch data from the table: "rolodex_projectinvite" using primary key columns
  """
  projectInvite_by_pk(id: bigint!): projectInvite

  """
  fetch data from the table: "rolodex_projectnote"
  """
  projectNote(
    """distinct select on columns"""
    distinct_on: [projectNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectNote_order_by!]

    """filter the rows returned"""
    where: projectNote_bool_exp
  ): [projectNote!]!

  """
  fetch data from the table: "rolodex_projectnote" using primary key columns
  """
  projectNote_by_pk(id: bigint!): projectNote

  """
  fetch data from the table: "rolodex_projectrole"
  """
  projectRole(
    """distinct select on columns"""
    distinct_on: [projectRole_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectRole_order_by!]

    """filter the rows returned"""
    where: projectRole_bool_exp
  ): [projectRole!]!

  """
  fetch data from the table: "rolodex_projectrole" using primary key columns
  """
  projectRole_by_pk(id: bigint!): projectRole

  """
  fetch data from the table: "rolodex_projecttype"
  """
  projectType(
    """distinct select on columns"""
    distinct_on: [projectType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectType_order_by!]

    """filter the rows returned"""
    where: projectType_bool_exp
  ): [projectType!]!

  """
  fetch data from the table: "rolodex_projecttype" using primary key columns
  """
  projectType_by_pk(id: bigint!): projectType

  """fetch data from the table: "rolodex_project" using primary key columns"""
  project_by_pk(id: bigint!): project

  """
  fetch data from the table: "reporting_report"
  """
  report(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """
  fetch data from the table: "commandcenter_reportconfiguration"
  """
  reportConfiguration(
    """distinct select on columns"""
    distinct_on: [reportConfiguration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportConfiguration_order_by!]

    """filter the rows returned"""
    where: reportConfiguration_bool_exp
  ): [reportConfiguration!]!

  """
  fetch data from the table: "commandcenter_reportconfiguration" using primary key columns
  """
  reportConfiguration_by_pk(id: bigint!): reportConfiguration

  """
  fetch data from the table: "reporting_report" using primary key columns
  """
  report_by_pk(id: bigint!): report

  """
  fetch data from the table: "reporting_reportfindinglink"
  """
  reportedFinding(
    """distinct select on columns"""
    distinct_on: [reportedFinding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFinding_order_by!]

    """filter the rows returned"""
    where: reportedFinding_bool_exp
  ): [reportedFinding!]!

  """
  fetch data from the table: "reporting_localfindingnote"
  """
  reportedFindingNote(
    """distinct select on columns"""
    distinct_on: [reportedFindingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFindingNote_order_by!]

    """filter the rows returned"""
    where: reportedFindingNote_bool_exp
  ): [reportedFindingNote!]!

  """
  fetch data from the table: "reporting_localfindingnote" using primary key columns
  """
  reportedFindingNote_by_pk(id: bigint!): reportedFindingNote

  """
  fetch data from the table: "reporting_reportfindinglink" using primary key columns
  """
  reportedFinding_by_pk(id: bigint!): reportedFinding

  """
  fetch data from the table: "rolodex_projectscope"
  """
  scope(
    """distinct select on columns"""
    distinct_on: [scope_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scope_order_by!]

    """filter the rows returned"""
    where: scope_bool_exp
  ): [scope!]!

  """
  fetch data from the table: "rolodex_projectscope" using primary key columns
  """
  scope_by_pk(id: bigint!): scope

  """
  fetch data from the table: "shepherd_serverhistory"
  """
  serverCheckout(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!

  """
  fetch data from the table: "shepherd_serverhistory" using primary key columns
  """
  serverCheckout_by_pk(id: bigint!): serverCheckout

  """
  fetch data from the table: "shepherd_servernote"
  """
  serverNote(
    """distinct select on columns"""
    distinct_on: [serverNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverNote_order_by!]

    """filter the rows returned"""
    where: serverNote_bool_exp
  ): [serverNote!]!

  """
  fetch data from the table: "shepherd_servernote" using primary key columns
  """
  serverNote_by_pk(id: bigint!): serverNote

  """
  fetch data from the table: "shepherd_serverprovider"
  """
  serverProvider(
    """distinct select on columns"""
    distinct_on: [serverProvider_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverProvider_order_by!]

    """filter the rows returned"""
    where: serverProvider_bool_exp
  ): [serverProvider!]!

  """
  fetch data from the table: "shepherd_serverprovider" using primary key columns
  """
  serverProvider_by_pk(id: bigint!): serverProvider

  """
  fetch data from the table: "shepherd_serverrole"
  """
  serverRole(
    """distinct select on columns"""
    distinct_on: [serverRole_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverRole_order_by!]

    """filter the rows returned"""
    where: serverRole_bool_exp
  ): [serverRole!]!

  """
  fetch data from the table: "shepherd_serverrole" using primary key columns
  """
  serverRole_by_pk(id: bigint!): serverRole

  """
  fetch data from the table: "shepherd_serverstatus"
  """
  serverStatus(
    """distinct select on columns"""
    distinct_on: [serverStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverStatus_order_by!]

    """filter the rows returned"""
    where: serverStatus_bool_exp
  ): [serverStatus!]!

  """
  fetch data from the table: "shepherd_serverstatus" using primary key columns
  """
  serverStatus_by_pk(id: bigint!): serverStatus

  """
  fetch data from the table: "shepherd_staticserver"
  """
  staticServer(
    """distinct select on columns"""
    distinct_on: [staticServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staticServer_order_by!]

    """filter the rows returned"""
    where: staticServer_bool_exp
  ): [staticServer!]!

  """
  fetch data from the table: "shepherd_staticserver" using primary key columns
  """
  staticServer_by_pk(id: bigint!): staticServer

  """
  fetch data from the table: "rolodex_projecttarget"
  """
  target(
    """distinct select on columns"""
    distinct_on: [target_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [target_order_by!]

    """filter the rows returned"""
    where: target_bool_exp
  ): [target!]!

  """
  fetch data from the table: "rolodex_projecttarget" using primary key columns
  """
  target_by_pk(id: bigint!): target

  """
  fetch data from the table: "django_q_task"
  """
  task(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """fetch data from the table: "django_q_task" using primary key columns"""
  task_by_pk(id: String!): task

  """
  fetch data from the table: "reporting_reporttemplate"
  """
  template(
    """distinct select on columns"""
    distinct_on: [template_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [template_order_by!]

    """filter the rows returned"""
    where: template_bool_exp
  ): [template!]!

  """
  fetch data from the table: "reporting_reporttemplate" using primary key columns
  """
  template_by_pk(id: bigint!): template

  """
  fetch data from the table: "users_user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """
  fetch data from the table: "home_userprofile"
  """
  userProfile(
    """distinct select on columns"""
    distinct_on: [userProfile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [userProfile_order_by!]

    """filter the rows returned"""
    where: userProfile_bool_exp
  ): [userProfile!]!

  """fetch data from the table: "users_user" using primary key columns"""
  user_by_pk(id: bigint!): user

  """User `whoami` query for JWT"""
  whoami: WhoamiOutput

  """
  fetch data from the table: "shepherd_whoisstatus"
  """
  whoisStatus(
    """distinct select on columns"""
    distinct_on: [whoisStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [whoisStatus_order_by!]

    """filter the rows returned"""
    where: whoisStatus_bool_exp
  ): [whoisStatus!]!

  """
  fetch data from the table: "shepherd_whoisstatus" using primary key columns
  """
  whoisStatus_by_pk(id: bigint!): whoisStatus
}

"""
columns and relationships of "reporting_report"
"""
type report {
  archived: Boolean!
  complete: Boolean!
  createdById: bigint
  creation: date!
  delivered: Boolean!

  """An object relationship"""
  docxTemplate: template
  docxTemplateId: bigint

  """An array relationship"""
  findings(
    """distinct select on columns"""
    distinct_on: [reportedFinding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFinding_order_by!]

    """filter the rows returned"""
    where: reportedFinding_bool_exp
  ): [reportedFinding!]!
  id: bigint!
  last_update: date!

  """An object relationship"""
  pptxTemplate: template
  pptxTemplateId: bigint

  """An object relationship"""
  project: project
  projectId: bigint
  title: String!

  """An object relationship"""
  user: user
}

"""
columns and relationships of "commandcenter_reportconfiguration"
"""
type reportConfiguration {
  borderColor: String!
  borderWeight: Int!

  """An object relationship"""
  docxTemplate: template
  docxTemplateId: bigint
  enableBorders: Boolean!
  id: bigint!
  labelFigure: String!
  labelTable: String!

  """An object relationship"""
  pptxTemplate: template
  pptxTemplateId: bigint
  prefixFigure: String!
  prefixTable: String!
}

"""
order by aggregate values of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_aggregate_order_by {
  avg: reportConfiguration_avg_order_by
  count: order_by
  max: reportConfiguration_max_order_by
  min: reportConfiguration_min_order_by
  stddev: reportConfiguration_stddev_order_by
  stddev_pop: reportConfiguration_stddev_pop_order_by
  stddev_samp: reportConfiguration_stddev_samp_order_by
  sum: reportConfiguration_sum_order_by
  var_pop: reportConfiguration_var_pop_order_by
  var_samp: reportConfiguration_var_samp_order_by
  variance: reportConfiguration_variance_order_by
}

"""
order by avg() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_avg_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
Boolean expression to filter rows from the table "commandcenter_reportconfiguration". All fields are combined with a logical 'AND'.
"""
input reportConfiguration_bool_exp {
  _and: [reportConfiguration_bool_exp!]
  _not: reportConfiguration_bool_exp
  _or: [reportConfiguration_bool_exp!]
  borderColor: String_comparison_exp
  borderWeight: Int_comparison_exp
  docxTemplate: template_bool_exp
  docxTemplateId: bigint_comparison_exp
  enableBorders: Boolean_comparison_exp
  id: bigint_comparison_exp
  labelFigure: String_comparison_exp
  labelTable: String_comparison_exp
  pptxTemplate: template_bool_exp
  pptxTemplateId: bigint_comparison_exp
  prefixFigure: String_comparison_exp
  prefixTable: String_comparison_exp
}

"""
input type for incrementing numeric columns in table "commandcenter_reportconfiguration"
"""
input reportConfiguration_inc_input {
  borderWeight: Int
  docxTemplateId: bigint
  pptxTemplateId: bigint
}

"""
order by max() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_max_order_by {
  borderColor: order_by
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  labelFigure: order_by
  labelTable: order_by
  pptxTemplateId: order_by
  prefixFigure: order_by
  prefixTable: order_by
}

"""
order by min() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_min_order_by {
  borderColor: order_by
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  labelFigure: order_by
  labelTable: order_by
  pptxTemplateId: order_by
  prefixFigure: order_by
  prefixTable: order_by
}

"""
response of any mutation on the table "commandcenter_reportconfiguration"
"""
type reportConfiguration_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [reportConfiguration!]!
}

"""
Ordering options when selecting data from "commandcenter_reportconfiguration".
"""
input reportConfiguration_order_by {
  borderColor: order_by
  borderWeight: order_by
  docxTemplate: template_order_by
  docxTemplateId: order_by
  enableBorders: order_by
  id: order_by
  labelFigure: order_by
  labelTable: order_by
  pptxTemplate: template_order_by
  pptxTemplateId: order_by
  prefixFigure: order_by
  prefixTable: order_by
}

"""primary key columns input for table: reportConfiguration"""
input reportConfiguration_pk_columns_input {
  id: bigint!
}

"""
select columns of table "commandcenter_reportconfiguration"
"""
enum reportConfiguration_select_column {
  """column name"""
  borderColor

  """column name"""
  borderWeight

  """column name"""
  docxTemplateId

  """column name"""
  enableBorders

  """column name"""
  id

  """column name"""
  labelFigure

  """column name"""
  labelTable

  """column name"""
  pptxTemplateId

  """column name"""
  prefixFigure

  """column name"""
  prefixTable
}

"""
input type for updating data in table "commandcenter_reportconfiguration"
"""
input reportConfiguration_set_input {
  borderColor: String
  borderWeight: Int
  docxTemplateId: bigint
  enableBorders: Boolean
  labelFigure: String
  labelTable: String
  pptxTemplateId: bigint
  prefixFigure: String
  prefixTable: String
}

"""
order by stddev() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_stddev_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by stddev_pop() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_stddev_pop_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by stddev_samp() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_stddev_samp_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by sum() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_sum_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by var_pop() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_var_pop_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by var_samp() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_var_samp_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by variance() on columns of table "commandcenter_reportconfiguration"
"""
input reportConfiguration_variance_order_by {
  borderWeight: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
}

"""
order by aggregate values of table "reporting_report"
"""
input report_aggregate_order_by {
  avg: report_avg_order_by
  count: order_by
  max: report_max_order_by
  min: report_min_order_by
  stddev: report_stddev_order_by
  stddev_pop: report_stddev_pop_order_by
  stddev_samp: report_stddev_samp_order_by
  sum: report_sum_order_by
  var_pop: report_var_pop_order_by
  var_samp: report_var_samp_order_by
  variance: report_variance_order_by
}

"""
input type for inserting array relation for remote table "reporting_report"
"""
input report_arr_rel_insert_input {
  data: [report_insert_input!]!

  """upsert condition"""
  on_conflict: report_on_conflict
}

"""
order by avg() on columns of table "reporting_report"
"""
input report_avg_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "reporting_report". All fields are combined with a logical 'AND'.
"""
input report_bool_exp {
  _and: [report_bool_exp!]
  _not: report_bool_exp
  _or: [report_bool_exp!]
  archived: Boolean_comparison_exp
  complete: Boolean_comparison_exp
  createdById: bigint_comparison_exp
  creation: date_comparison_exp
  delivered: Boolean_comparison_exp
  docxTemplate: template_bool_exp
  docxTemplateId: bigint_comparison_exp
  findings: reportedFinding_bool_exp
  id: bigint_comparison_exp
  last_update: date_comparison_exp
  pptxTemplate: template_bool_exp
  pptxTemplateId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  title: String_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "reporting_report"
"""
enum report_constraint {
  """unique or primary key constraint"""
  reporting_report_pkey
}

"""
input type for incrementing numeric columns in table "reporting_report"
"""
input report_inc_input {
  docxTemplateId: bigint
  pptxTemplateId: bigint
  projectId: bigint
}

"""
input type for inserting data into table "reporting_report"
"""
input report_insert_input {
  docxTemplateId: bigint
  findings: reportedFinding_arr_rel_insert_input
  pptxTemplateId: bigint
  project: project_obj_rel_insert_input
  projectId: bigint
  title: String
}

"""
order by max() on columns of table "reporting_report"
"""
input report_max_order_by {
  createdById: order_by
  creation: order_by
  docxTemplateId: order_by
  id: order_by
  last_update: order_by
  pptxTemplateId: order_by
  projectId: order_by
  title: order_by
}

"""
order by min() on columns of table "reporting_report"
"""
input report_min_order_by {
  createdById: order_by
  creation: order_by
  docxTemplateId: order_by
  id: order_by
  last_update: order_by
  pptxTemplateId: order_by
  projectId: order_by
  title: order_by
}

"""
response of any mutation on the table "reporting_report"
"""
type report_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [report!]!
}

"""
input type for inserting object relation for remote table "reporting_report"
"""
input report_obj_rel_insert_input {
  data: report_insert_input!

  """upsert condition"""
  on_conflict: report_on_conflict
}

"""
on_conflict condition type for table "reporting_report"
"""
input report_on_conflict {
  constraint: report_constraint!
  update_columns: [report_update_column!]! = []
  where: report_bool_exp
}

"""Ordering options when selecting data from "reporting_report"."""
input report_order_by {
  archived: order_by
  complete: order_by
  createdById: order_by
  creation: order_by
  delivered: order_by
  docxTemplate: template_order_by
  docxTemplateId: order_by
  findings_aggregate: reportedFinding_aggregate_order_by
  id: order_by
  last_update: order_by
  pptxTemplate: template_order_by
  pptxTemplateId: order_by
  project: project_order_by
  projectId: order_by
  title: order_by
  user: user_order_by
}

"""primary key columns input for table: report"""
input report_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_report"
"""
enum report_select_column {
  """column name"""
  archived

  """column name"""
  complete

  """column name"""
  createdById

  """column name"""
  creation

  """column name"""
  delivered

  """column name"""
  docxTemplateId

  """column name"""
  id

  """column name"""
  last_update

  """column name"""
  pptxTemplateId

  """column name"""
  projectId

  """column name"""
  title
}

"""
input type for updating data in table "reporting_report"
"""
input report_set_input {
  archived: Boolean
  complete: Boolean
  delivered: Boolean
  docxTemplateId: bigint
  pptxTemplateId: bigint
  projectId: bigint
  title: String
}

"""
order by stddev() on columns of table "reporting_report"
"""
input report_stddev_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "reporting_report"
"""
input report_stddev_pop_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "reporting_report"
"""
input report_stddev_samp_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "reporting_report"
"""
input report_sum_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
update columns of table "reporting_report"
"""
enum report_update_column {
  """column name"""
  archived

  """column name"""
  complete

  """column name"""
  delivered

  """column name"""
  docxTemplateId

  """column name"""
  pptxTemplateId

  """column name"""
  projectId

  """column name"""
  title
}

"""
order by var_pop() on columns of table "reporting_report"
"""
input report_var_pop_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "reporting_report"
"""
input report_var_samp_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "reporting_report"
"""
input report_variance_order_by {
  createdById: order_by
  docxTemplateId: order_by
  id: order_by
  pptxTemplateId: order_by
  projectId: order_by
}

"""
columns and relationships of "reporting_reportfindinglink"
"""
type reportedFinding {
  affectedEntities: String
  assignedToId: bigint

  """An array relationship"""
  comments(
    """distinct select on columns"""
    distinct_on: [reportedFindingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFindingNote_order_by!]

    """filter the rows returned"""
    where: reportedFindingNote_bool_exp
  ): [reportedFindingNote!]!
  complete: Boolean!
  cvss_score: float8
  cvss_vector: String!
  description: String

  """An array relationship"""
  evidences(
    """distinct select on columns"""
    distinct_on: [evidence_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evidence_order_by!]

    """filter the rows returned"""
    where: evidence_bool_exp
  ): [evidence!]!
  findingGuidance: String
  findingTypeId: bigint

  """An object relationship"""
  findingtype: findingType
  hostDetectionTechniques: String
  id: bigint!
  impact: String
  mitigation: String
  networkDetectionTechniques: String
  position: Int!
  references: String
  replication_steps: String

  """An object relationship"""
  report: report
  reportId: bigint

  """An object relationship"""
  severity: findingSeverity
  severityId: bigint
  title: String!

  """An object relationship"""
  user: user
}

"""
columns and relationships of "reporting_localfindingnote"
"""
type reportedFindingNote {
  """An object relationship"""
  finding: reportedFinding!
  findingId: bigint!
  id: bigint!
  note: String
  operatorId: bigint
  timestamp: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "reporting_localfindingnote"
"""
input reportedFindingNote_aggregate_order_by {
  avg: reportedFindingNote_avg_order_by
  count: order_by
  max: reportedFindingNote_max_order_by
  min: reportedFindingNote_min_order_by
  stddev: reportedFindingNote_stddev_order_by
  stddev_pop: reportedFindingNote_stddev_pop_order_by
  stddev_samp: reportedFindingNote_stddev_samp_order_by
  sum: reportedFindingNote_sum_order_by
  var_pop: reportedFindingNote_var_pop_order_by
  var_samp: reportedFindingNote_var_samp_order_by
  variance: reportedFindingNote_variance_order_by
}

"""
input type for inserting array relation for remote table "reporting_localfindingnote"
"""
input reportedFindingNote_arr_rel_insert_input {
  data: [reportedFindingNote_insert_input!]!

  """upsert condition"""
  on_conflict: reportedFindingNote_on_conflict
}

"""
order by avg() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_avg_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
Boolean expression to filter rows from the table "reporting_localfindingnote". All fields are combined with a logical 'AND'.
"""
input reportedFindingNote_bool_exp {
  _and: [reportedFindingNote_bool_exp!]
  _not: reportedFindingNote_bool_exp
  _or: [reportedFindingNote_bool_exp!]
  finding: reportedFinding_bool_exp
  findingId: bigint_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  timestamp: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "reporting_localfindingnote"
"""
enum reportedFindingNote_constraint {
  """unique or primary key constraint"""
  reporting_localfindingnote_pkey
}

"""
input type for incrementing numeric columns in table "reporting_localfindingnote"
"""
input reportedFindingNote_inc_input {
  findingId: bigint
}

"""
input type for inserting data into table "reporting_localfindingnote"
"""
input reportedFindingNote_insert_input {
  finding: reportedFinding_obj_rel_insert_input
  findingId: bigint
  note: String
}

"""
order by max() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_max_order_by {
  findingId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_min_order_by {
  findingId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "reporting_localfindingnote"
"""
type reportedFindingNote_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [reportedFindingNote!]!
}

"""
on_conflict condition type for table "reporting_localfindingnote"
"""
input reportedFindingNote_on_conflict {
  constraint: reportedFindingNote_constraint!
  update_columns: [reportedFindingNote_update_column!]! = []
  where: reportedFindingNote_bool_exp
}

"""
Ordering options when selecting data from "reporting_localfindingnote".
"""
input reportedFindingNote_order_by {
  finding: reportedFinding_order_by
  findingId: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  timestamp: order_by
  user: user_order_by
}

"""primary key columns input for table: reportedFindingNote"""
input reportedFindingNote_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_localfindingnote"
"""
enum reportedFindingNote_select_column {
  """column name"""
  findingId

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  timestamp
}

"""
input type for updating data in table "reporting_localfindingnote"
"""
input reportedFindingNote_set_input {
  findingId: bigint
  note: String
}

"""
order by stddev() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_stddev_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_pop() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_stddev_pop_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by stddev_samp() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_stddev_samp_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by sum() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_sum_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
update columns of table "reporting_localfindingnote"
"""
enum reportedFindingNote_update_column {
  """column name"""
  findingId

  """column name"""
  note
}

"""
order by var_pop() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_var_pop_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by var_samp() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_var_samp_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by variance() on columns of table "reporting_localfindingnote"
"""
input reportedFindingNote_variance_order_by {
  findingId: order_by
  id: order_by
  operatorId: order_by
}

"""
order by aggregate values of table "reporting_reportfindinglink"
"""
input reportedFinding_aggregate_order_by {
  avg: reportedFinding_avg_order_by
  count: order_by
  max: reportedFinding_max_order_by
  min: reportedFinding_min_order_by
  stddev: reportedFinding_stddev_order_by
  stddev_pop: reportedFinding_stddev_pop_order_by
  stddev_samp: reportedFinding_stddev_samp_order_by
  sum: reportedFinding_sum_order_by
  var_pop: reportedFinding_var_pop_order_by
  var_samp: reportedFinding_var_samp_order_by
  variance: reportedFinding_variance_order_by
}

"""
input type for inserting array relation for remote table "reporting_reportfindinglink"
"""
input reportedFinding_arr_rel_insert_input {
  data: [reportedFinding_insert_input!]!

  """upsert condition"""
  on_conflict: reportedFinding_on_conflict
}

"""
order by avg() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_avg_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
Boolean expression to filter rows from the table "reporting_reportfindinglink". All fields are combined with a logical 'AND'.
"""
input reportedFinding_bool_exp {
  _and: [reportedFinding_bool_exp!]
  _not: reportedFinding_bool_exp
  _or: [reportedFinding_bool_exp!]
  affectedEntities: String_comparison_exp
  assignedToId: bigint_comparison_exp
  comments: reportedFindingNote_bool_exp
  complete: Boolean_comparison_exp
  cvss_score: float8_comparison_exp
  cvss_vector: String_comparison_exp
  description: String_comparison_exp
  evidences: evidence_bool_exp
  findingGuidance: String_comparison_exp
  findingTypeId: bigint_comparison_exp
  findingtype: findingType_bool_exp
  hostDetectionTechniques: String_comparison_exp
  id: bigint_comparison_exp
  impact: String_comparison_exp
  mitigation: String_comparison_exp
  networkDetectionTechniques: String_comparison_exp
  position: Int_comparison_exp
  references: String_comparison_exp
  replication_steps: String_comparison_exp
  report: report_bool_exp
  reportId: bigint_comparison_exp
  severity: findingSeverity_bool_exp
  severityId: bigint_comparison_exp
  title: String_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "reporting_reportfindinglink"
"""
enum reportedFinding_constraint {
  """unique or primary key constraint"""
  reporting_reportfindinglink_pkey
}

"""
input type for incrementing numeric columns in table "reporting_reportfindinglink"
"""
input reportedFinding_inc_input {
  assignedToId: bigint
  cvss_score: float8
  findingTypeId: bigint
  position: Int
  reportId: bigint
  severityId: bigint
}

"""
input type for inserting data into table "reporting_reportfindinglink"
"""
input reportedFinding_insert_input {
  affectedEntities: String
  comments: reportedFindingNote_arr_rel_insert_input
  cvss_score: float8
  cvss_vector: String
  description: String
  findingGuidance: String
  findingTypeId: bigint
  hostDetectionTechniques: String
  impact: String
  mitigation: String
  networkDetectionTechniques: String
  position: Int
  references: String
  replication_steps: String
  report: report_obj_rel_insert_input
  reportId: bigint
  severityId: bigint
  title: String
}

"""
order by max() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_max_order_by {
  affectedEntities: order_by
  assignedToId: order_by
  cvss_score: order_by
  cvss_vector: order_by
  description: order_by
  findingGuidance: order_by
  findingTypeId: order_by
  hostDetectionTechniques: order_by
  id: order_by
  impact: order_by
  mitigation: order_by
  networkDetectionTechniques: order_by
  position: order_by
  references: order_by
  replication_steps: order_by
  reportId: order_by
  severityId: order_by
  title: order_by
}

"""
order by min() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_min_order_by {
  affectedEntities: order_by
  assignedToId: order_by
  cvss_score: order_by
  cvss_vector: order_by
  description: order_by
  findingGuidance: order_by
  findingTypeId: order_by
  hostDetectionTechniques: order_by
  id: order_by
  impact: order_by
  mitigation: order_by
  networkDetectionTechniques: order_by
  position: order_by
  references: order_by
  replication_steps: order_by
  reportId: order_by
  severityId: order_by
  title: order_by
}

"""
response of any mutation on the table "reporting_reportfindinglink"
"""
type reportedFinding_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [reportedFinding!]!
}

"""
input type for inserting object relation for remote table "reporting_reportfindinglink"
"""
input reportedFinding_obj_rel_insert_input {
  data: reportedFinding_insert_input!

  """upsert condition"""
  on_conflict: reportedFinding_on_conflict
}

"""
on_conflict condition type for table "reporting_reportfindinglink"
"""
input reportedFinding_on_conflict {
  constraint: reportedFinding_constraint!
  update_columns: [reportedFinding_update_column!]! = []
  where: reportedFinding_bool_exp
}

"""
Ordering options when selecting data from "reporting_reportfindinglink".
"""
input reportedFinding_order_by {
  affectedEntities: order_by
  assignedToId: order_by
  comments_aggregate: reportedFindingNote_aggregate_order_by
  complete: order_by
  cvss_score: order_by
  cvss_vector: order_by
  description: order_by
  evidences_aggregate: evidence_aggregate_order_by
  findingGuidance: order_by
  findingTypeId: order_by
  findingtype: findingType_order_by
  hostDetectionTechniques: order_by
  id: order_by
  impact: order_by
  mitigation: order_by
  networkDetectionTechniques: order_by
  position: order_by
  references: order_by
  replication_steps: order_by
  report: report_order_by
  reportId: order_by
  severity: findingSeverity_order_by
  severityId: order_by
  title: order_by
  user: user_order_by
}

"""primary key columns input for table: reportedFinding"""
input reportedFinding_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_reportfindinglink"
"""
enum reportedFinding_select_column {
  """column name"""
  affectedEntities

  """column name"""
  assignedToId

  """column name"""
  complete

  """column name"""
  cvss_score

  """column name"""
  cvss_vector

  """column name"""
  description

  """column name"""
  findingGuidance

  """column name"""
  findingTypeId

  """column name"""
  hostDetectionTechniques

  """column name"""
  id

  """column name"""
  impact

  """column name"""
  mitigation

  """column name"""
  networkDetectionTechniques

  """column name"""
  position

  """column name"""
  references

  """column name"""
  replication_steps

  """column name"""
  reportId

  """column name"""
  severityId

  """column name"""
  title
}

"""
input type for updating data in table "reporting_reportfindinglink"
"""
input reportedFinding_set_input {
  affectedEntities: String
  assignedToId: bigint
  complete: Boolean
  cvss_score: float8
  cvss_vector: String
  description: String
  findingGuidance: String
  findingTypeId: bigint
  hostDetectionTechniques: String
  impact: String
  mitigation: String
  networkDetectionTechniques: String
  position: Int
  references: String
  replication_steps: String
  reportId: bigint
  severityId: bigint
  title: String
}

"""
order by stddev() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_stddev_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
order by stddev_pop() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_stddev_pop_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
order by stddev_samp() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_stddev_samp_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
order by sum() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_sum_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
update columns of table "reporting_reportfindinglink"
"""
enum reportedFinding_update_column {
  """column name"""
  affectedEntities

  """column name"""
  assignedToId

  """column name"""
  complete

  """column name"""
  cvss_score

  """column name"""
  cvss_vector

  """column name"""
  description

  """column name"""
  findingGuidance

  """column name"""
  findingTypeId

  """column name"""
  hostDetectionTechniques

  """column name"""
  impact

  """column name"""
  mitigation

  """column name"""
  networkDetectionTechniques

  """column name"""
  position

  """column name"""
  references

  """column name"""
  replication_steps

  """column name"""
  reportId

  """column name"""
  severityId

  """column name"""
  title
}

"""
order by var_pop() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_var_pop_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
order by var_samp() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_var_samp_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
order by variance() on columns of table "reporting_reportfindinglink"
"""
input reportedFinding_variance_order_by {
  assignedToId: order_by
  cvss_score: order_by
  findingTypeId: order_by
  id: order_by
  position: order_by
  reportId: order_by
  severityId: order_by
}

"""
columns and relationships of "rolodex_projectscope"
"""
type scope {
  description: String
  disallowed: Boolean!
  id: bigint!
  name: String

  """An object relationship"""
  project: project!
  projectId: bigint!
  requiresCaution: Boolean!
  scope: String
}

"""
order by aggregate values of table "rolodex_projectscope"
"""
input scope_aggregate_order_by {
  avg: scope_avg_order_by
  count: order_by
  max: scope_max_order_by
  min: scope_min_order_by
  stddev: scope_stddev_order_by
  stddev_pop: scope_stddev_pop_order_by
  stddev_samp: scope_stddev_samp_order_by
  sum: scope_sum_order_by
  var_pop: scope_var_pop_order_by
  var_samp: scope_var_samp_order_by
  variance: scope_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projectscope"
"""
input scope_arr_rel_insert_input {
  data: [scope_insert_input!]!

  """upsert condition"""
  on_conflict: scope_on_conflict
}

"""
order by avg() on columns of table "rolodex_projectscope"
"""
input scope_avg_order_by {
  id: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projectscope". All fields are combined with a logical 'AND'.
"""
input scope_bool_exp {
  _and: [scope_bool_exp!]
  _not: scope_bool_exp
  _or: [scope_bool_exp!]
  description: String_comparison_exp
  disallowed: Boolean_comparison_exp
  id: bigint_comparison_exp
  name: String_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  requiresCaution: Boolean_comparison_exp
  scope: String_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_projectscope"
"""
enum scope_constraint {
  """unique or primary key constraint"""
  rolodex_projectscope_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projectscope"
"""
input scope_inc_input {
  projectId: bigint
}

"""
input type for inserting data into table "rolodex_projectscope"
"""
input scope_insert_input {
  description: String
  disallowed: Boolean
  name: String
  project: project_obj_rel_insert_input
  projectId: bigint
  requiresCaution: Boolean
  scope: String
}

"""
order by max() on columns of table "rolodex_projectscope"
"""
input scope_max_order_by {
  description: order_by
  id: order_by
  name: order_by
  projectId: order_by
  scope: order_by
}

"""
order by min() on columns of table "rolodex_projectscope"
"""
input scope_min_order_by {
  description: order_by
  id: order_by
  name: order_by
  projectId: order_by
  scope: order_by
}

"""
response of any mutation on the table "rolodex_projectscope"
"""
type scope_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [scope!]!
}

"""
on_conflict condition type for table "rolodex_projectscope"
"""
input scope_on_conflict {
  constraint: scope_constraint!
  update_columns: [scope_update_column!]! = []
  where: scope_bool_exp
}

"""Ordering options when selecting data from "rolodex_projectscope"."""
input scope_order_by {
  description: order_by
  disallowed: order_by
  id: order_by
  name: order_by
  project: project_order_by
  projectId: order_by
  requiresCaution: order_by
  scope: order_by
}

"""primary key columns input for table: scope"""
input scope_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projectscope"
"""
enum scope_select_column {
  """column name"""
  description

  """column name"""
  disallowed

  """column name"""
  id

  """column name"""
  name

  """column name"""
  projectId

  """column name"""
  requiresCaution

  """column name"""
  scope
}

"""
input type for updating data in table "rolodex_projectscope"
"""
input scope_set_input {
  description: String
  disallowed: Boolean
  name: String
  projectId: bigint
  requiresCaution: Boolean
  scope: String
}

"""
order by stddev() on columns of table "rolodex_projectscope"
"""
input scope_stddev_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projectscope"
"""
input scope_stddev_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projectscope"
"""
input scope_stddev_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "rolodex_projectscope"
"""
input scope_sum_order_by {
  id: order_by
  projectId: order_by
}

"""
update columns of table "rolodex_projectscope"
"""
enum scope_update_column {
  """column name"""
  description

  """column name"""
  disallowed

  """column name"""
  name

  """column name"""
  projectId

  """column name"""
  requiresCaution

  """column name"""
  scope
}

"""
order by var_pop() on columns of table "rolodex_projectscope"
"""
input scope_var_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projectscope"
"""
input scope_var_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "rolodex_projectscope"
"""
input scope_variance_order_by {
  id: order_by
  projectId: order_by
}

"""
columns and relationships of "shepherd_serverhistory"
"""
type serverCheckout {
  """An object relationship"""
  activityType: activityType!
  activityTypeId: bigint!

  """An object relationship"""
  client: client!
  clientId: bigint!

  """An array relationship"""
  domainServerConnections(
    """distinct select on columns"""
    distinct_on: [domainServerConnection_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainServerConnection_order_by!]

    """filter the rows returned"""
    where: domainServerConnection_bool_exp
  ): [domainServerConnection!]!
  endDate: date!
  id: bigint!
  note: String
  operatorId: bigint

  """An object relationship"""
  project: project
  projectId: bigint

  """An object relationship"""
  server: staticServer!
  serverId: bigint!

  """An object relationship"""
  serverRole: serverRole!
  serverRoleId: bigint!
  startDate: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "shepherd_serverhistory"
"""
input serverCheckout_aggregate_order_by {
  avg: serverCheckout_avg_order_by
  count: order_by
  max: serverCheckout_max_order_by
  min: serverCheckout_min_order_by
  stddev: serverCheckout_stddev_order_by
  stddev_pop: serverCheckout_stddev_pop_order_by
  stddev_samp: serverCheckout_stddev_samp_order_by
  sum: serverCheckout_sum_order_by
  var_pop: serverCheckout_var_pop_order_by
  var_samp: serverCheckout_var_samp_order_by
  variance: serverCheckout_variance_order_by
}

"""
input type for inserting array relation for remote table "shepherd_serverhistory"
"""
input serverCheckout_arr_rel_insert_input {
  data: [serverCheckout_insert_input!]!

  """upsert condition"""
  on_conflict: serverCheckout_on_conflict
}

"""
order by avg() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_avg_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_serverhistory". All fields are combined with a logical 'AND'.
"""
input serverCheckout_bool_exp {
  _and: [serverCheckout_bool_exp!]
  _not: serverCheckout_bool_exp
  _or: [serverCheckout_bool_exp!]
  activityType: activityType_bool_exp
  activityTypeId: bigint_comparison_exp
  client: client_bool_exp
  clientId: bigint_comparison_exp
  domainServerConnections: domainServerConnection_bool_exp
  endDate: date_comparison_exp
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
  server: staticServer_bool_exp
  serverId: bigint_comparison_exp
  serverRole: serverRole_bool_exp
  serverRoleId: bigint_comparison_exp
  startDate: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "shepherd_serverhistory"
"""
enum serverCheckout_constraint {
  """unique or primary key constraint"""
  shepherd_serverhistory_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_serverhistory"
"""
input serverCheckout_inc_input {
  activityTypeId: bigint
  clientId: bigint
  projectId: bigint
  serverId: bigint
  serverRoleId: bigint
}

"""
input type for inserting data into table "shepherd_serverhistory"
"""
input serverCheckout_insert_input {
  activityTypeId: bigint
  client: client_obj_rel_insert_input
  clientId: bigint
  domainServerConnections: domainServerConnection_arr_rel_insert_input
  endDate: date
  note: String
  project: project_obj_rel_insert_input
  projectId: bigint
  server: staticServer_obj_rel_insert_input
  serverId: bigint
  serverRoleId: bigint
  startDate: date
}

"""
order by max() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_max_order_by {
  activityTypeId: order_by
  clientId: order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
  startDate: order_by
}

"""
order by min() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_min_order_by {
  activityTypeId: order_by
  clientId: order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
  startDate: order_by
}

"""
response of any mutation on the table "shepherd_serverhistory"
"""
type serverCheckout_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [serverCheckout!]!
}

"""
input type for inserting object relation for remote table "shepherd_serverhistory"
"""
input serverCheckout_obj_rel_insert_input {
  data: serverCheckout_insert_input!

  """upsert condition"""
  on_conflict: serverCheckout_on_conflict
}

"""
on_conflict condition type for table "shepherd_serverhistory"
"""
input serverCheckout_on_conflict {
  constraint: serverCheckout_constraint!
  update_columns: [serverCheckout_update_column!]! = []
  where: serverCheckout_bool_exp
}

"""Ordering options when selecting data from "shepherd_serverhistory"."""
input serverCheckout_order_by {
  activityType: activityType_order_by
  activityTypeId: order_by
  client: client_order_by
  clientId: order_by
  domainServerConnections_aggregate: domainServerConnection_aggregate_order_by
  endDate: order_by
  id: order_by
  note: order_by
  operatorId: order_by
  project: project_order_by
  projectId: order_by
  server: staticServer_order_by
  serverId: order_by
  serverRole: serverRole_order_by
  serverRoleId: order_by
  startDate: order_by
  user: user_order_by
}

"""primary key columns input for table: serverCheckout"""
input serverCheckout_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_serverhistory"
"""
enum serverCheckout_select_column {
  """column name"""
  activityTypeId

  """column name"""
  clientId

  """column name"""
  endDate

  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  projectId

  """column name"""
  serverId

  """column name"""
  serverRoleId

  """column name"""
  startDate
}

"""
input type for updating data in table "shepherd_serverhistory"
"""
input serverCheckout_set_input {
  activityTypeId: bigint
  clientId: bigint
  endDate: date
  note: String
  projectId: bigint
  serverId: bigint
  serverRoleId: bigint
  startDate: date
}

"""
order by stddev() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_stddev_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_stddev_pop_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_stddev_samp_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
order by sum() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_sum_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
update columns of table "shepherd_serverhistory"
"""
enum serverCheckout_update_column {
  """column name"""
  activityTypeId

  """column name"""
  clientId

  """column name"""
  endDate

  """column name"""
  note

  """column name"""
  projectId

  """column name"""
  serverId

  """column name"""
  serverRoleId

  """column name"""
  startDate
}

"""
order by var_pop() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_var_pop_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
order by var_samp() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_var_samp_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
order by variance() on columns of table "shepherd_serverhistory"
"""
input serverCheckout_variance_order_by {
  activityTypeId: order_by
  clientId: order_by
  id: order_by
  operatorId: order_by
  projectId: order_by
  serverId: order_by
  serverRoleId: order_by
}

"""
columns and relationships of "shepherd_servernote"
"""
type serverNote {
  id: bigint!
  note: String
  operatorId: bigint
  serverId: bigint!

  """An object relationship"""
  staticServer: staticServer!
  timestamp: date!

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "shepherd_servernote"
"""
input serverNote_aggregate_order_by {
  avg: serverNote_avg_order_by
  count: order_by
  max: serverNote_max_order_by
  min: serverNote_min_order_by
  stddev: serverNote_stddev_order_by
  stddev_pop: serverNote_stddev_pop_order_by
  stddev_samp: serverNote_stddev_samp_order_by
  sum: serverNote_sum_order_by
  var_pop: serverNote_var_pop_order_by
  var_samp: serverNote_var_samp_order_by
  variance: serverNote_variance_order_by
}

"""
input type for inserting array relation for remote table "shepherd_servernote"
"""
input serverNote_arr_rel_insert_input {
  data: [serverNote_insert_input!]!

  """upsert condition"""
  on_conflict: serverNote_on_conflict
}

"""
order by avg() on columns of table "shepherd_servernote"
"""
input serverNote_avg_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_servernote". All fields are combined with a logical 'AND'.
"""
input serverNote_bool_exp {
  _and: [serverNote_bool_exp!]
  _not: serverNote_bool_exp
  _or: [serverNote_bool_exp!]
  id: bigint_comparison_exp
  note: String_comparison_exp
  operatorId: bigint_comparison_exp
  serverId: bigint_comparison_exp
  staticServer: staticServer_bool_exp
  timestamp: date_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "shepherd_servernote"
"""
enum serverNote_constraint {
  """unique or primary key constraint"""
  shepherd_servernote_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_servernote"
"""
input serverNote_inc_input {
  serverId: bigint
}

"""
input type for inserting data into table "shepherd_servernote"
"""
input serverNote_insert_input {
  note: String
  serverId: bigint
  staticServer: staticServer_obj_rel_insert_input
}

"""
order by max() on columns of table "shepherd_servernote"
"""
input serverNote_max_order_by {
  id: order_by
  note: order_by
  operatorId: order_by
  serverId: order_by
  timestamp: order_by
}

"""
order by min() on columns of table "shepherd_servernote"
"""
input serverNote_min_order_by {
  id: order_by
  note: order_by
  operatorId: order_by
  serverId: order_by
  timestamp: order_by
}

"""
response of any mutation on the table "shepherd_servernote"
"""
type serverNote_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [serverNote!]!
}

"""
on_conflict condition type for table "shepherd_servernote"
"""
input serverNote_on_conflict {
  constraint: serverNote_constraint!
  update_columns: [serverNote_update_column!]! = []
  where: serverNote_bool_exp
}

"""Ordering options when selecting data from "shepherd_servernote"."""
input serverNote_order_by {
  id: order_by
  note: order_by
  operatorId: order_by
  serverId: order_by
  staticServer: staticServer_order_by
  timestamp: order_by
  user: user_order_by
}

"""primary key columns input for table: serverNote"""
input serverNote_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_servernote"
"""
enum serverNote_select_column {
  """column name"""
  id

  """column name"""
  note

  """column name"""
  operatorId

  """column name"""
  serverId

  """column name"""
  timestamp
}

"""
input type for updating data in table "shepherd_servernote"
"""
input serverNote_set_input {
  note: String
  serverId: bigint
}

"""
order by stddev() on columns of table "shepherd_servernote"
"""
input serverNote_stddev_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_servernote"
"""
input serverNote_stddev_pop_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_servernote"
"""
input serverNote_stddev_samp_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
order by sum() on columns of table "shepherd_servernote"
"""
input serverNote_sum_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
update columns of table "shepherd_servernote"
"""
enum serverNote_update_column {
  """column name"""
  note

  """column name"""
  serverId
}

"""
order by var_pop() on columns of table "shepherd_servernote"
"""
input serverNote_var_pop_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
order by var_samp() on columns of table "shepherd_servernote"
"""
input serverNote_var_samp_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
order by variance() on columns of table "shepherd_servernote"
"""
input serverNote_variance_order_by {
  id: order_by
  operatorId: order_by
  serverId: order_by
}

"""
columns and relationships of "shepherd_serverprovider"
"""
type serverProvider {
  """An array relationship"""
  cloudServers(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!
  id: bigint!
  serverProvider: String!

  """An array relationship"""
  staticServers(
    """distinct select on columns"""
    distinct_on: [staticServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staticServer_order_by!]

    """filter the rows returned"""
    where: staticServer_bool_exp
  ): [staticServer!]!
}

"""
Boolean expression to filter rows from the table "shepherd_serverprovider". All fields are combined with a logical 'AND'.
"""
input serverProvider_bool_exp {
  _and: [serverProvider_bool_exp!]
  _not: serverProvider_bool_exp
  _or: [serverProvider_bool_exp!]
  cloudServers: cloudServer_bool_exp
  id: bigint_comparison_exp
  serverProvider: String_comparison_exp
  staticServers: staticServer_bool_exp
}

"""Ordering options when selecting data from "shepherd_serverprovider"."""
input serverProvider_order_by {
  cloudServers_aggregate: cloudServer_aggregate_order_by
  id: order_by
  serverProvider: order_by
  staticServers_aggregate: staticServer_aggregate_order_by
}

"""
select columns of table "shepherd_serverprovider"
"""
enum serverProvider_select_column {
  """column name"""
  id

  """column name"""
  serverProvider
}

"""
columns and relationships of "shepherd_serverrole"
"""
type serverRole {
  """An array relationship"""
  cloudServers(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!
  id: bigint!
  serverRole: String!

  """An array relationship"""
  staticServers(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!
}

"""
Boolean expression to filter rows from the table "shepherd_serverrole". All fields are combined with a logical 'AND'.
"""
input serverRole_bool_exp {
  _and: [serverRole_bool_exp!]
  _not: serverRole_bool_exp
  _or: [serverRole_bool_exp!]
  cloudServers: cloudServer_bool_exp
  id: bigint_comparison_exp
  serverRole: String_comparison_exp
  staticServers: serverCheckout_bool_exp
}

"""Ordering options when selecting data from "shepherd_serverrole"."""
input serverRole_order_by {
  cloudServers_aggregate: cloudServer_aggregate_order_by
  id: order_by
  serverRole: order_by
  staticServers_aggregate: serverCheckout_aggregate_order_by
}

"""
select columns of table "shepherd_serverrole"
"""
enum serverRole_select_column {
  """column name"""
  id

  """column name"""
  serverRole
}

"""
columns and relationships of "shepherd_serverstatus"
"""
type serverStatus {
  id: bigint!
  serverStatus: String!

  """An array relationship"""
  servers(
    """distinct select on columns"""
    distinct_on: [staticServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staticServer_order_by!]

    """filter the rows returned"""
    where: staticServer_bool_exp
  ): [staticServer!]!
}

"""
Boolean expression to filter rows from the table "shepherd_serverstatus". All fields are combined with a logical 'AND'.
"""
input serverStatus_bool_exp {
  _and: [serverStatus_bool_exp!]
  _not: serverStatus_bool_exp
  _or: [serverStatus_bool_exp!]
  id: bigint_comparison_exp
  serverStatus: String_comparison_exp
  servers: staticServer_bool_exp
}

"""Ordering options when selecting data from "shepherd_serverstatus"."""
input serverStatus_order_by {
  id: order_by
  serverStatus: order_by
  servers_aggregate: staticServer_aggregate_order_by
}

"""
select columns of table "shepherd_serverstatus"
"""
enum serverStatus_select_column {
  """column name"""
  id

  """column name"""
  serverStatus
}

"""
columns and relationships of "shepherd_staticserver"
"""
type staticServer {
  """An array relationship"""
  auxServerAddresses(
    """distinct select on columns"""
    distinct_on: [auxServerAddresses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auxServerAddresses_order_by!]

    """filter the rows returned"""
    where: auxServerAddresses_bool_exp
  ): [auxServerAddresses!]!

  """An array relationship"""
  checkouts(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!

  """An array relationship"""
  comments(
    """distinct select on columns"""
    distinct_on: [serverNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverNote_order_by!]

    """filter the rows returned"""
    where: serverNote_bool_exp
  ): [serverNote!]!
  id: bigint!
  ipAddress: inet!
  lastUsedById: bigint
  name: String
  note: String

  """An object relationship"""
  serverProvider: serverProvider
  serverProviderId: bigint

  """An object relationship"""
  serverStatus: serverStatus
  serverStatusId: bigint

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "shepherd_staticserver"
"""
input staticServer_aggregate_order_by {
  avg: staticServer_avg_order_by
  count: order_by
  max: staticServer_max_order_by
  min: staticServer_min_order_by
  stddev: staticServer_stddev_order_by
  stddev_pop: staticServer_stddev_pop_order_by
  stddev_samp: staticServer_stddev_samp_order_by
  sum: staticServer_sum_order_by
  var_pop: staticServer_var_pop_order_by
  var_samp: staticServer_var_samp_order_by
  variance: staticServer_variance_order_by
}

"""
order by avg() on columns of table "shepherd_staticserver"
"""
input staticServer_avg_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
Boolean expression to filter rows from the table "shepherd_staticserver". All fields are combined with a logical 'AND'.
"""
input staticServer_bool_exp {
  _and: [staticServer_bool_exp!]
  _not: staticServer_bool_exp
  _or: [staticServer_bool_exp!]
  auxServerAddresses: auxServerAddresses_bool_exp
  checkouts: serverCheckout_bool_exp
  comments: serverNote_bool_exp
  id: bigint_comparison_exp
  ipAddress: inet_comparison_exp
  lastUsedById: bigint_comparison_exp
  name: String_comparison_exp
  note: String_comparison_exp
  serverProvider: serverProvider_bool_exp
  serverProviderId: bigint_comparison_exp
  serverStatus: serverStatus_bool_exp
  serverStatusId: bigint_comparison_exp
  user: user_bool_exp
}

"""
unique or primary key constraints on table "shepherd_staticserver"
"""
enum staticServer_constraint {
  """unique or primary key constraint"""
  shepherd_staticserver_ip_address_key

  """unique or primary key constraint"""
  shepherd_staticserver_pkey
}

"""
input type for incrementing numeric columns in table "shepherd_staticserver"
"""
input staticServer_inc_input {
  serverProviderId: bigint
  serverStatusId: bigint
}

"""
input type for inserting data into table "shepherd_staticserver"
"""
input staticServer_insert_input {
  auxServerAddresses: auxServerAddresses_arr_rel_insert_input
  checkouts: serverCheckout_arr_rel_insert_input
  comments: serverNote_arr_rel_insert_input
  ipAddress: inet
  name: String
  note: String
  serverProviderId: bigint
  serverStatusId: bigint
}

"""
order by max() on columns of table "shepherd_staticserver"
"""
input staticServer_max_order_by {
  id: order_by
  lastUsedById: order_by
  name: order_by
  note: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
order by min() on columns of table "shepherd_staticserver"
"""
input staticServer_min_order_by {
  id: order_by
  lastUsedById: order_by
  name: order_by
  note: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
response of any mutation on the table "shepherd_staticserver"
"""
type staticServer_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [staticServer!]!
}

"""
input type for inserting object relation for remote table "shepherd_staticserver"
"""
input staticServer_obj_rel_insert_input {
  data: staticServer_insert_input!

  """upsert condition"""
  on_conflict: staticServer_on_conflict
}

"""
on_conflict condition type for table "shepherd_staticserver"
"""
input staticServer_on_conflict {
  constraint: staticServer_constraint!
  update_columns: [staticServer_update_column!]! = []
  where: staticServer_bool_exp
}

"""Ordering options when selecting data from "shepherd_staticserver"."""
input staticServer_order_by {
  auxServerAddresses_aggregate: auxServerAddresses_aggregate_order_by
  checkouts_aggregate: serverCheckout_aggregate_order_by
  comments_aggregate: serverNote_aggregate_order_by
  id: order_by
  ipAddress: order_by
  lastUsedById: order_by
  name: order_by
  note: order_by
  serverProvider: serverProvider_order_by
  serverProviderId: order_by
  serverStatus: serverStatus_order_by
  serverStatusId: order_by
  user: user_order_by
}

"""primary key columns input for table: staticServer"""
input staticServer_pk_columns_input {
  id: bigint!
}

"""
select columns of table "shepherd_staticserver"
"""
enum staticServer_select_column {
  """column name"""
  id

  """column name"""
  ipAddress

  """column name"""
  lastUsedById

  """column name"""
  name

  """column name"""
  note

  """column name"""
  serverProviderId

  """column name"""
  serverStatusId
}

"""
input type for updating data in table "shepherd_staticserver"
"""
input staticServer_set_input {
  ipAddress: inet
  name: String
  note: String
  serverProviderId: bigint
  serverStatusId: bigint
}

"""
order by stddev() on columns of table "shepherd_staticserver"
"""
input staticServer_stddev_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
order by stddev_pop() on columns of table "shepherd_staticserver"
"""
input staticServer_stddev_pop_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
order by stddev_samp() on columns of table "shepherd_staticserver"
"""
input staticServer_stddev_samp_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
order by sum() on columns of table "shepherd_staticserver"
"""
input staticServer_sum_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
update columns of table "shepherd_staticserver"
"""
enum staticServer_update_column {
  """column name"""
  ipAddress

  """column name"""
  name

  """column name"""
  note

  """column name"""
  serverProviderId

  """column name"""
  serverStatusId
}

"""
order by var_pop() on columns of table "shepherd_staticserver"
"""
input staticServer_var_pop_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
order by var_samp() on columns of table "shepherd_staticserver"
"""
input staticServer_var_samp_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

"""
order by variance() on columns of table "shepherd_staticserver"
"""
input staticServer_variance_order_by {
  id: order_by
  lastUsedById: order_by
  serverProviderId: order_by
  serverStatusId: order_by
}

type subscription_root {
  """
  fetch data from the table: "shepherd_activitytype"
  """
  activityType(
    """distinct select on columns"""
    distinct_on: [activityType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [activityType_order_by!]

    """filter the rows returned"""
    where: activityType_bool_exp
  ): [activityType!]!

  """
  fetch data from the table: "shepherd_activitytype" using primary key columns
  """
  activityType_by_pk(id: bigint!): activityType

  """
  fetch data from the table: "reporting_archive"
  """
  archive(
    """distinct select on columns"""
    distinct_on: [archive_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [archive_order_by!]

    """filter the rows returned"""
    where: archive_bool_exp
  ): [archive!]!

  """
  fetch data from the table: "reporting_archive" using primary key columns
  """
  archive_by_pk(id: bigint!): archive

  """An array relationship"""
  auxServerAddresses(
    """distinct select on columns"""
    distinct_on: [auxServerAddresses_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [auxServerAddresses_order_by!]

    """filter the rows returned"""
    where: auxServerAddresses_bool_exp
  ): [auxServerAddresses!]!

  """
  fetch data from the table: "rolodex_client"
  """
  client(
    """distinct select on columns"""
    distinct_on: [client_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [client_order_by!]

    """filter the rows returned"""
    where: client_bool_exp
  ): [client!]!

  """
  fetch data from the table: "rolodex_clientinvite"
  """
  clientInvite(
    """distinct select on columns"""
    distinct_on: [clientInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientInvite_order_by!]

    """filter the rows returned"""
    where: clientInvite_bool_exp
  ): [clientInvite!]!

  """
  fetch data from the table: "rolodex_clientinvite" using primary key columns
  """
  clientInvite_by_pk(id: bigint!): clientInvite

  """
  fetch data from the table: "rolodex_clientnote"
  """
  clientNote(
    """distinct select on columns"""
    distinct_on: [clientNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientNote_order_by!]

    """filter the rows returned"""
    where: clientNote_bool_exp
  ): [clientNote!]!

  """
  fetch data from the table: "rolodex_clientnote" using primary key columns
  """
  clientNote_by_pk(id: bigint!): clientNote

  """fetch data from the table: "rolodex_client" using primary key columns"""
  client_by_pk(id: bigint!): client

  """
  fetch data from the table: "shepherd_transientserver"
  """
  cloudServer(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!

  """
  fetch data from the table: "shepherd_transientserver" using primary key columns
  """
  cloudServer_by_pk(id: bigint!): cloudServer

  """
  fetch data from the table: "commandcenter_companyinformation"
  """
  companyInfo(
    """distinct select on columns"""
    distinct_on: [companyInfo_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [companyInfo_order_by!]

    """filter the rows returned"""
    where: companyInfo_bool_exp
  ): [companyInfo!]!

  """
  fetch data from the table: "commandcenter_companyinformation" using primary key columns
  """
  companyInfo_by_pk(id: bigint!): companyInfo

  """An array relationship"""
  contacts(
    """distinct select on columns"""
    distinct_on: [contacts_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [contacts_order_by!]

    """filter the rows returned"""
    where: contacts_bool_exp
  ): [contacts!]!

  """
  fetch data from the table: "rolodex_clientcontact" using primary key columns
  """
  contacts_by_pk(id: bigint!): contacts

  """
  fetch data from the table: "reporting_doctype"
  """
  docType(
    """distinct select on columns"""
    distinct_on: [docType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [docType_order_by!]

    """filter the rows returned"""
    where: docType_bool_exp
  ): [docType!]!

  """
  fetch data from the table: "reporting_doctype" using primary key columns
  """
  docType_by_pk(id: bigint!): docType

  """
  fetch data from the table: "shepherd_domain"
  """
  domain(
    """distinct select on columns"""
    distinct_on: [domain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domain_order_by!]

    """filter the rows returned"""
    where: domain_bool_exp
  ): [domain!]!

  """
  fetch data from the table: "shepherd_history"
  """
  domainCheckout(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!

  """
  fetch data from the table: "shepherd_history" using primary key columns
  """
  domainCheckout_by_pk(id: bigint!): domainCheckout

  """
  fetch data from the table: "shepherd_domainnote"
  """
  domainNote(
    """distinct select on columns"""
    distinct_on: [domainNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainNote_order_by!]

    """filter the rows returned"""
    where: domainNote_bool_exp
  ): [domainNote!]!

  """
  fetch data from the table: "shepherd_domainnote" using primary key columns
  """
  domainNote_by_pk(id: bigint!): domainNote

  """
  fetch data from the table: "shepherd_domainserverconnection"
  """
  domainServerConnection(
    """distinct select on columns"""
    distinct_on: [domainServerConnection_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainServerConnection_order_by!]

    """filter the rows returned"""
    where: domainServerConnection_bool_exp
  ): [domainServerConnection!]!

  """
  fetch data from the table: "shepherd_domainserverconnection" using primary key columns
  """
  domainServerConnection_by_pk(id: bigint!): domainServerConnection

  """
  fetch data from the table: "shepherd_domainstatus"
  """
  domainStatus(
    """distinct select on columns"""
    distinct_on: [domainStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainStatus_order_by!]

    """filter the rows returned"""
    where: domainStatus_bool_exp
  ): [domainStatus!]!

  """
  fetch data from the table: "shepherd_domainstatus" using primary key columns
  """
  domainStatus_by_pk(id: bigint!): domainStatus

  """fetch data from the table: "shepherd_domain" using primary key columns"""
  domain_by_pk(id: bigint!): domain

  """
  fetch data from the table: "reporting_evidence"
  """
  evidence(
    """distinct select on columns"""
    distinct_on: [evidence_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evidence_order_by!]

    """filter the rows returned"""
    where: evidence_bool_exp
  ): [evidence!]!

  """
  fetch data from the table: "reporting_evidence" using primary key columns
  """
  evidence_by_pk(id: bigint!): evidence

  """
  fetch data from the table: "reporting_finding"
  """
  finding(
    """distinct select on columns"""
    distinct_on: [finding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [finding_order_by!]

    """filter the rows returned"""
    where: finding_bool_exp
  ): [finding!]!

  """
  fetch data from the table: "reporting_findingnote"
  """
  findingNote(
    """distinct select on columns"""
    distinct_on: [findingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingNote_order_by!]

    """filter the rows returned"""
    where: findingNote_bool_exp
  ): [findingNote!]!

  """
  fetch data from the table: "reporting_findingnote" using primary key columns
  """
  findingNote_by_pk(id: bigint!): findingNote

  """
  fetch data from the table: "reporting_severity"
  """
  findingSeverity(
    """distinct select on columns"""
    distinct_on: [findingSeverity_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingSeverity_order_by!]

    """filter the rows returned"""
    where: findingSeverity_bool_exp
  ): [findingSeverity!]!

  """
  fetch data from the table: "reporting_severity" using primary key columns
  """
  findingSeverity_by_pk(id: bigint!): findingSeverity

  """
  fetch data from the table: "reporting_findingtype"
  """
  findingType(
    """distinct select on columns"""
    distinct_on: [findingType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingType_order_by!]

    """filter the rows returned"""
    where: findingType_bool_exp
  ): [findingType!]!

  """
  fetch data from the table: "reporting_findingtype" using primary key columns
  """
  findingType_by_pk(id: bigint!): findingType

  """
  fetch data from the table: "reporting_finding" using primary key columns
  """
  finding_by_pk(id: bigint!): finding

  """
  fetch data from the table: "shepherd_healthstatus"
  """
  healthStatus(
    """distinct select on columns"""
    distinct_on: [healthStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [healthStatus_order_by!]

    """filter the rows returned"""
    where: healthStatus_bool_exp
  ): [healthStatus!]!

  """
  fetch data from the table: "shepherd_healthstatus" using primary key columns
  """
  healthStatus_by_pk(id: bigint!): healthStatus

  """
  fetch data from the table: "rolodex_projectobjective"
  """
  objective(
    """distinct select on columns"""
    distinct_on: [objective_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objective_order_by!]

    """filter the rows returned"""
    where: objective_bool_exp
  ): [objective!]!

  """
  fetch data from the table: "rolodex_objectivepriority"
  """
  objectivePriority(
    """distinct select on columns"""
    distinct_on: [objectivePriority_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectivePriority_order_by!]

    """filter the rows returned"""
    where: objectivePriority_bool_exp
  ): [objectivePriority!]!

  """
  fetch data from the table: "rolodex_objectivepriority" using primary key columns
  """
  objectivePriority_by_pk(id: bigint!): objectivePriority

  """
  fetch data from the table: "rolodex_objectivestatus"
  """
  objectiveStatus(
    """distinct select on columns"""
    distinct_on: [objectiveStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectiveStatus_order_by!]

    """filter the rows returned"""
    where: objectiveStatus_bool_exp
  ): [objectiveStatus!]!

  """
  fetch data from the table: "rolodex_objectivestatus" using primary key columns
  """
  objectiveStatus_by_pk(id: bigint!): objectiveStatus

  """
  fetch data from the table: "rolodex_projectsubtask"
  """
  objectiveSubTask(
    """distinct select on columns"""
    distinct_on: [objectiveSubTask_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [objectiveSubTask_order_by!]

    """filter the rows returned"""
    where: objectiveSubTask_bool_exp
  ): [objectiveSubTask!]!

  """
  fetch data from the table: "rolodex_projectsubtask" using primary key columns
  """
  objectiveSubTask_by_pk(id: bigint!): objectiveSubTask

  """
  fetch data from the table: "rolodex_projectobjective" using primary key columns
  """
  objective_by_pk(id: bigint!): objective

  """
  fetch data from the table: "oplog_oplog"
  """
  oplog(
    """distinct select on columns"""
    distinct_on: [oplog_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oplog_order_by!]

    """filter the rows returned"""
    where: oplog_bool_exp
  ): [oplog!]!

  """
  fetch data from the table: "oplog_oplogentry"
  """
  oplogEntry(
    """distinct select on columns"""
    distinct_on: [oplogEntry_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [oplogEntry_order_by!]

    """filter the rows returned"""
    where: oplogEntry_bool_exp
  ): [oplogEntry!]!

  """
  fetch data from the table: "oplog_oplogentry" using primary key columns
  """
  oplogEntry_by_pk(id: bigint!): oplogEntry

  """fetch data from the table: "oplog_oplog" using primary key columns"""
  oplog_by_pk(id: bigint!): oplog

  """
  fetch data from the table: "rolodex_project"
  """
  project(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """
  fetch data from the table: "rolodex_projectassignment"
  """
  projectAssignment(
    """distinct select on columns"""
    distinct_on: [projectAssignment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectAssignment_order_by!]

    """filter the rows returned"""
    where: projectAssignment_bool_exp
  ): [projectAssignment!]!

  """
  fetch data from the table: "rolodex_projectassignment" using primary key columns
  """
  projectAssignment_by_pk(id: bigint!): projectAssignment

  """
  fetch data from the table: "rolodex_projectinvite"
  """
  projectInvite(
    """distinct select on columns"""
    distinct_on: [projectInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectInvite_order_by!]

    """filter the rows returned"""
    where: projectInvite_bool_exp
  ): [projectInvite!]!

  """
  fetch data from the table: "rolodex_projectinvite" using primary key columns
  """
  projectInvite_by_pk(id: bigint!): projectInvite

  """
  fetch data from the table: "rolodex_projectnote"
  """
  projectNote(
    """distinct select on columns"""
    distinct_on: [projectNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectNote_order_by!]

    """filter the rows returned"""
    where: projectNote_bool_exp
  ): [projectNote!]!

  """
  fetch data from the table: "rolodex_projectnote" using primary key columns
  """
  projectNote_by_pk(id: bigint!): projectNote

  """
  fetch data from the table: "rolodex_projectrole"
  """
  projectRole(
    """distinct select on columns"""
    distinct_on: [projectRole_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectRole_order_by!]

    """filter the rows returned"""
    where: projectRole_bool_exp
  ): [projectRole!]!

  """
  fetch data from the table: "rolodex_projectrole" using primary key columns
  """
  projectRole_by_pk(id: bigint!): projectRole

  """
  fetch data from the table: "rolodex_projecttype"
  """
  projectType(
    """distinct select on columns"""
    distinct_on: [projectType_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectType_order_by!]

    """filter the rows returned"""
    where: projectType_bool_exp
  ): [projectType!]!

  """
  fetch data from the table: "rolodex_projecttype" using primary key columns
  """
  projectType_by_pk(id: bigint!): projectType

  """fetch data from the table: "rolodex_project" using primary key columns"""
  project_by_pk(id: bigint!): project

  """
  fetch data from the table: "reporting_report"
  """
  report(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!

  """
  fetch data from the table: "commandcenter_reportconfiguration"
  """
  reportConfiguration(
    """distinct select on columns"""
    distinct_on: [reportConfiguration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportConfiguration_order_by!]

    """filter the rows returned"""
    where: reportConfiguration_bool_exp
  ): [reportConfiguration!]!

  """
  fetch data from the table: "commandcenter_reportconfiguration" using primary key columns
  """
  reportConfiguration_by_pk(id: bigint!): reportConfiguration

  """
  fetch data from the table: "reporting_report" using primary key columns
  """
  report_by_pk(id: bigint!): report

  """
  fetch data from the table: "reporting_reportfindinglink"
  """
  reportedFinding(
    """distinct select on columns"""
    distinct_on: [reportedFinding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFinding_order_by!]

    """filter the rows returned"""
    where: reportedFinding_bool_exp
  ): [reportedFinding!]!

  """
  fetch data from the table: "reporting_localfindingnote"
  """
  reportedFindingNote(
    """distinct select on columns"""
    distinct_on: [reportedFindingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFindingNote_order_by!]

    """filter the rows returned"""
    where: reportedFindingNote_bool_exp
  ): [reportedFindingNote!]!

  """
  fetch data from the table: "reporting_localfindingnote" using primary key columns
  """
  reportedFindingNote_by_pk(id: bigint!): reportedFindingNote

  """
  fetch data from the table: "reporting_reportfindinglink" using primary key columns
  """
  reportedFinding_by_pk(id: bigint!): reportedFinding

  """
  fetch data from the table: "rolodex_projectscope"
  """
  scope(
    """distinct select on columns"""
    distinct_on: [scope_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [scope_order_by!]

    """filter the rows returned"""
    where: scope_bool_exp
  ): [scope!]!

  """
  fetch data from the table: "rolodex_projectscope" using primary key columns
  """
  scope_by_pk(id: bigint!): scope

  """
  fetch data from the table: "shepherd_serverhistory"
  """
  serverCheckout(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!

  """
  fetch data from the table: "shepherd_serverhistory" using primary key columns
  """
  serverCheckout_by_pk(id: bigint!): serverCheckout

  """
  fetch data from the table: "shepherd_servernote"
  """
  serverNote(
    """distinct select on columns"""
    distinct_on: [serverNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverNote_order_by!]

    """filter the rows returned"""
    where: serverNote_bool_exp
  ): [serverNote!]!

  """
  fetch data from the table: "shepherd_servernote" using primary key columns
  """
  serverNote_by_pk(id: bigint!): serverNote

  """
  fetch data from the table: "shepherd_serverprovider"
  """
  serverProvider(
    """distinct select on columns"""
    distinct_on: [serverProvider_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverProvider_order_by!]

    """filter the rows returned"""
    where: serverProvider_bool_exp
  ): [serverProvider!]!

  """
  fetch data from the table: "shepherd_serverprovider" using primary key columns
  """
  serverProvider_by_pk(id: bigint!): serverProvider

  """
  fetch data from the table: "shepherd_serverrole"
  """
  serverRole(
    """distinct select on columns"""
    distinct_on: [serverRole_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverRole_order_by!]

    """filter the rows returned"""
    where: serverRole_bool_exp
  ): [serverRole!]!

  """
  fetch data from the table: "shepherd_serverrole" using primary key columns
  """
  serverRole_by_pk(id: bigint!): serverRole

  """
  fetch data from the table: "shepherd_serverstatus"
  """
  serverStatus(
    """distinct select on columns"""
    distinct_on: [serverStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverStatus_order_by!]

    """filter the rows returned"""
    where: serverStatus_bool_exp
  ): [serverStatus!]!

  """
  fetch data from the table: "shepherd_serverstatus" using primary key columns
  """
  serverStatus_by_pk(id: bigint!): serverStatus

  """
  fetch data from the table: "shepherd_staticserver"
  """
  staticServer(
    """distinct select on columns"""
    distinct_on: [staticServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staticServer_order_by!]

    """filter the rows returned"""
    where: staticServer_bool_exp
  ): [staticServer!]!

  """
  fetch data from the table: "shepherd_staticserver" using primary key columns
  """
  staticServer_by_pk(id: bigint!): staticServer

  """
  fetch data from the table: "rolodex_projecttarget"
  """
  target(
    """distinct select on columns"""
    distinct_on: [target_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [target_order_by!]

    """filter the rows returned"""
    where: target_bool_exp
  ): [target!]!

  """
  fetch data from the table: "rolodex_projecttarget" using primary key columns
  """
  target_by_pk(id: bigint!): target

  """
  fetch data from the table: "django_q_task"
  """
  task(
    """distinct select on columns"""
    distinct_on: [task_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [task_order_by!]

    """filter the rows returned"""
    where: task_bool_exp
  ): [task!]!

  """fetch data from the table: "django_q_task" using primary key columns"""
  task_by_pk(id: String!): task

  """
  fetch data from the table: "reporting_reporttemplate"
  """
  template(
    """distinct select on columns"""
    distinct_on: [template_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [template_order_by!]

    """filter the rows returned"""
    where: template_bool_exp
  ): [template!]!

  """
  fetch data from the table: "reporting_reporttemplate" using primary key columns
  """
  template_by_pk(id: bigint!): template

  """
  fetch data from the table: "users_user"
  """
  user(
    """distinct select on columns"""
    distinct_on: [user_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [user_order_by!]

    """filter the rows returned"""
    where: user_bool_exp
  ): [user!]!

  """
  fetch data from the table: "home_userprofile"
  """
  userProfile(
    """distinct select on columns"""
    distinct_on: [userProfile_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [userProfile_order_by!]

    """filter the rows returned"""
    where: userProfile_bool_exp
  ): [userProfile!]!

  """fetch data from the table: "users_user" using primary key columns"""
  user_by_pk(id: bigint!): user

  """
  fetch data from the table: "shepherd_whoisstatus"
  """
  whoisStatus(
    """distinct select on columns"""
    distinct_on: [whoisStatus_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [whoisStatus_order_by!]

    """filter the rows returned"""
    where: whoisStatus_bool_exp
  ): [whoisStatus!]!

  """
  fetch data from the table: "shepherd_whoisstatus" using primary key columns
  """
  whoisStatus_by_pk(id: bigint!): whoisStatus
}

"""
columns and relationships of "rolodex_projecttarget"
"""
type target {
  compromised: Boolean!
  hostname: String
  id: bigint!
  ipAddress: inet
  note: String

  """An object relationship"""
  project: project!
  projectId: bigint!
}

"""
order by aggregate values of table "rolodex_projecttarget"
"""
input target_aggregate_order_by {
  avg: target_avg_order_by
  count: order_by
  max: target_max_order_by
  min: target_min_order_by
  stddev: target_stddev_order_by
  stddev_pop: target_stddev_pop_order_by
  stddev_samp: target_stddev_samp_order_by
  sum: target_sum_order_by
  var_pop: target_var_pop_order_by
  var_samp: target_var_samp_order_by
  variance: target_variance_order_by
}

"""
input type for inserting array relation for remote table "rolodex_projecttarget"
"""
input target_arr_rel_insert_input {
  data: [target_insert_input!]!

  """upsert condition"""
  on_conflict: target_on_conflict
}

"""
order by avg() on columns of table "rolodex_projecttarget"
"""
input target_avg_order_by {
  id: order_by
  projectId: order_by
}

"""
Boolean expression to filter rows from the table "rolodex_projecttarget". All fields are combined with a logical 'AND'.
"""
input target_bool_exp {
  _and: [target_bool_exp!]
  _not: target_bool_exp
  _or: [target_bool_exp!]
  compromised: Boolean_comparison_exp
  hostname: String_comparison_exp
  id: bigint_comparison_exp
  ipAddress: inet_comparison_exp
  note: String_comparison_exp
  project: project_bool_exp
  projectId: bigint_comparison_exp
}

"""
unique or primary key constraints on table "rolodex_projecttarget"
"""
enum target_constraint {
  """unique or primary key constraint"""
  rolodex_projecttarget_pkey
}

"""
input type for incrementing numeric columns in table "rolodex_projecttarget"
"""
input target_inc_input {
  projectId: bigint
}

"""
input type for inserting data into table "rolodex_projecttarget"
"""
input target_insert_input {
  compromised: Boolean
  hostname: String
  ipAddress: inet
  note: String
  project: project_obj_rel_insert_input
  projectId: bigint
}

"""
order by max() on columns of table "rolodex_projecttarget"
"""
input target_max_order_by {
  hostname: order_by
  id: order_by
  note: order_by
  projectId: order_by
}

"""
order by min() on columns of table "rolodex_projecttarget"
"""
input target_min_order_by {
  hostname: order_by
  id: order_by
  note: order_by
  projectId: order_by
}

"""
response of any mutation on the table "rolodex_projecttarget"
"""
type target_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [target!]!
}

"""
on_conflict condition type for table "rolodex_projecttarget"
"""
input target_on_conflict {
  constraint: target_constraint!
  update_columns: [target_update_column!]! = []
  where: target_bool_exp
}

"""Ordering options when selecting data from "rolodex_projecttarget"."""
input target_order_by {
  compromised: order_by
  hostname: order_by
  id: order_by
  ipAddress: order_by
  note: order_by
  project: project_order_by
  projectId: order_by
}

"""primary key columns input for table: target"""
input target_pk_columns_input {
  id: bigint!
}

"""
select columns of table "rolodex_projecttarget"
"""
enum target_select_column {
  """column name"""
  compromised

  """column name"""
  hostname

  """column name"""
  id

  """column name"""
  ipAddress

  """column name"""
  note

  """column name"""
  projectId
}

"""
input type for updating data in table "rolodex_projecttarget"
"""
input target_set_input {
  compromised: Boolean
  hostname: String
  ipAddress: inet
  note: String
  projectId: bigint
}

"""
order by stddev() on columns of table "rolodex_projecttarget"
"""
input target_stddev_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_pop() on columns of table "rolodex_projecttarget"
"""
input target_stddev_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by stddev_samp() on columns of table "rolodex_projecttarget"
"""
input target_stddev_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by sum() on columns of table "rolodex_projecttarget"
"""
input target_sum_order_by {
  id: order_by
  projectId: order_by
}

"""
update columns of table "rolodex_projecttarget"
"""
enum target_update_column {
  """column name"""
  compromised

  """column name"""
  hostname

  """column name"""
  ipAddress

  """column name"""
  note

  """column name"""
  projectId
}

"""
order by var_pop() on columns of table "rolodex_projecttarget"
"""
input target_var_pop_order_by {
  id: order_by
  projectId: order_by
}

"""
order by var_samp() on columns of table "rolodex_projecttarget"
"""
input target_var_samp_order_by {
  id: order_by
  projectId: order_by
}

"""
order by variance() on columns of table "rolodex_projecttarget"
"""
input target_variance_order_by {
  id: order_by
  projectId: order_by
}

"""
columns and relationships of "django_q_task"
"""
type task {
  args: String
  attempt_count: Int!
  func: String!
  group: String
  hook: String
  id: String!
  kwargs: String
  name: String!
  result: String
  started: timestamptz!
  stopped: timestamptz!
  success: Boolean!
}

"""
Boolean expression to filter rows from the table "django_q_task". All fields are combined with a logical 'AND'.
"""
input task_bool_exp {
  _and: [task_bool_exp!]
  _not: task_bool_exp
  _or: [task_bool_exp!]
  args: String_comparison_exp
  attempt_count: Int_comparison_exp
  func: String_comparison_exp
  group: String_comparison_exp
  hook: String_comparison_exp
  id: String_comparison_exp
  kwargs: String_comparison_exp
  name: String_comparison_exp
  result: String_comparison_exp
  started: timestamptz_comparison_exp
  stopped: timestamptz_comparison_exp
  success: Boolean_comparison_exp
}

"""Ordering options when selecting data from "django_q_task"."""
input task_order_by {
  args: order_by
  attempt_count: order_by
  func: order_by
  group: order_by
  hook: order_by
  id: order_by
  kwargs: order_by
  name: order_by
  result: order_by
  started: order_by
  stopped: order_by
  success: order_by
}

"""
select columns of table "django_q_task"
"""
enum task_select_column {
  """column name"""
  args

  """column name"""
  attempt_count

  """column name"""
  func

  """column name"""
  group

  """column name"""
  hook

  """column name"""
  id

  """column name"""
  kwargs

  """column name"""
  name

  """column name"""
  result

  """column name"""
  started

  """column name"""
  stopped

  """column name"""
  success
}

"""
columns and relationships of "reporting_reporttemplate"
"""
type template {
  changelog: String

  """An object relationship"""
  client: client
  clientId: bigint

  """An array relationship"""
  commandcenterReportconfigurationsByDefaultPptxTemplateId(
    """distinct select on columns"""
    distinct_on: [reportConfiguration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportConfiguration_order_by!]

    """filter the rows returned"""
    where: reportConfiguration_bool_exp
  ): [reportConfiguration!]!

  """An array relationship"""
  commandcenter_reportconfigurations(
    """distinct select on columns"""
    distinct_on: [reportConfiguration_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportConfiguration_order_by!]

    """filter the rows returned"""
    where: reportConfiguration_bool_exp
  ): [reportConfiguration!]!
  description: String!
  docTypeId: bigint
  document: String!

  """An array relationship"""
  docxTemplates(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!
  id: bigint!
  lastUpdate: date!
  lintResult(
    """JSON select path"""
    path: String
  ): jsonb
  name: String

  """An array relationship"""
  pptxTemplates(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!
  protected: Boolean!

  """An object relationship"""
  reporting_doctype: docType
  uploadDate: date!
  uploadedById: bigint

  """An object relationship"""
  user: user
}

"""
order by aggregate values of table "reporting_reporttemplate"
"""
input template_aggregate_order_by {
  avg: template_avg_order_by
  count: order_by
  max: template_max_order_by
  min: template_min_order_by
  stddev: template_stddev_order_by
  stddev_pop: template_stddev_pop_order_by
  stddev_samp: template_stddev_samp_order_by
  sum: template_sum_order_by
  var_pop: template_var_pop_order_by
  var_samp: template_var_samp_order_by
  variance: template_variance_order_by
}

"""
order by avg() on columns of table "reporting_reporttemplate"
"""
input template_avg_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
Boolean expression to filter rows from the table "reporting_reporttemplate". All fields are combined with a logical 'AND'.
"""
input template_bool_exp {
  _and: [template_bool_exp!]
  _not: template_bool_exp
  _or: [template_bool_exp!]
  changelog: String_comparison_exp
  client: client_bool_exp
  clientId: bigint_comparison_exp
  commandcenterReportconfigurationsByDefaultPptxTemplateId: reportConfiguration_bool_exp
  commandcenter_reportconfigurations: reportConfiguration_bool_exp
  description: String_comparison_exp
  docTypeId: bigint_comparison_exp
  document: String_comparison_exp
  docxTemplates: report_bool_exp
  id: bigint_comparison_exp
  lastUpdate: date_comparison_exp
  lintResult: jsonb_comparison_exp
  name: String_comparison_exp
  pptxTemplates: report_bool_exp
  protected: Boolean_comparison_exp
  reporting_doctype: docType_bool_exp
  uploadDate: date_comparison_exp
  uploadedById: bigint_comparison_exp
  user: user_bool_exp
}

"""
input type for incrementing numeric columns in table "reporting_reporttemplate"
"""
input template_inc_input {
  clientId: bigint
  docTypeId: bigint
}

"""
order by max() on columns of table "reporting_reporttemplate"
"""
input template_max_order_by {
  changelog: order_by
  clientId: order_by
  description: order_by
  docTypeId: order_by
  document: order_by
  id: order_by
  lastUpdate: order_by
  name: order_by
  uploadDate: order_by
  uploadedById: order_by
}

"""
order by min() on columns of table "reporting_reporttemplate"
"""
input template_min_order_by {
  changelog: order_by
  clientId: order_by
  description: order_by
  docTypeId: order_by
  document: order_by
  id: order_by
  lastUpdate: order_by
  name: order_by
  uploadDate: order_by
  uploadedById: order_by
}

"""
response of any mutation on the table "reporting_reporttemplate"
"""
type template_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [template!]!
}

"""Ordering options when selecting data from "reporting_reporttemplate"."""
input template_order_by {
  changelog: order_by
  client: client_order_by
  clientId: order_by
  commandcenterReportconfigurationsByDefaultPptxTemplateId_aggregate: reportConfiguration_aggregate_order_by
  commandcenter_reportconfigurations_aggregate: reportConfiguration_aggregate_order_by
  description: order_by
  docTypeId: order_by
  document: order_by
  docxTemplates_aggregate: report_aggregate_order_by
  id: order_by
  lastUpdate: order_by
  lintResult: order_by
  name: order_by
  pptxTemplates_aggregate: report_aggregate_order_by
  protected: order_by
  reporting_doctype: docType_order_by
  uploadDate: order_by
  uploadedById: order_by
  user: user_order_by
}

"""primary key columns input for table: template"""
input template_pk_columns_input {
  id: bigint!
}

"""
select columns of table "reporting_reporttemplate"
"""
enum template_select_column {
  """column name"""
  changelog

  """column name"""
  clientId

  """column name"""
  description

  """column name"""
  docTypeId

  """column name"""
  document

  """column name"""
  id

  """column name"""
  lastUpdate

  """column name"""
  lintResult

  """column name"""
  name

  """column name"""
  protected

  """column name"""
  uploadDate

  """column name"""
  uploadedById
}

"""
input type for updating data in table "reporting_reporttemplate"
"""
input template_set_input {
  changelog: String
  clientId: bigint
  description: String
  docTypeId: bigint
  name: String
  protected: Boolean
}

"""
order by stddev() on columns of table "reporting_reporttemplate"
"""
input template_stddev_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by stddev_pop() on columns of table "reporting_reporttemplate"
"""
input template_stddev_pop_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by stddev_samp() on columns of table "reporting_reporttemplate"
"""
input template_stddev_samp_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by sum() on columns of table "reporting_reporttemplate"
"""
input template_sum_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by var_pop() on columns of table "reporting_reporttemplate"
"""
input template_var_pop_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by var_samp() on columns of table "reporting_reporttemplate"
"""
input template_var_samp_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

"""
order by variance() on columns of table "reporting_reporttemplate"
"""
input template_variance_order_by {
  clientId: order_by
  docTypeId: order_by
  id: order_by
  uploadedById: order_by
}

scalar time

"""
Boolean expression to compare columns of type "time". All fields are combined with logical 'AND'.
"""
input time_comparison_exp {
  _eq: time
  _gt: time
  _gte: time
  _in: [time!]
  _is_null: Boolean
  _lt: time
  _lte: time
  _neq: time
  _nin: [time!]
}

scalar timestamptz

"""
Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'.
"""
input timestamptz_comparison_exp {
  _eq: timestamptz
  _gt: timestamptz
  _gte: timestamptz
  _in: [timestamptz!]
  _is_null: Boolean
  _lt: timestamptz
  _lte: timestamptz
  _neq: timestamptz
  _nin: [timestamptz!]
}

"""
columns and relationships of "users_user"
"""
type user {
  """An array relationship"""
  assignments(
    """distinct select on columns"""
    distinct_on: [projectAssignment_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectAssignment_order_by!]

    """filter the rows returned"""
    where: projectAssignment_bool_exp
  ): [projectAssignment!]!

  """An array relationship"""
  clientInvites(
    """distinct select on columns"""
    distinct_on: [clientInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientInvite_order_by!]

    """filter the rows returned"""
    where: clientInvite_bool_exp
  ): [clientInvite!]!

  """An array relationship"""
  clientNotes(
    """distinct select on columns"""
    distinct_on: [clientNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [clientNote_order_by!]

    """filter the rows returned"""
    where: clientNote_bool_exp
  ): [clientNote!]!

  """An array relationship"""
  cloudServers(
    """distinct select on columns"""
    distinct_on: [cloudServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [cloudServer_order_by!]

    """filter the rows returned"""
    where: cloudServer_bool_exp
  ): [cloudServer!]!

  """An array relationship"""
  domainCheckouts(
    """distinct select on columns"""
    distinct_on: [domainCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainCheckout_order_by!]

    """filter the rows returned"""
    where: domainCheckout_bool_exp
  ): [domainCheckout!]!

  """An array relationship"""
  domainNotes(
    """distinct select on columns"""
    distinct_on: [domainNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domainNote_order_by!]

    """filter the rows returned"""
    where: domainNote_bool_exp
  ): [domainNote!]!

  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domain_order_by!]

    """filter the rows returned"""
    where: domain_bool_exp
  ): [domain!]!
  email: String!

  """An array relationship"""
  evidences(
    """distinct select on columns"""
    distinct_on: [evidence_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [evidence_order_by!]

    """filter the rows returned"""
    where: evidence_bool_exp
  ): [evidence!]!

  """An array relationship"""
  findingNotes(
    """distinct select on columns"""
    distinct_on: [findingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [findingNote_order_by!]

    """filter the rows returned"""
    where: findingNote_bool_exp
  ): [findingNote!]!
  id: bigint!
  isActive: Boolean!
  name: String!
  phone: String

  """An object relationship"""
  profile: userProfile

  """An array relationship"""
  projectInvites(
    """distinct select on columns"""
    distinct_on: [projectInvite_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectInvite_order_by!]

    """filter the rows returned"""
    where: projectInvite_bool_exp
  ): [projectInvite!]!

  """An array relationship"""
  projectNotes(
    """distinct select on columns"""
    distinct_on: [projectNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [projectNote_order_by!]

    """filter the rows returned"""
    where: projectNote_bool_exp
  ): [projectNote!]!

  """An array relationship"""
  projects(
    """distinct select on columns"""
    distinct_on: [project_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [project_order_by!]

    """filter the rows returned"""
    where: project_bool_exp
  ): [project!]!

  """An array relationship"""
  reportTemplates(
    """distinct select on columns"""
    distinct_on: [template_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [template_order_by!]

    """filter the rows returned"""
    where: template_bool_exp
  ): [template!]!

  """An array relationship"""
  reportedFindingNotes(
    """distinct select on columns"""
    distinct_on: [reportedFindingNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFindingNote_order_by!]

    """filter the rows returned"""
    where: reportedFindingNote_bool_exp
  ): [reportedFindingNote!]!

  """An array relationship"""
  reportedFindings(
    """distinct select on columns"""
    distinct_on: [reportedFinding_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [reportedFinding_order_by!]

    """filter the rows returned"""
    where: reportedFinding_bool_exp
  ): [reportedFinding!]!

  """An array relationship"""
  reports(
    """distinct select on columns"""
    distinct_on: [report_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [report_order_by!]

    """filter the rows returned"""
    where: report_bool_exp
  ): [report!]!
  role: String!

  """An array relationship"""
  serverCheckouts(
    """distinct select on columns"""
    distinct_on: [serverCheckout_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverCheckout_order_by!]

    """filter the rows returned"""
    where: serverCheckout_bool_exp
  ): [serverCheckout!]!

  """An array relationship"""
  serverNotes(
    """distinct select on columns"""
    distinct_on: [serverNote_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [serverNote_order_by!]

    """filter the rows returned"""
    where: serverNote_bool_exp
  ): [serverNote!]!

  """An array relationship"""
  servers(
    """distinct select on columns"""
    distinct_on: [staticServer_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [staticServer_order_by!]

    """filter the rows returned"""
    where: staticServer_bool_exp
  ): [staticServer!]!
  timezone: String!
  username: String!
}

"""
columns and relationships of "home_userprofile"
"""
type userProfile {
  avatar: String!

  """An object relationship"""
  user: user!
  userId: bigint!
}

"""
Boolean expression to filter rows from the table "home_userprofile". All fields are combined with a logical 'AND'.
"""
input userProfile_bool_exp {
  _and: [userProfile_bool_exp!]
  _not: userProfile_bool_exp
  _or: [userProfile_bool_exp!]
  avatar: String_comparison_exp
  user: user_bool_exp
  userId: bigint_comparison_exp
}

"""
response of any mutation on the table "home_userprofile"
"""
type userProfile_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [userProfile!]!
}

"""Ordering options when selecting data from "home_userprofile"."""
input userProfile_order_by {
  avatar: order_by
  user: user_order_by
  userId: order_by
}

"""
select columns of table "home_userprofile"
"""
enum userProfile_select_column {
  """column name"""
  avatar

  """column name"""
  userId
}

"""
input type for updating data in table "home_userprofile"
"""
input userProfile_set_input {
  avatar: String
}

"""
Boolean expression to filter rows from the table "users_user". All fields are combined with a logical 'AND'.
"""
input user_bool_exp {
  _and: [user_bool_exp!]
  _not: user_bool_exp
  _or: [user_bool_exp!]
  assignments: projectAssignment_bool_exp
  clientInvites: clientInvite_bool_exp
  clientNotes: clientNote_bool_exp
  cloudServers: cloudServer_bool_exp
  domainCheckouts: domainCheckout_bool_exp
  domainNotes: domainNote_bool_exp
  domains: domain_bool_exp
  email: String_comparison_exp
  evidences: evidence_bool_exp
  findingNotes: findingNote_bool_exp
  id: bigint_comparison_exp
  isActive: Boolean_comparison_exp
  name: String_comparison_exp
  phone: String_comparison_exp
  profile: userProfile_bool_exp
  projectInvites: projectInvite_bool_exp
  projectNotes: projectNote_bool_exp
  projects: project_bool_exp
  reportTemplates: template_bool_exp
  reportedFindingNotes: reportedFindingNote_bool_exp
  reportedFindings: reportedFinding_bool_exp
  reports: report_bool_exp
  role: String_comparison_exp
  serverCheckouts: serverCheckout_bool_exp
  serverNotes: serverNote_bool_exp
  servers: staticServer_bool_exp
  timezone: String_comparison_exp
  username: String_comparison_exp
}

"""
response of any mutation on the table "users_user"
"""
type user_mutation_response {
  """number of rows affected by the mutation"""
  affected_rows: Int!

  """data from the rows affected by the mutation"""
  returning: [user!]!
}

"""Ordering options when selecting data from "users_user"."""
input user_order_by {
  assignments_aggregate: projectAssignment_aggregate_order_by
  clientInvites_aggregate: clientInvite_aggregate_order_by
  clientNotes_aggregate: clientNote_aggregate_order_by
  cloudServers_aggregate: cloudServer_aggregate_order_by
  domainCheckouts_aggregate: domainCheckout_aggregate_order_by
  domainNotes_aggregate: domainNote_aggregate_order_by
  domains_aggregate: domain_aggregate_order_by
  email: order_by
  evidences_aggregate: evidence_aggregate_order_by
  findingNotes_aggregate: findingNote_aggregate_order_by
  id: order_by
  isActive: order_by
  name: order_by
  phone: order_by
  profile: userProfile_order_by
  projectInvites_aggregate: projectInvite_aggregate_order_by
  projectNotes_aggregate: projectNote_aggregate_order_by
  projects_aggregate: project_aggregate_order_by
  reportTemplates_aggregate: template_aggregate_order_by
  reportedFindingNotes_aggregate: reportedFindingNote_aggregate_order_by
  reportedFindings_aggregate: reportedFinding_aggregate_order_by
  reports_aggregate: report_aggregate_order_by
  role: order_by
  serverCheckouts_aggregate: serverCheckout_aggregate_order_by
  serverNotes_aggregate: serverNote_aggregate_order_by
  servers_aggregate: staticServer_aggregate_order_by
  timezone: order_by
  username: order_by
}

"""primary key columns input for table: user"""
input user_pk_columns_input {
  id: bigint!
}

"""
select columns of table "users_user"
"""
enum user_select_column {
  """column name"""
  email

  """column name"""
  id

  """column name"""
  isActive

  """column name"""
  name

  """column name"""
  phone

  """column name"""
  role

  """column name"""
  timezone

  """column name"""
  username
}

"""
input type for updating data in table "users_user"
"""
input user_set_input {
  email: String
  name: String
  phone: String
  timezone: String
  username: String
}

"""
columns and relationships of "shepherd_whoisstatus"
"""
type whoisStatus {
  """An array relationship"""
  domains(
    """distinct select on columns"""
    distinct_on: [domain_select_column!]

    """limit the number of rows returned"""
    limit: Int

    """skip the first n rows. Use only with order_by"""
    offset: Int

    """sort the rows by one or more columns"""
    order_by: [domain_order_by!]

    """filter the rows returned"""
    where: domain_bool_exp
  ): [domain!]!
  id: bigint!
  whoisStatus: String!
}

"""
Boolean expression to filter rows from the table "shepherd_whoisstatus". All fields are combined with a logical 'AND'.
"""
input whoisStatus_bool_exp {
  _and: [whoisStatus_bool_exp!]
  _not: whoisStatus_bool_exp
  _or: [whoisStatus_bool_exp!]
  domains: domain_bool_exp
  id: bigint_comparison_exp
  whoisStatus: String_comparison_exp
}

"""Ordering options when selecting data from "shepherd_whoisstatus"."""
input whoisStatus_order_by {
  domains_aggregate: domain_aggregate_order_by
  id: order_by
  whoisStatus: order_by
}

"""
select columns of table "shepherd_whoisstatus"
"""
enum whoisStatus_select_column {
  """column name"""
  id

  """column name"""
  whoisStatus
}

